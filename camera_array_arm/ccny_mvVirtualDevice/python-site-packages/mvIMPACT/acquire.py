# -*- coding: latin-1 -*-
# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.41
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('lib_mvIMPACT_acquire', [dirname(__file__)])
        except ImportError:
            import lib_mvIMPACT_acquire
            return lib_mvIMPACT_acquire
        if fp is not None:
            try:
                _mod = imp.load_module('lib_mvIMPACT_acquire', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    lib_mvIMPACT_acquire = swig_import_helper()
    del swig_import_helper
else:
    import lib_mvIMPACT_acquire
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


obj__, object = object, Exception

object = obj__

class pairstringint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.pairstringint_swiginit(self,lib_mvIMPACT_acquire.new_pairstringint(*args))
    first = _swig_property(lib_mvIMPACT_acquire.pairstringint_first_get, lib_mvIMPACT_acquire.pairstringint_first_set)
    second = _swig_property(lib_mvIMPACT_acquire.pairstringint_second_get, lib_mvIMPACT_acquire.pairstringint_second_set)
    def __len__(self): return 2
    def __repr__(self): return str((self.first, self.second))
    def __getitem__(self, index): 
      if not (index % 2): 
        return self.first
      else:
        return self.second
    def __setitem__(self, index, val):
      if not (index % 2): 
        self.first = val
      else:
        self.second = val
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_pairstringint
pairstringint_swigregister = lib_mvIMPACT_acquire.pairstringint_swigregister
pairstringint_swigregister(pairstringint)

class pairstringdouble(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.pairstringdouble_swiginit(self,lib_mvIMPACT_acquire.new_pairstringdouble(*args))
    first = _swig_property(lib_mvIMPACT_acquire.pairstringdouble_first_get, lib_mvIMPACT_acquire.pairstringdouble_first_set)
    second = _swig_property(lib_mvIMPACT_acquire.pairstringdouble_second_get, lib_mvIMPACT_acquire.pairstringdouble_second_set)
    def __len__(self): return 2
    def __repr__(self): return str((self.first, self.second))
    def __getitem__(self, index): 
      if not (index % 2): 
        return self.first
      else:
        return self.second
    def __setitem__(self, index, val):
      if not (index % 2): 
        self.first = val
      else:
        self.second = val
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_pairstringdouble
pairstringdouble_swigregister = lib_mvIMPACT_acquire.pairstringdouble_swigregister
pairstringdouble_swigregister(pairstringdouble)

MVIMPACT_ACQUIRE_MAJOR_VERSION = lib_mvIMPACT_acquire.MVIMPACT_ACQUIRE_MAJOR_VERSION
MVIMPACT_ACQUIRE_MINOR_VERSION = lib_mvIMPACT_acquire.MVIMPACT_ACQUIRE_MINOR_VERSION
MVIMPACT_ACQUIRE_RELEASE_VERSION = lib_mvIMPACT_acquire.MVIMPACT_ACQUIRE_RELEASE_VERSION
MVIMPACT_ACQUIRE_BUILD_VERSION = lib_mvIMPACT_acquire.MVIMPACT_ACQUIRE_BUILD_VERSION
MVIMPACT_ACQUIRE_VERSION_STRING = lib_mvIMPACT_acquire.MVIMPACT_ACQUIRE_VERSION_STRING
afAuto = lib_mvIMPACT_acquire.afAuto
afOdd = lib_mvIMPACT_acquire.afOdd
afEven = lib_mvIMPACT_acquire.afEven
afAny = lib_mvIMPACT_acquire.afAny
amContinuous = lib_mvIMPACT_acquire.amContinuous
amMultiFrame = lib_mvIMPACT_acquire.amMultiFrame
amSingleFrame = lib_mvIMPACT_acquire.amSingleFrame
assbDefault = lib_mvIMPACT_acquire.assbDefault
assbUser = lib_mvIMPACT_acquire.assbUser
amCentered = lib_mvIMPACT_acquire.amCentered
amFull = lib_mvIMPACT_acquire.amFull
amUseAoi = lib_mvIMPACT_acquire.amUseAoi
acsSlow = lib_mvIMPACT_acquire.acsSlow
acsMedium = lib_mvIMPACT_acquire.acsMedium
acsFast = lib_mvIMPACT_acquire.acsFast
acsUserDefined = lib_mvIMPACT_acquire.acsUserDefined
acmStandard = lib_mvIMPACT_acquire.acmStandard
acmDeviceSpecific = lib_mvIMPACT_acquire.acmDeviceSpecific
aecOff = lib_mvIMPACT_acquire.aecOff
aecOn = lib_mvIMPACT_acquire.aecOn
agcOff = lib_mvIMPACT_acquire.agcOff
agcOn = lib_mvIMPACT_acquire.agcOn
aocOff = lib_mvIMPACT_acquire.aocOff
aocOn = lib_mvIMPACT_acquire.aocOn
bcmLinearInterpolation = lib_mvIMPACT_acquire.bcmLinearInterpolation
bcmAdaptiveEdgeSensing = lib_mvIMPACT_acquire.bcmAdaptiveEdgeSensing
bcmAuto = lib_mvIMPACT_acquire.bcmAuto
bcmPacked = lib_mvIMPACT_acquire.bcmPacked
bcmLinearPacked = lib_mvIMPACT_acquire.bcmLinearPacked
bmpUndefined = lib_mvIMPACT_acquire.bmpUndefined
bmpGR = lib_mvIMPACT_acquire.bmpGR
bmpRG = lib_mvIMPACT_acquire.bmpRG
bmpBG = lib_mvIMPACT_acquire.bmpBG
bmpGB = lib_mvIMPACT_acquire.bmpGB
bwbrUnknown = lib_mvIMPACT_acquire.bwbrUnknown
bwbrOK = lib_mvIMPACT_acquire.bwbrOK
bwbrErrorUnknown = lib_mvIMPACT_acquire.bwbrErrorUnknown
bwbrErrorTooDark = lib_mvIMPACT_acquire.bwbrErrorTooDark
bwbrErrorTooBright = lib_mvIMPACT_acquire.bwbrErrorTooBright
bfdit2V = lib_mvIMPACT_acquire.bfdit2V
bfdit10V = lib_mvIMPACT_acquire.bfdit10V
bffmOff = lib_mvIMPACT_acquire.bffmOff
bffm64B = lib_mvIMPACT_acquire.bffm64B
bffm512B = lib_mvIMPACT_acquire.bffm512B
bfiscNone = lib_mvIMPACT_acquire.bfiscNone
bfiscExposure = lib_mvIMPACT_acquire.bfiscExposure
bfiscExposureAuto = lib_mvIMPACT_acquire.bfiscExposureAuto
bfiscGain = lib_mvIMPACT_acquire.bfiscGain
bfiscGainAuto = lib_mvIMPACT_acquire.bfiscGainAuto
bfiscOffset = lib_mvIMPACT_acquire.bfiscOffset
bfiscOffsetAuto = lib_mvIMPACT_acquire.bfiscOffsetAuto
bfiscBinning = lib_mvIMPACT_acquire.bfiscBinning
bfiscTrigger = lib_mvIMPACT_acquire.bfiscTrigger
bfiscFlash = lib_mvIMPACT_acquire.bfiscFlash
bfiscLineTrigger = lib_mvIMPACT_acquire.bfiscLineTrigger
bfiscShadingCorrection = lib_mvIMPACT_acquire.bfiscShadingCorrection
bfiscOverlappedExposure = lib_mvIMPACT_acquire.bfiscOverlappedExposure
bfiscFrameDelay = lib_mvIMPACT_acquire.bfiscFrameDelay
bfiscLineDelay = lib_mvIMPACT_acquire.bfiscLineDelay
bfiscAutoControlAOI = lib_mvIMPACT_acquire.bfiscAutoControlAOI
bfiscAutoControlSpeed = lib_mvIMPACT_acquire.bfiscAutoControlSpeed
bfiscAutoControlDelay = lib_mvIMPACT_acquire.bfiscAutoControlDelay
bfiscTemperatureSensor = lib_mvIMPACT_acquire.bfiscTemperatureSensor
bfkdmvBlueFOX = lib_mvIMPACT_acquire.bfkdmvBlueFOX
bfkdmvBlueFOX2 = lib_mvIMPACT_acquire.bfkdmvBlueFOX2
bfoablFastest = lib_mvIMPACT_acquire.bfoablFastest
bfoablVeryFast = lib_mvIMPACT_acquire.bfoablVeryFast
bfoablFast = lib_mvIMPACT_acquire.bfoablFast
bfoablMedium = lib_mvIMPACT_acquire.bfoablMedium
bfoablSlow = lib_mvIMPACT_acquire.bfoablSlow
bfoablVerySlow = lib_mvIMPACT_acquire.bfoablVerySlow
bfoablSlowest = lib_mvIMPACT_acquire.bfoablSlowest
bfstStandard = lib_mvIMPACT_acquire.bfstStandard
bfstFastLineSkip = lib_mvIMPACT_acquire.bfstFastLineSkip
bfstLowSmearLineSkip = lib_mvIMPACT_acquire.bfstLowSmearLineSkip
bfts16KB = lib_mvIMPACT_acquire.bfts16KB
bfts32KB = lib_mvIMPACT_acquire.bfts32KB
bfts64KB = lib_mvIMPACT_acquire.bfts64KB
bfts128KB = lib_mvIMPACT_acquire.bfts128KB
bfts256KB = lib_mvIMPACT_acquire.bfts256KB
bfts512KB = lib_mvIMPACT_acquire.bfts512KB
bfts1024KB = lib_mvIMPACT_acquire.bfts1024KB
bfts2048KB = lib_mvIMPACT_acquire.bfts2048KB
bFalse = lib_mvIMPACT_acquire.bFalse
bTrue = lib_mvIMPACT_acquire.bTrue
camFull = lib_mvIMPACT_acquire.camFull
camUser = lib_mvIMPACT_acquire.camUser
cbmOff = lib_mvIMPACT_acquire.cbmOff
cbmBinningH = lib_mvIMPACT_acquire.cbmBinningH
cbmBinningV = lib_mvIMPACT_acquire.cbmBinningV
cbmBinningHV = lib_mvIMPACT_acquire.cbmBinningHV
cbmBinning3H = lib_mvIMPACT_acquire.cbmBinning3H
cbmBinning3V = lib_mvIMPACT_acquire.cbmBinning3V
cbmBinning3H3V = lib_mvIMPACT_acquire.cbmBinning3H3V
cbmBinningHAvg = lib_mvIMPACT_acquire.cbmBinningHAvg
cbmBinningVAvg = lib_mvIMPACT_acquire.cbmBinningVAvg
cbmBinningHVAvg = lib_mvIMPACT_acquire.cbmBinningHVAvg
cbmBinning3HAvg = lib_mvIMPACT_acquire.cbmBinning3HAvg
cbmBinning3VAvg = lib_mvIMPACT_acquire.cbmBinning3VAvg
cbmBinning3H3VAvg = lib_mvIMPACT_acquire.cbmBinning3H3VAvg
cbmDroppingH = lib_mvIMPACT_acquire.cbmDroppingH
cbmDroppingV = lib_mvIMPACT_acquire.cbmDroppingV
cbmDroppingHV = lib_mvIMPACT_acquire.cbmDroppingHV
cbmDropping3H = lib_mvIMPACT_acquire.cbmDropping3H
cbmDropping3V = lib_mvIMPACT_acquire.cbmDropping3V
cbmDropping3H3V = lib_mvIMPACT_acquire.cbmDropping3H3V
cdfUnknown = lib_mvIMPACT_acquire.cdfUnknown
cdfMono = lib_mvIMPACT_acquire.cdfMono
cdfBayer = lib_mvIMPACT_acquire.cdfBayer
cdfBayerPacked = lib_mvIMPACT_acquire.cdfBayerPacked
cdfRGB = lib_mvIMPACT_acquire.cdfRGB
cdfYUV = lib_mvIMPACT_acquire.cdfYUV
cemStandard = lib_mvIMPACT_acquire.cemStandard
cemOverlapped = lib_mvIMPACT_acquire.cemOverlapped
cemNoShutter = lib_mvIMPACT_acquire.cemNoShutter
ceseNo = lib_mvIMPACT_acquire.ceseNo
ceseFallingEdge = lib_mvIMPACT_acquire.ceseFallingEdge
ceseRisingEdge = lib_mvIMPACT_acquire.ceseRisingEdge
cesoAuto = lib_mvIMPACT_acquire.cesoAuto
cesoRed = lib_mvIMPACT_acquire.cesoRed
cesoGreen = lib_mvIMPACT_acquire.cesoGreen
cesoBlue = lib_mvIMPACT_acquire.cesoBlue
cesoExtern = lib_mvIMPACT_acquire.cesoExtern
cfmOff = lib_mvIMPACT_acquire.cfmOff
cfmDigout0 = lib_mvIMPACT_acquire.cfmDigout0
cfmDigout1 = lib_mvIMPACT_acquire.cfmDigout1
cftStandard = lib_mvIMPACT_acquire.cftStandard
cftRollingShutterFlash = lib_mvIMPACT_acquire.cftRollingShutterFlash
cftVSync = lib_mvIMPACT_acquire.cftVSync
cHDRmFixed0 = lib_mvIMPACT_acquire.cHDRmFixed0
cHDRmFixed1 = lib_mvIMPACT_acquire.cHDRmFixed1
cHDRmFixed2 = lib_mvIMPACT_acquire.cHDRmFixed2
cHDRmFixed3 = lib_mvIMPACT_acquire.cHDRmFixed3
cHDRmFixed4 = lib_mvIMPACT_acquire.cHDRmFixed4
cHDRmFixed5 = lib_mvIMPACT_acquire.cHDRmFixed5
cHDRmFixed6 = lib_mvIMPACT_acquire.cHDRmFixed6
cHDRmUser = lib_mvIMPACT_acquire.cHDRmUser
citNone = lib_mvIMPACT_acquire.citNone
citInterlaced = lib_mvIMPACT_acquire.citInterlaced
citInvertedInterlaced = lib_mvIMPACT_acquire.citInvertedInterlaced
cldvmActive = lib_mvIMPACT_acquire.cldvmActive
cldvmInactive = lib_mvIMPACT_acquire.cldvmInactive
coUndefined = lib_mvIMPACT_acquire.coUndefined
coAuto = lib_mvIMPACT_acquire.coAuto
coComposite = lib_mvIMPACT_acquire.coComposite
coBase = lib_mvIMPACT_acquire.coBase
coDigital = lib_mvIMPACT_acquire.coDigital
coSVideo = lib_mvIMPACT_acquire.coSVideo
coMedium = lib_mvIMPACT_acquire.coMedium
coRGB = lib_mvIMPACT_acquire.coRGB
co2xComposite = lib_mvIMPACT_acquire.co2xComposite
co3xComposite = lib_mvIMPACT_acquire.co3xComposite
co4xComposite = lib_mvIMPACT_acquire.co4xComposite
coFull = lib_mvIMPACT_acquire.coFull
coSDSDI = lib_mvIMPACT_acquire.coSDSDI
coHDSDI = lib_mvIMPACT_acquire.coHDSDI
co3GSDI = lib_mvIMPACT_acquire.co3GSDI
cpcStandard = lib_mvIMPACT_acquire.cpcStandard
cpcHighSpeed = lib_mvIMPACT_acquire.cpcHighSpeed
cpc6000KHz = lib_mvIMPACT_acquire.cpc6000KHz
cpc8000KHz = lib_mvIMPACT_acquire.cpc8000KHz
cpc10000KHz = lib_mvIMPACT_acquire.cpc10000KHz
cpc12000KHz = lib_mvIMPACT_acquire.cpc12000KHz
cpc13500KHz = lib_mvIMPACT_acquire.cpc13500KHz
cpc20000KHz = lib_mvIMPACT_acquire.cpc20000KHz
cpc24000KHz = lib_mvIMPACT_acquire.cpc24000KHz
cpc24540KHz = lib_mvIMPACT_acquire.cpc24540KHz
cpc27000KHz = lib_mvIMPACT_acquire.cpc27000KHz
cpc32000KHz = lib_mvIMPACT_acquire.cpc32000KHz
cpc37600KHz = lib_mvIMPACT_acquire.cpc37600KHz
cpc40000KHz = lib_mvIMPACT_acquire.cpc40000KHz
cpc50000KHz = lib_mvIMPACT_acquire.cpc50000KHz
cpc57600KHz = lib_mvIMPACT_acquire.cpc57600KHz
csmArea = lib_mvIMPACT_acquire.csmArea
csmLine = lib_mvIMPACT_acquire.csmLine
cspbr9600 = lib_mvIMPACT_acquire.cspbr9600
cspbr19200 = lib_mvIMPACT_acquire.cspbr19200
cspbr38400 = lib_mvIMPACT_acquire.cspbr38400
cspbr57600 = lib_mvIMPACT_acquire.cspbr57600
cspbr115200 = lib_mvIMPACT_acquire.cspbr115200
cspbr230400 = lib_mvIMPACT_acquire.cspbr230400
cspbr460800 = lib_mvIMPACT_acquire.cspbr460800
cspbr921600 = lib_mvIMPACT_acquire.cspbr921600
csmFrameShutter = lib_mvIMPACT_acquire.csmFrameShutter
csmElectronicRollingShutter = lib_mvIMPACT_acquire.csmElectronicRollingShutter
csmGlobalResetRelease = lib_mvIMPACT_acquire.csmGlobalResetRelease
csmFrameShutterWithFastCenterReadout = lib_mvIMPACT_acquire.csmFrameShutterWithFastCenterReadout
cltxg1X = lib_mvIMPACT_acquire.cltxg1X
cltxg1X2 = lib_mvIMPACT_acquire.cltxg1X2
cltxg2X = lib_mvIMPACT_acquire.cltxg2X
cltxg2XE = lib_mvIMPACT_acquire.cltxg2XE
cltxg2XM = lib_mvIMPACT_acquire.cltxg2XM
cltxg1X3 = lib_mvIMPACT_acquire.cltxg1X3
cltxg3X = lib_mvIMPACT_acquire.cltxg3X
cltxg1X4 = lib_mvIMPACT_acquire.cltxg1X4
cltxg4X = lib_mvIMPACT_acquire.cltxg4X
cltxg2X2 = lib_mvIMPACT_acquire.cltxg2X2
cltxg2X2E = lib_mvIMPACT_acquire.cltxg2X2E
cltxg2X2M = lib_mvIMPACT_acquire.cltxg2X2M
cltxg4XE = lib_mvIMPACT_acquire.cltxg4XE
cltxg1X8 = lib_mvIMPACT_acquire.cltxg1X8
cltxg8X = lib_mvIMPACT_acquire.cltxg8X
cltxg4X2 = lib_mvIMPACT_acquire.cltxg4X2
cltxg4X2E = lib_mvIMPACT_acquire.cltxg4X2E
cltyg1Y = lib_mvIMPACT_acquire.cltyg1Y
cltyg1Y2 = lib_mvIMPACT_acquire.cltyg1Y2
cltyg2YE = lib_mvIMPACT_acquire.cltyg2YE
ctmOff = lib_mvIMPACT_acquire.ctmOff
ctmGreyRamp = lib_mvIMPACT_acquire.ctmGreyRamp
ctmMovingColor = lib_mvIMPACT_acquire.ctmMovingColor
ctmWBTest = lib_mvIMPACT_acquire.ctmWBTest
ctmContinuous = lib_mvIMPACT_acquire.ctmContinuous
ctmOnDemand = lib_mvIMPACT_acquire.ctmOnDemand
ctmOnLowLevel = lib_mvIMPACT_acquire.ctmOnLowLevel
ctmOnHighLevel = lib_mvIMPACT_acquire.ctmOnHighLevel
ctmOnFallingEdge = lib_mvIMPACT_acquire.ctmOnFallingEdge
ctmOnRisingEdge = lib_mvIMPACT_acquire.ctmOnRisingEdge
ctmOnHighExpose = lib_mvIMPACT_acquire.ctmOnHighExpose
ctmOnLowExpose = lib_mvIMPACT_acquire.ctmOnLowExpose
ctmOnAnyEdge = lib_mvIMPACT_acquire.ctmOnAnyEdge
ctmFramerateControlled = lib_mvIMPACT_acquire.ctmFramerateControlled
ctsDigIn0 = lib_mvIMPACT_acquire.ctsDigIn0
ctsDigIn1 = lib_mvIMPACT_acquire.ctsDigIn1
ctsRTCtrl = lib_mvIMPACT_acquire.ctsRTCtrl
ctsDigOut0 = lib_mvIMPACT_acquire.ctsDigOut0
ctsDigOut1 = lib_mvIMPACT_acquire.ctsDigOut1
ctsDigOut2 = lib_mvIMPACT_acquire.ctsDigOut2
ctsDigOut3 = lib_mvIMPACT_acquire.ctsDigOut3
csmVertical = lib_mvIMPACT_acquire.csmVertical
csmHorizontal = lib_mvIMPACT_acquire.csmHorizontal
csmExtractSingle = lib_mvIMPACT_acquire.csmExtractSingle
ecmAuto = lib_mvIMPACT_acquire.ecmAuto
ecmUser = lib_mvIMPACT_acquire.ecmUser
cticmmUser = lib_mvIMPACT_acquire.cticmmUser
cticmmDeviceSpecific = lib_mvIMPACT_acquire.cticmmDeviceSpecific
cticmmBlueCOUGAR_Xx00wC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx00wC_WPPLS
cticmmBlueCOUGAR_Xx02bC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx02bC_WPPLS
cticmmBlueCOUGAR_Xx02dC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx02dC_WPPLS
cticmmBlueCOUGAR_Xx02eC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx02eC_WPPLS
cticmmBlueCOUGAR_Xx04bC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx04bC_WPPLS
cticmmBlueCOUGAR_Xx05C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx05C_WPPLS
cticmmBlueCOUGAR_Xx20aC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx20aC_WPPLS
cticmmBlueCOUGAR_Xx20bC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx20bC_WPPLS
cticmmBlueCOUGAR_Xx20dC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx20dC_WPPLS
cticmmBlueCOUGAR_Xx21C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx21C_WPPLS
cticmmBlueCOUGAR_Xx22C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx22C_WPPLS
cticmmBlueCOUGAR_Xx23C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx23C_WPPLS
cticmmBlueCOUGAR_Xx24C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx24C_WPPLS
cticmmBlueCOUGAR_Xx25aC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx25aC_WPPLS
cticmmBlueCOUGAR_Xx04C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx04C_WPPLS
cticmmBlueCOUGAR_Xx04aC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx04aC_WPPLS
cticmmBlueCOUGAR_Xx04eC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_Xx04eC_WPPLS
cticmmBlueCOUGAR_XDx04dC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_XDx04dC_WPPLS
cticmmBlueCOUGAR_XDx212C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_XDx212C_WPPLS
cticmmBlueCOUGAR_XDx24aC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_XDx24aC_WPPLS
cticmmBlueCOUGAR_XDx26C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_XDx26C_WPPLS
cticmmBlueCOUGAR_XDx29C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueCOUGAR_XDx29C_WPPLS
cticmmBlueFOX_x00wC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueFOX_x00wC_WPPLS
cticmmBlueFOX_x02bC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueFOX_x02bC_WPPLS
cticmmBlueFOX_x02dC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueFOX_x02dC_WPPLS
cticmmBlueFOX_x05C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueFOX_x05C_WPPLS
cticmmBlueFOX_x20aC_WPPLS = lib_mvIMPACT_acquire.cticmmBlueFOX_x20aC_WPPLS
cticmmBlueFOX_x21C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueFOX_x21C_WPPLS
cticmmBlueFOX_x23C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueFOX_x23C_WPPLS
cticmmBlueFOX_x24C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueFOX_x24C_WPPLS
cticmmBlueFOX3_x100C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueFOX3_x100C_WPPLS
cticmmBlueFOX3_x020C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueFOX3_x020C_WPPLS
cticmmBlueFOX3_x031C_WPPLS = lib_mvIMPACT_acquire.cticmmBlueFOX3_x031C_WPPLS
ctocmmUser = lib_mvIMPACT_acquire.ctocmmUser
ctocmmXYZToAdobeRGB_D50 = lib_mvIMPACT_acquire.ctocmmXYZToAdobeRGB_D50
ctocmmXYZTosRGB_D50 = lib_mvIMPACT_acquire.ctocmmXYZTosRGB_D50
ctocmmXYZToWideGamutRGB_D50 = lib_mvIMPACT_acquire.ctocmmXYZToWideGamutRGB_D50
ctocmmXYZToAdobeRGB_D65 = lib_mvIMPACT_acquire.ctocmmXYZToAdobeRGB_D65
ctocmmXYZTosRGB_D65 = lib_mvIMPACT_acquire.ctocmmXYZTosRGB_D65
cpmAuto = lib_mvIMPACT_acquire.cpmAuto
cpmRaw = lib_mvIMPACT_acquire.cpmRaw
cpmBayer = lib_mvIMPACT_acquire.cpmBayer
cpmBayerToMono = lib_mvIMPACT_acquire.cpmBayerToMono
cpmRawToPlanes = lib_mvIMPACT_acquire.cpmRawToPlanes
dcfmOff = lib_mvIMPACT_acquire.dcfmOff
dcfmOn = lib_mvIMPACT_acquire.dcfmOn
dcfmCalibrateDarkCurrent = lib_mvIMPACT_acquire.dcfmCalibrateDarkCurrent
dcfmTransmitCorrectionImage = lib_mvIMPACT_acquire.dcfmTransmitCorrectionImage
dpfmOff = lib_mvIMPACT_acquire.dpfmOff
dpfm3x1Average = lib_mvIMPACT_acquire.dpfm3x1Average
dpfm3x3Median = lib_mvIMPACT_acquire.dpfm3x3Median
dpfmResetCalibration = lib_mvIMPACT_acquire.dpfmResetCalibration
dpfmCalibrateLeakyPixel = lib_mvIMPACT_acquire.dpfmCalibrateLeakyPixel
dpfmCalibrateColdPixel = lib_mvIMPACT_acquire.dpfmCalibrateColdPixel
damUnknown = lib_mvIMPACT_acquire.damUnknown
damNone = lib_mvIMPACT_acquire.damNone
damRead = lib_mvIMPACT_acquire.damRead
damControl = lib_mvIMPACT_acquire.damControl
damExclusive = lib_mvIMPACT_acquire.damExclusive
daoOff = lib_mvIMPACT_acquire.daoOff
daoLowLight = lib_mvIMPACT_acquire.daoLowLight
daoEmbeddedImageInfo = lib_mvIMPACT_acquire.daoEmbeddedImageInfo
daoImageAverage = lib_mvIMPACT_acquire.daoImageAverage
daoPipelinedGainExposeControl = lib_mvIMPACT_acquire.daoPipelinedGainExposeControl
daoOnDemandTriggerPreShot = lib_mvIMPACT_acquire.daoOnDemandTriggerPreShot
daoLowFrameRateOptimization = lib_mvIMPACT_acquire.daoLowFrameRateOptimization
daoEnablePerChannelOffsetCorrection = lib_mvIMPACT_acquire.daoEnablePerChannelOffsetCorrection
daoUseRawSensorGain = lib_mvIMPACT_acquire.daoUseRawSensorGain
dcNone = lib_mvIMPACT_acquire.dcNone
dcHotplugable = lib_mvIMPACT_acquire.dcHotplugable
dcSelectableVideoInputs = lib_mvIMPACT_acquire.dcSelectableVideoInputs
dcNonVolatileUserMemory = lib_mvIMPACT_acquire.dcNonVolatileUserMemory
dcCameraDescriptionSupport = lib_mvIMPACT_acquire.dcCameraDescriptionSupport
dcEventSupport = lib_mvIMPACT_acquire.dcEventSupport
dcGeneric = lib_mvIMPACT_acquire.dcGeneric
dcCamera = lib_mvIMPACT_acquire.dcCamera
dcIntelligentCamera = lib_mvIMPACT_acquire.dcIntelligentCamera
dcFrameGrabber = lib_mvIMPACT_acquire.dcFrameGrabber
ddomManual = lib_mvIMPACT_acquire.ddomManual
ddomPulse = lib_mvIMPACT_acquire.ddomPulse
ddomUser = lib_mvIMPACT_acquire.ddomUser
ddomExposureActive = lib_mvIMPACT_acquire.ddomExposureActive
ddomDigitalSignalPassThrough = lib_mvIMPACT_acquire.ddomDigitalSignalPassThrough
ddomDigitalSignalPassThroughInv = lib_mvIMPACT_acquire.ddomDigitalSignalPassThroughInv
ddomInternalVD = lib_mvIMPACT_acquire.ddomInternalVD
ddomRealTimeController = lib_mvIMPACT_acquire.ddomRealTimeController
ddomExposureAndAcquisitionActive = lib_mvIMPACT_acquire.ddomExposureAndAcquisitionActive
ddomTemperatureOutOfRange = lib_mvIMPACT_acquire.ddomTemperatureOutOfRange
demIgnore = lib_mvIMPACT_acquire.demIgnore
demNotify = lib_mvIMPACT_acquire.demNotify
detNone = lib_mvIMPACT_acquire.detNone
detPnPArrival = lib_mvIMPACT_acquire.detPnPArrival
detPnPRemoval = lib_mvIMPACT_acquire.detPnPRemoval
detFrameStart = lib_mvIMPACT_acquire.detFrameStart
detHistogramReady = lib_mvIMPACT_acquire.detHistogramReady
detAll = lib_mvIMPACT_acquire.detAll
ditImmediately = lib_mvIMPACT_acquire.ditImmediately
ditAfterDigOutSignals = lib_mvIMPACT_acquire.ditAfterDigOutSignals
dilDeviceSpecific = lib_mvIMPACT_acquire.dilDeviceSpecific
dilGenICam = lib_mvIMPACT_acquire.dilGenICam
dlsAuto = lib_mvIMPACT_acquire.dlsAuto
dlsNoLoad = lib_mvIMPACT_acquire.dlsNoLoad
dpmOn = lib_mvIMPACT_acquire.dpmOn
dpmOff = lib_mvIMPACT_acquire.dpmOff
dsrmAuto = lib_mvIMPACT_acquire.dsrmAuto
dsrmUser = lib_mvIMPACT_acquire.dsrmUser
dsoseFrame = lib_mvIMPACT_acquire.dsoseFrame
dsoseTrigger = lib_mvIMPACT_acquire.dsoseTrigger
dsoseFrameAfterTrigger = lib_mvIMPACT_acquire.dsoseFrameAfterTrigger
dsoseSyncInRisingEdge = lib_mvIMPACT_acquire.dsoseSyncInRisingEdge
dsoseSyncInFallingEdge = lib_mvIMPACT_acquire.dsoseSyncInFallingEdge
dsoseSyncInPassThrough = lib_mvIMPACT_acquire.dsoseSyncInPassThrough
dsoseSyncInPassThroughInv = lib_mvIMPACT_acquire.dsoseSyncInPassThroughInv
dsosePeriodically = lib_mvIMPACT_acquire.dsosePeriodically
dsoseTriggerInPassThrough = lib_mvIMPACT_acquire.dsoseTriggerInPassThrough
dsoseTriggerInPassThroughInv = lib_mvIMPACT_acquire.dsoseTriggerInPassThroughInv
dsoseFVALPassThrough = lib_mvIMPACT_acquire.dsoseFVALPassThrough
dsoseFVALPassThroughInv = lib_mvIMPACT_acquire.dsoseFVALPassThroughInv
dsoseFVALRisingEdge = lib_mvIMPACT_acquire.dsoseFVALRisingEdge
dsAbsent = lib_mvIMPACT_acquire.dsAbsent
dsPresent = lib_mvIMPACT_acquire.dsPresent
dsInitializing = lib_mvIMPACT_acquire.dsInitializing
dsUnreachable = lib_mvIMPACT_acquire.dsUnreachable
dsPowerDown = lib_mvIMPACT_acquire.dsPowerDown
dsomOff = lib_mvIMPACT_acquire.dsomOff
dsomNonInterlaced = lib_mvIMPACT_acquire.dsomNonInterlaced
dsomInterlaced = lib_mvIMPACT_acquire.dsomInterlaced
dtiStandard = lib_mvIMPACT_acquire.dtiStandard
dtiAdvanced = lib_mvIMPACT_acquire.dtiAdvanced
dtmOff = lib_mvIMPACT_acquire.dtmOff
dtmOn = lib_mvIMPACT_acquire.dtmOn
dtmFallingEdge = lib_mvIMPACT_acquire.dtmFallingEdge
dtmRisingEdge = lib_mvIMPACT_acquire.dtmRisingEdge
dtmPeriodically = lib_mvIMPACT_acquire.dtmPeriodically
dtmOnDemand = lib_mvIMPACT_acquire.dtmOnDemand
dtmStartRisingStopFalling = lib_mvIMPACT_acquire.dtmStartRisingStopFalling
dtmStartFallingStopRising = lib_mvIMPACT_acquire.dtmStartFallingStopRising
dtmLevelHigh = lib_mvIMPACT_acquire.dtmLevelHigh
dtmLevelLow = lib_mvIMPACT_acquire.dtmLevelLow
dtoOff = lib_mvIMPACT_acquire.dtoOff
dtoReadOut = lib_mvIMPACT_acquire.dtoReadOut
dtoPreviousFrame = lib_mvIMPACT_acquire.dtoPreviousFrame
digioOff = lib_mvIMPACT_acquire.digioOff
digioOn = lib_mvIMPACT_acquire.digioOn
digioIgnore = lib_mvIMPACT_acquire.digioIgnore
digioKeep = lib_mvIMPACT_acquire.digioKeep
diommFrequency_Hz_10ms = lib_mvIMPACT_acquire.diommFrequency_Hz_10ms
diommFrequency_Hz_100ms = lib_mvIMPACT_acquire.diommFrequency_Hz_100ms
diomsInput0 = lib_mvIMPACT_acquire.diomsInput0
diomsInput1 = lib_mvIMPACT_acquire.diomsInput1
diomsInput2 = lib_mvIMPACT_acquire.diomsInput2
diomsInput3 = lib_mvIMPACT_acquire.diomsInput3
docmSoftware = lib_mvIMPACT_acquire.docmSoftware
docmRTC = lib_mvIMPACT_acquire.docmRTC
dsNone = lib_mvIMPACT_acquire.dsNone
dsSignal1 = lib_mvIMPACT_acquire.dsSignal1
dsSignal2 = lib_mvIMPACT_acquire.dsSignal2
dsSignal3 = lib_mvIMPACT_acquire.dsSignal3
dsSignal4 = lib_mvIMPACT_acquire.dsSignal4
dsSignal5 = lib_mvIMPACT_acquire.dsSignal5
dsSignal6 = lib_mvIMPACT_acquire.dsSignal6
dsSignal7 = lib_mvIMPACT_acquire.dsSignal7
dsSignal8 = lib_mvIMPACT_acquire.dsSignal8
dsSignal9 = lib_mvIMPACT_acquire.dsSignal9
dsSignal10 = lib_mvIMPACT_acquire.dsSignal10
dsSignal11 = lib_mvIMPACT_acquire.dsSignal11
dsSignal12 = lib_mvIMPACT_acquire.dsSignal12
dsSignal13 = lib_mvIMPACT_acquire.dsSignal13
dsSignal14 = lib_mvIMPACT_acquire.dsSignal14
dsSignal15 = lib_mvIMPACT_acquire.dsSignal15
dsSignal16 = lib_mvIMPACT_acquire.dsSignal16
DMR_NO_ERROR = lib_mvIMPACT_acquire.DMR_NO_ERROR
DMR_DEV_NOT_FOUND = lib_mvIMPACT_acquire.DMR_DEV_NOT_FOUND
DMR_INIT_FAILED = lib_mvIMPACT_acquire.DMR_INIT_FAILED
DMR_DRV_ALREADY_IN_USE = lib_mvIMPACT_acquire.DMR_DRV_ALREADY_IN_USE
DMR_DEV_CANNOT_OPEN = lib_mvIMPACT_acquire.DMR_DEV_CANNOT_OPEN
DMR_NOT_INITIALIZED = lib_mvIMPACT_acquire.DMR_NOT_INITIALIZED
DMR_DRV_CANNOT_OPEN = lib_mvIMPACT_acquire.DMR_DRV_CANNOT_OPEN
DMR_DEV_REQUEST_QUEUE_EMPTY = lib_mvIMPACT_acquire.DMR_DEV_REQUEST_QUEUE_EMPTY
DMR_DEV_REQUEST_CREATION_FAILED = lib_mvIMPACT_acquire.DMR_DEV_REQUEST_CREATION_FAILED
DMR_INVALID_PARAMETER = lib_mvIMPACT_acquire.DMR_INVALID_PARAMETER
DMR_EXPORTED_SYMBOL_NOT_FOUND = lib_mvIMPACT_acquire.DMR_EXPORTED_SYMBOL_NOT_FOUND
DEV_UNKNOWN_ERROR = lib_mvIMPACT_acquire.DEV_UNKNOWN_ERROR
DEV_HANDLE_INVALID = lib_mvIMPACT_acquire.DEV_HANDLE_INVALID
DEV_INPUT_PARAM_INVALID = lib_mvIMPACT_acquire.DEV_INPUT_PARAM_INVALID
DEV_WRONG_INPUT_PARAM_COUNT = lib_mvIMPACT_acquire.DEV_WRONG_INPUT_PARAM_COUNT
DEV_CREATE_SETTING_FAILED = lib_mvIMPACT_acquire.DEV_CREATE_SETTING_FAILED
DEV_REQUEST_CANT_BE_UNLOCKED = lib_mvIMPACT_acquire.DEV_REQUEST_CANT_BE_UNLOCKED
DEV_INVALID_REQUEST_NUMBER = lib_mvIMPACT_acquire.DEV_INVALID_REQUEST_NUMBER
DEV_LOCKED_REQUEST_IN_QUEUE = lib_mvIMPACT_acquire.DEV_LOCKED_REQUEST_IN_QUEUE
DEV_NO_FREE_REQUEST_AVAILABLE = lib_mvIMPACT_acquire.DEV_NO_FREE_REQUEST_AVAILABLE
DEV_WAIT_FOR_REQUEST_FAILED = lib_mvIMPACT_acquire.DEV_WAIT_FOR_REQUEST_FAILED
DEV_UNSUPPORTED_PARAMETER = lib_mvIMPACT_acquire.DEV_UNSUPPORTED_PARAMETER
DEV_INVALID_RTC_NUMBER = lib_mvIMPACT_acquire.DEV_INVALID_RTC_NUMBER
DMR_INTERNAL_ERROR = lib_mvIMPACT_acquire.DMR_INTERNAL_ERROR
DMR_INPUT_BUFFER_TOO_SMALL = lib_mvIMPACT_acquire.DMR_INPUT_BUFFER_TOO_SMALL
DEV_INTERNAL_ERROR = lib_mvIMPACT_acquire.DEV_INTERNAL_ERROR
DMR_LIBRARY_NOT_FOUND = lib_mvIMPACT_acquire.DMR_LIBRARY_NOT_FOUND
DMR_FUNCTION_NOT_IMPLEMENTED = lib_mvIMPACT_acquire.DMR_FUNCTION_NOT_IMPLEMENTED
DMR_FEATURE_NOT_AVAILABLE = lib_mvIMPACT_acquire.DMR_FEATURE_NOT_AVAILABLE
DMR_EXECUTION_PROHIBITED = lib_mvIMPACT_acquire.DMR_EXECUTION_PROHIBITED
DMR_FILE_NOT_FOUND = lib_mvIMPACT_acquire.DMR_FILE_NOT_FOUND
DMR_INVALID_LICENCE = lib_mvIMPACT_acquire.DMR_INVALID_LICENCE
DEV_SENSOR_TYPE_ERROR = lib_mvIMPACT_acquire.DEV_SENSOR_TYPE_ERROR
DMR_CAMERA_DESCRIPTION_INVALID = lib_mvIMPACT_acquire.DMR_CAMERA_DESCRIPTION_INVALID
DMR_NEWER_LIBRARY_REQUIRED = lib_mvIMPACT_acquire.DMR_NEWER_LIBRARY_REQUIRED
DMR_TIMEOUT = lib_mvIMPACT_acquire.DMR_TIMEOUT
DMR_WAIT_ABANDONED = lib_mvIMPACT_acquire.DMR_WAIT_ABANDONED
DMR_EXECUTION_FAILED = lib_mvIMPACT_acquire.DMR_EXECUTION_FAILED
DEV_REQUEST_ALREADY_IN_USE = lib_mvIMPACT_acquire.DEV_REQUEST_ALREADY_IN_USE
DEV_REQUEST_BUFFER_INVALID = lib_mvIMPACT_acquire.DEV_REQUEST_BUFFER_INVALID
DEV_REQUEST_BUFFER_MISALIGNED = lib_mvIMPACT_acquire.DEV_REQUEST_BUFFER_MISALIGNED
DEV_ACCESS_DENIED = lib_mvIMPACT_acquire.DEV_ACCESS_DENIED
DMR_PRELOAD_CHECK_FAILED = lib_mvIMPACT_acquire.DMR_PRELOAD_CHECK_FAILED
DMR_CAMERA_DESCRIPTION_INVALID_PARAMETER = lib_mvIMPACT_acquire.DMR_CAMERA_DESCRIPTION_INVALID_PARAMETER
DMR_FILE_ACCESS_ERROR = lib_mvIMPACT_acquire.DMR_FILE_ACCESS_ERROR
DMR_INVALID_QUEUE_SELECTION = lib_mvIMPACT_acquire.DMR_INVALID_QUEUE_SELECTION
DMR_ACQUISITION_ENGINE_BUSY = lib_mvIMPACT_acquire.DMR_ACQUISITION_ENGINE_BUSY
DMR_LAST_VALID_ERROR_CODE = lib_mvIMPACT_acquire.DMR_LAST_VALID_ERROR_CODE
efmAuto = lib_mvIMPACT_acquire.efmAuto
efmUser = lib_mvIMPACT_acquire.efmUser
ffcmDefault = lib_mvIMPACT_acquire.ffcmDefault
ffcmBrightPreserving = lib_mvIMPACT_acquire.ffcmBrightPreserving
fffmOff = lib_mvIMPACT_acquire.fffmOff
fffmOn = lib_mvIMPACT_acquire.fffmOn
fffmCalibrateFlatField = lib_mvIMPACT_acquire.fffmCalibrateFlatField
fffmTransmitCorrectionImage = lib_mvIMPACT_acquire.fffmTransmitCorrectionImage
urNoUpdatePerformed = lib_mvIMPACT_acquire.urNoUpdatePerformed
urUpdateFW = lib_mvIMPACT_acquire.urUpdateFW
urUpdateFWError = lib_mvIMPACT_acquire.urUpdateFWError
urDevAlreadyInUse = lib_mvIMPACT_acquire.urDevAlreadyInUse
urUpdateFWOK = lib_mvIMPACT_acquire.urUpdateFWOK
urSetDevID = lib_mvIMPACT_acquire.urSetDevID
urSetDevIDError = lib_mvIMPACT_acquire.urSetDevIDError
urSetDevIDInvalidID = lib_mvIMPACT_acquire.urSetDevIDInvalidID
urSetDevIDOK = lib_mvIMPACT_acquire.urSetDevIDOK
urSetUserDataSizeError = lib_mvIMPACT_acquire.urSetUserDataSizeError
urSetUserDataWriteError = lib_mvIMPACT_acquire.urSetUserDataWriteError
urSetUserDataWriteOK = lib_mvIMPACT_acquire.urSetUserDataWriteOK
urGetUserDataReadError = lib_mvIMPACT_acquire.urGetUserDataReadError
urVerifyFWError = lib_mvIMPACT_acquire.urVerifyFWError
urVerifyFWOK = lib_mvIMPACT_acquire.urVerifyFWOK
I2ComRead = lib_mvIMPACT_acquire.I2ComRead
I2ComWrite = lib_mvIMPACT_acquire.I2ComWrite
I2CosSuccess = lib_mvIMPACT_acquire.I2CosSuccess
I2CosFailure = lib_mvIMPACT_acquire.I2CosFailure
I2CosInvalidDeviceAddress = lib_mvIMPACT_acquire.I2CosInvalidDeviceAddress
I2CosInvalidDeviceSubAddress = lib_mvIMPACT_acquire.I2CosInvalidDeviceSubAddress
I2CosTooMuchData = lib_mvIMPACT_acquire.I2CosTooMuchData
I2CosNotEnoughData = lib_mvIMPACT_acquire.I2CosNotEnoughData
ibpfRaw = lib_mvIMPACT_acquire.ibpfRaw
ibpfMono8 = lib_mvIMPACT_acquire.ibpfMono8
ibpfMono16 = lib_mvIMPACT_acquire.ibpfMono16
ibpfRGBx888Packed = lib_mvIMPACT_acquire.ibpfRGBx888Packed
ibpfYUV422Packed = lib_mvIMPACT_acquire.ibpfYUV422Packed
ibpfRGBx888Planar = lib_mvIMPACT_acquire.ibpfRGBx888Planar
ibpfMono10 = lib_mvIMPACT_acquire.ibpfMono10
ibpfMono12 = lib_mvIMPACT_acquire.ibpfMono12
ibpfMono14 = lib_mvIMPACT_acquire.ibpfMono14
ibpfRGB888Packed = lib_mvIMPACT_acquire.ibpfRGB888Packed
ibpfYUV444Planar = lib_mvIMPACT_acquire.ibpfYUV444Planar
ibpfMono32 = lib_mvIMPACT_acquire.ibpfMono32
ibpfYUV422Planar = lib_mvIMPACT_acquire.ibpfYUV422Planar
ibpfRGB101010Packed = lib_mvIMPACT_acquire.ibpfRGB101010Packed
ibpfRGB121212Packed = lib_mvIMPACT_acquire.ibpfRGB121212Packed
ibpfRGB141414Packed = lib_mvIMPACT_acquire.ibpfRGB141414Packed
ibpfRGB161616Packed = lib_mvIMPACT_acquire.ibpfRGB161616Packed
ibpfYUV422_UYVYPacked = lib_mvIMPACT_acquire.ibpfYUV422_UYVYPacked
ibpfMono12Packed_V2 = lib_mvIMPACT_acquire.ibpfMono12Packed_V2
ibpfYUV422_10Packed = lib_mvIMPACT_acquire.ibpfYUV422_10Packed
ibpfYUV422_UYVY_10Packed = lib_mvIMPACT_acquire.ibpfYUV422_UYVY_10Packed
ibpfBGR888Packed = lib_mvIMPACT_acquire.ibpfBGR888Packed
ibpfBGR101010Packed_V2 = lib_mvIMPACT_acquire.ibpfBGR101010Packed_V2
ibpfYUV444_UYVPacked = lib_mvIMPACT_acquire.ibpfYUV444_UYVPacked
ibpfYUV444_UYV_10Packed = lib_mvIMPACT_acquire.ibpfYUV444_UYV_10Packed
ibpfYUV444Packed = lib_mvIMPACT_acquire.ibpfYUV444Packed
ibpfYUV444_10Packed = lib_mvIMPACT_acquire.ibpfYUV444_10Packed
ibpfMono12Packed_V1 = lib_mvIMPACT_acquire.ibpfMono12Packed_V1
ibpfAuto = lib_mvIMPACT_acquire.ibpfAuto
idpfAuto = lib_mvIMPACT_acquire.idpfAuto
idpfRaw = lib_mvIMPACT_acquire.idpfRaw
idpfMono8 = lib_mvIMPACT_acquire.idpfMono8
idpfRGBx888Packed = lib_mvIMPACT_acquire.idpfRGBx888Packed
idpfYUV422Packed = lib_mvIMPACT_acquire.idpfYUV422Packed
idpfRGBx888Planar = lib_mvIMPACT_acquire.idpfRGBx888Planar
idpfMono10 = lib_mvIMPACT_acquire.idpfMono10
idpfMono12 = lib_mvIMPACT_acquire.idpfMono12
idpfMono14 = lib_mvIMPACT_acquire.idpfMono14
idpfMono16 = lib_mvIMPACT_acquire.idpfMono16
idpfRGB888Packed = lib_mvIMPACT_acquire.idpfRGB888Packed
idpfYUV422Planar = lib_mvIMPACT_acquire.idpfYUV422Planar
idpfRGB101010Packed = lib_mvIMPACT_acquire.idpfRGB101010Packed
idpfRGB121212Packed = lib_mvIMPACT_acquire.idpfRGB121212Packed
idpfRGB141414Packed = lib_mvIMPACT_acquire.idpfRGB141414Packed
idpfRGB161616Packed = lib_mvIMPACT_acquire.idpfRGB161616Packed
idpfYUV422_UYVYPacked = lib_mvIMPACT_acquire.idpfYUV422_UYVYPacked
idpfMono12Packed_V2 = lib_mvIMPACT_acquire.idpfMono12Packed_V2
idpfYUV422_10Packed = lib_mvIMPACT_acquire.idpfYUV422_10Packed
idpfYUV422_UYVY_10Packed = lib_mvIMPACT_acquire.idpfYUV422_UYVY_10Packed
idpfBGR888Packed = lib_mvIMPACT_acquire.idpfBGR888Packed
idpfBGR101010Packed_V2 = lib_mvIMPACT_acquire.idpfBGR101010Packed_V2
idpfYUV444_UYVPacked = lib_mvIMPACT_acquire.idpfYUV444_UYVPacked
idpfYUV444_UYV_10Packed = lib_mvIMPACT_acquire.idpfYUV444_UYV_10Packed
idpfYUV444Packed = lib_mvIMPACT_acquire.idpfYUV444Packed
idpfYUV444_10Packed = lib_mvIMPACT_acquire.idpfYUV444_10Packed
idpfMono12Packed_V1 = lib_mvIMPACT_acquire.idpfMono12Packed_V1
ipfOff = lib_mvIMPACT_acquire.ipfOff
ipfSharpen = lib_mvIMPACT_acquire.ipfSharpen
ircmManual = lib_mvIMPACT_acquire.ircmManual
ircmLive = lib_mvIMPACT_acquire.ircmLive
ircmCounting = lib_mvIMPACT_acquire.ircmCounting
ircmTrial = lib_mvIMPACT_acquire.ircmTrial
ircmUpdateBufferLayout = lib_mvIMPACT_acquire.ircmUpdateBufferLayout
iscmUnknown = lib_mvIMPACT_acquire.iscmUnknown
iscmMono = lib_mvIMPACT_acquire.iscmMono
iscmBayer = lib_mvIMPACT_acquire.iscmBayer
iscmColor = lib_mvIMPACT_acquire.iscmColor
iscmNIR = lib_mvIMPACT_acquire.iscmNIR
iscpGreenRed = lib_mvIMPACT_acquire.iscpGreenRed
iscpRedGreen = lib_mvIMPACT_acquire.iscpRedGreen
iscpBlueGreen = lib_mvIMPACT_acquire.iscpBlueGreen
iscpGreenBlue = lib_mvIMPACT_acquire.iscpGreenBlue
iscpUnknown = lib_mvIMPACT_acquire.iscpUnknown
istUnknown = lib_mvIMPACT_acquire.istUnknown
istCCD = lib_mvIMPACT_acquire.istCCD
istCMOS = lib_mvIMPACT_acquire.istCMOS
imOn = lib_mvIMPACT_acquire.imOn
imOff = lib_mvIMPACT_acquire.imOff
lcOff = lib_mvIMPACT_acquire.lcOff
lcOn = lib_mvIMPACT_acquire.lcOn
LUTgmStandard = lib_mvIMPACT_acquire.LUTgmStandard
LUTgmLinearStart = lib_mvIMPACT_acquire.LUTgmLinearStart
LUTiHardware = lib_mvIMPACT_acquire.LUTiHardware
LUTiSoftware = lib_mvIMPACT_acquire.LUTiSoftware
LUTimThreshold = lib_mvIMPACT_acquire.LUTimThreshold
LUTimLinear = lib_mvIMPACT_acquire.LUTimLinear
LUTimCubic = lib_mvIMPACT_acquire.LUTimCubic
LUTm8To8 = lib_mvIMPACT_acquire.LUTm8To8
LUTm10To8 = lib_mvIMPACT_acquire.LUTm10To8
LUTm10To10 = lib_mvIMPACT_acquire.LUTm10To10
LUTm12To10 = lib_mvIMPACT_acquire.LUTm12To10
LUTm12To12 = lib_mvIMPACT_acquire.LUTm12To12
LUTm14To14 = lib_mvIMPACT_acquire.LUTm14To14
LUTm16To16 = lib_mvIMPACT_acquire.LUTm16To16
LUTmInterpolated = lib_mvIMPACT_acquire.LUTmInterpolated
LUTmGamma = lib_mvIMPACT_acquire.LUTmGamma
LUTmDirect = lib_mvIMPACT_acquire.LUTmDirect
mmmAuto = lib_mvIMPACT_acquire.mmmAuto
mmmPool = lib_mvIMPACT_acquire.mmmPool
mmpmOff = lib_mvIMPACT_acquire.mmpmOff
mmpmFixed = lib_mvIMPACT_acquire.mmpmFixed
mmpmAuto = lib_mvIMPACT_acquire.mmpmAuto
mmOff = lib_mvIMPACT_acquire.mmOff
mmTopDown = lib_mvIMPACT_acquire.mmTopDown
mmLeftRight = lib_mvIMPACT_acquire.mmLeftRight
mmTopDownAndLeftRight = lib_mvIMPACT_acquire.mmTopDownAndLeftRight
momGlobal = lib_mvIMPACT_acquire.momGlobal
momChannelBased = lib_mvIMPACT_acquire.momChannelBased
obmmDefault = lib_mvIMPACT_acquire.obmmDefault
obmmUser = lib_mvIMPACT_acquire.obmmUser
pstDigitalSignal = lib_mvIMPACT_acquire.pstDigitalSignal
pstPeriodically = lib_mvIMPACT_acquire.pstPeriodically
pstRotaryDecoder = lib_mvIMPACT_acquire.pstRotaryDecoder
rimmAuto = lib_mvIMPACT_acquire.rimmAuto
rimmUser = lib_mvIMPACT_acquire.rimmUser
rrOK = lib_mvIMPACT_acquire.rrOK
rrTimeout = lib_mvIMPACT_acquire.rrTimeout
rrError = lib_mvIMPACT_acquire.rrError
rrRequestAborted = lib_mvIMPACT_acquire.rrRequestAborted
rrFrameIncomplete = lib_mvIMPACT_acquire.rrFrameIncomplete
rrDeviceAccessLost = lib_mvIMPACT_acquire.rrDeviceAccessLost
rrInconsistentBufferContent = lib_mvIMPACT_acquire.rrInconsistentBufferContent
rrFrameCorrupt = lib_mvIMPACT_acquire.rrFrameCorrupt
rrUnprocessibleRequest = lib_mvIMPACT_acquire.rrUnprocessibleRequest
rrNoBufferAvailable = lib_mvIMPACT_acquire.rrNoBufferAvailable
rrNotEnoughMemory = lib_mvIMPACT_acquire.rrNotEnoughMemory
rrCameraNotSupported = lib_mvIMPACT_acquire.rrCameraNotSupported
rrDataAcquisitionNotSupported = lib_mvIMPACT_acquire.rrDataAcquisitionNotSupported
rsIdle = lib_mvIMPACT_acquire.rsIdle
rsWaiting = lib_mvIMPACT_acquire.rsWaiting
rsCapturing = lib_mvIMPACT_acquire.rsCapturing
rsReady = lib_mvIMPACT_acquire.rsReady
rsBeingConfigured = lib_mvIMPACT_acquire.rsBeingConfigured
rtctrlModeStop = lib_mvIMPACT_acquire.rtctrlModeStop
rtctrlModeRun = lib_mvIMPACT_acquire.rtctrlModeRun
rtctrlModeRunRestart = lib_mvIMPACT_acquire.rtctrlModeRunRestart
rtctrlProgNop = lib_mvIMPACT_acquire.rtctrlProgNop
rtctrlProgSetDigout = lib_mvIMPACT_acquire.rtctrlProgSetDigout
rtctrlProgWaitDigin = lib_mvIMPACT_acquire.rtctrlProgWaitDigin
rtctrlProgWaitClocks = lib_mvIMPACT_acquire.rtctrlProgWaitClocks
rtctrlProgJumpLoc = lib_mvIMPACT_acquire.rtctrlProgJumpLoc
rtctrlProgTriggerSet = lib_mvIMPACT_acquire.rtctrlProgTriggerSet
rtctrlProgTriggerReset = lib_mvIMPACT_acquire.rtctrlProgTriggerReset
rtctrlProgExposeSet = lib_mvIMPACT_acquire.rtctrlProgExposeSet
rtctrlProgExposeReset = lib_mvIMPACT_acquire.rtctrlProgExposeReset
rtctrlProgFrameNrReset = lib_mvIMPACT_acquire.rtctrlProgFrameNrReset
rtctrlProgJumpLocOnZero = lib_mvIMPACT_acquire.rtctrlProgJumpLocOnZero
rtctrlProgJumpLocOnNotZero = lib_mvIMPACT_acquire.rtctrlProgJumpLocOnNotZero
rtctrlProgRegisterSet = lib_mvIMPACT_acquire.rtctrlProgRegisterSet
rtctrlProgRegisterAdd = lib_mvIMPACT_acquire.rtctrlProgRegisterAdd
rtctrlProgRegisterSub = lib_mvIMPACT_acquire.rtctrlProgRegisterSub
simNearestNeighbor = lib_mvIMPACT_acquire.simNearestNeighbor
simLinear = lib_mvIMPACT_acquire.simLinear
simCubic = lib_mvIMPACT_acquire.simCubic
smOff = lib_mvIMPACT_acquire.smOff
smOn = lib_mvIMPACT_acquire.smOn
scAuto = lib_mvIMPACT_acquire.scAuto
scAnalogue = lib_mvIMPACT_acquire.scAnalogue
scDigital = lib_mvIMPACT_acquire.scDigital
ssITU601 = lib_mvIMPACT_acquire.ssITU601
ssSquare = lib_mvIMPACT_acquire.ssSquare
ssUser = lib_mvIMPACT_acquire.ssUser
tpIdle = lib_mvIMPACT_acquire.tpIdle
tpLowest = lib_mvIMPACT_acquire.tpLowest
tpBelowNormal = lib_mvIMPACT_acquire.tpBelowNormal
tpNormal = lib_mvIMPACT_acquire.tpNormal
tpAboveNormal = lib_mvIMPACT_acquire.tpAboveNormal
tpHighest = lib_mvIMPACT_acquire.tpHighest
tpTimeCritical = lib_mvIMPACT_acquire.tpTimeCritical
tmOnFallingEdge = lib_mvIMPACT_acquire.tmOnFallingEdge
tmOnRisingEdge = lib_mvIMPACT_acquire.tmOnRisingEdge
udarRead = lib_mvIMPACT_acquire.udarRead
udarWrite = lib_mvIMPACT_acquire.udarWrite
udarRW = lib_mvIMPACT_acquire.udarRW
udarPassword = lib_mvIMPACT_acquire.udarPassword
udarFull = lib_mvIMPACT_acquire.udarFull
udrbKeepCachedData = lib_mvIMPACT_acquire.udrbKeepCachedData
udrbUpdateFromDeviceData = lib_mvIMPACT_acquire.udrbUpdateFromDeviceData
vsCCIR = lib_mvIMPACT_acquire.vsCCIR
vsRS170 = lib_mvIMPACT_acquire.vsRS170
vsPALBGH = lib_mvIMPACT_acquire.vsPALBGH
vsNTSCM = lib_mvIMPACT_acquire.vsNTSCM
vsSDI480i = lib_mvIMPACT_acquire.vsSDI480i
vsSDI576i = lib_mvIMPACT_acquire.vsSDI576i
vsSDI720p = lib_mvIMPACT_acquire.vsSDI720p
vsSDI1080i = lib_mvIMPACT_acquire.vsSDI1080i
vsSDI1080p = lib_mvIMPACT_acquire.vsSDI1080p
vditNone = lib_mvIMPACT_acquire.vditNone
vditBMP = lib_mvIMPACT_acquire.vditBMP
vditPGM = lib_mvIMPACT_acquire.vditPGM
vdtmMovingRGBx888PackedImage = lib_mvIMPACT_acquire.vdtmMovingRGBx888PackedImage
vdtmMovingRGB888PackedImage = lib_mvIMPACT_acquire.vdtmMovingRGB888PackedImage
vdtmMovingRGBx888PlanarImage = lib_mvIMPACT_acquire.vdtmMovingRGBx888PlanarImage
vdtmMovingMonoRamp = lib_mvIMPACT_acquire.vdtmMovingMonoRamp
vdtmMovingYUV422PackedRamp = lib_mvIMPACT_acquire.vdtmMovingYUV422PackedRamp
vdtmMovingYUV422PlanarRamp = lib_mvIMPACT_acquire.vdtmMovingYUV422PlanarRamp
vdtmMovingRGB101010PackedImage = lib_mvIMPACT_acquire.vdtmMovingRGB101010PackedImage
vdtmMovingRGB121212PackedImage = lib_mvIMPACT_acquire.vdtmMovingRGB121212PackedImage
vdtmMovingRGB141414PackedImage = lib_mvIMPACT_acquire.vdtmMovingRGB141414PackedImage
vdtmMovingRGB161616PackedImage = lib_mvIMPACT_acquire.vdtmMovingRGB161616PackedImage
vdtmMovingBayerDataRamp = lib_mvIMPACT_acquire.vdtmMovingBayerDataRamp
vdtmBayerWhiteBalanceTestImage = lib_mvIMPACT_acquire.vdtmBayerWhiteBalanceTestImage
vdtmImageDirectory = lib_mvIMPACT_acquire.vdtmImageDirectory
vdtmLeakyPixelTestImageMono8Bayer = lib_mvIMPACT_acquire.vdtmLeakyPixelTestImageMono8Bayer
vdtmMovingYUV422_UYVYPackedRamp = lib_mvIMPACT_acquire.vdtmMovingYUV422_UYVYPackedRamp
vdtmHorizontalMonoRamp = lib_mvIMPACT_acquire.vdtmHorizontalMonoRamp
vdtmVerticalMonoRamp = lib_mvIMPACT_acquire.vdtmVerticalMonoRamp
vdtmMovingVerticalMonoRamp = lib_mvIMPACT_acquire.vdtmMovingVerticalMonoRamp
vdtmHorizontalMono12Packed_V2Ramp = lib_mvIMPACT_acquire.vdtmHorizontalMono12Packed_V2Ramp
vdtmMovingBGR888PackedImage = lib_mvIMPACT_acquire.vdtmMovingBGR888PackedImage
vdtmMovingYUV444PackedRamp = lib_mvIMPACT_acquire.vdtmMovingYUV444PackedRamp
vdtmMovingYUV444_UYVPackedRamp = lib_mvIMPACT_acquire.vdtmMovingYUV444_UYVPackedRamp
vdtmMovingBGRPacked_V2Image = lib_mvIMPACT_acquire.vdtmMovingBGRPacked_V2Image
vdtmEmptyMonoBuffer = lib_mvIMPACT_acquire.vdtmEmptyMonoBuffer
vdtmHorizontalMono12Packed_V1Ramp = lib_mvIMPACT_acquire.vdtmHorizontalMono12Packed_V1Ramp
vdtmHorizontalBayer12Packed_V1Ramp = lib_mvIMPACT_acquire.vdtmHorizontalBayer12Packed_V1Ramp
vdtmHorizontalBayer12Packed_V2Ramp = lib_mvIMPACT_acquire.vdtmHorizontalBayer12Packed_V2Ramp
wbcmOff = lib_mvIMPACT_acquire.wbcmOff
wbcmNextFrame = lib_mvIMPACT_acquire.wbcmNextFrame
wbcmContinuous = lib_mvIMPACT_acquire.wbcmContinuous
wbpTungsten = lib_mvIMPACT_acquire.wbpTungsten
wbpHalogen = lib_mvIMPACT_acquire.wbpHalogen
wbpFluorescent = lib_mvIMPACT_acquire.wbpFluorescent
wbpDayLight = lib_mvIMPACT_acquire.wbpDayLight
wbpPhotoFlash = lib_mvIMPACT_acquire.wbpPhotoFlash
wbpBlueSky = lib_mvIMPACT_acquire.wbpBlueSky
wbpUser1 = lib_mvIMPACT_acquire.wbpUser1
wbpUser2 = lib_mvIMPACT_acquire.wbpUser2
wbpUser3 = lib_mvIMPACT_acquire.wbpUser3
wbpUser4 = lib_mvIMPACT_acquire.wbpUser4
ctOnChanged = lib_mvIMPACT_acquire.ctOnChanged
ctOnReadData = lib_mvIMPACT_acquire.ctOnReadData
ctOnWriteData = lib_mvIMPACT_acquire.ctOnWriteData
cfUndefined = lib_mvIMPACT_acquire.cfUndefined
cfReadAccess = lib_mvIMPACT_acquire.cfReadAccess
cfWriteAccess = lib_mvIMPACT_acquire.cfWriteAccess
cfRWAccess = lib_mvIMPACT_acquire.cfRWAccess
cfFixedSize = lib_mvIMPACT_acquire.cfFixedSize
cfUserAllocatedMemory = lib_mvIMPACT_acquire.cfUserAllocatedMemory
cfInvisible = lib_mvIMPACT_acquire.cfInvisible
cfAllowValueCombinations = lib_mvIMPACT_acquire.cfAllowValueCombinations
cfShouldBeDisplayedAsList = lib_mvIMPACT_acquire.cfShouldBeDisplayedAsList
cfDisallowSerialize = lib_mvIMPACT_acquire.cfDisallowSerialize
cfAlwaysForceClone = lib_mvIMPACT_acquire.cfAlwaysForceClone
cfNotAvailable = lib_mvIMPACT_acquire.cfNotAvailable
cfNotImplemented = lib_mvIMPACT_acquire.cfNotImplemented
cfContainsBinaryData = lib_mvIMPACT_acquire.cfContainsBinaryData
cfShouldBeDisplayedAsEnumeration = lib_mvIMPACT_acquire.cfShouldBeDisplayedAsEnumeration
cfAlwaysForceUpdate = lib_mvIMPACT_acquire.cfAlwaysForceUpdate
cfLast = lib_mvIMPACT_acquire.cfLast
vtInt = lib_mvIMPACT_acquire.vtInt
vtFloat = lib_mvIMPACT_acquire.vtFloat
vtPtr = lib_mvIMPACT_acquire.vtPtr
vtString = lib_mvIMPACT_acquire.vtString
vtInt64 = lib_mvIMPACT_acquire.vtInt64
ctProp = lib_mvIMPACT_acquire.ctProp
ctList = lib_mvIMPACT_acquire.ctList
ctMeth = lib_mvIMPACT_acquire.ctMeth
ctPropInt = lib_mvIMPACT_acquire.ctPropInt
ctPropFloat = lib_mvIMPACT_acquire.ctPropFloat
ctPropString = lib_mvIMPACT_acquire.ctPropString
ctPropPtr = lib_mvIMPACT_acquire.ctPropPtr
ctPropInt64 = lib_mvIMPACT_acquire.ctPropInt64
cvBeginner = lib_mvIMPACT_acquire.cvBeginner
cvExpert = lib_mvIMPACT_acquire.cvExpert
cvGuru = lib_mvIMPACT_acquire.cvGuru
cvInvisible = lib_mvIMPACT_acquire.cvInvisible
PROPHANDLING_NO_ERROR = lib_mvIMPACT_acquire.PROPHANDLING_NO_ERROR
PROPHANDLING_NOT_A_LIST = lib_mvIMPACT_acquire.PROPHANDLING_NOT_A_LIST
PROPHANDLING_NOT_A_PROPERTY = lib_mvIMPACT_acquire.PROPHANDLING_NOT_A_PROPERTY
PROPHANDLING_NOT_A_METHOD = lib_mvIMPACT_acquire.PROPHANDLING_NOT_A_METHOD
PROPHANDLING_NO_READ_RIGHTS = lib_mvIMPACT_acquire.PROPHANDLING_NO_READ_RIGHTS
PROPHANDLING_NO_WRITE_RIGHTS = lib_mvIMPACT_acquire.PROPHANDLING_NO_WRITE_RIGHTS
PROPHANDLING_NO_MODIFY_SIZE_RIGHTS = lib_mvIMPACT_acquire.PROPHANDLING_NO_MODIFY_SIZE_RIGHTS
PROPHANDLING_INCOMPATIBLE_COMPONENTS = lib_mvIMPACT_acquire.PROPHANDLING_INCOMPATIBLE_COMPONENTS
PROPHANDLING_NO_USER_ALLOCATED_MEMORY = lib_mvIMPACT_acquire.PROPHANDLING_NO_USER_ALLOCATED_MEMORY
PROPHANDLING_UNSUPPORTED_PARAMETER = lib_mvIMPACT_acquire.PROPHANDLING_UNSUPPORTED_PARAMETER
PROPHANDLING_SIZE_MISMATCH = lib_mvIMPACT_acquire.PROPHANDLING_SIZE_MISMATCH
PROPHANDLING_IMPLEMENTATION_MISSING = lib_mvIMPACT_acquire.PROPHANDLING_IMPLEMENTATION_MISSING
PROPHANDLING_ACCESSTOKEN_CREATION_FAILED = lib_mvIMPACT_acquire.PROPHANDLING_ACCESSTOKEN_CREATION_FAILED
PROPHANDLING_INVALID_PROP_VALUE = lib_mvIMPACT_acquire.PROPHANDLING_INVALID_PROP_VALUE
PROPHANDLING_PROP_TRANSLATION_TABLE_CORRUPTED = lib_mvIMPACT_acquire.PROPHANDLING_PROP_TRANSLATION_TABLE_CORRUPTED
PROPHANDLING_PROP_VAL_ID_OUT_OF_BOUNDS = lib_mvIMPACT_acquire.PROPHANDLING_PROP_VAL_ID_OUT_OF_BOUNDS
PROPHANDLING_PROP_TRANSLATION_TABLE_NOT_DEFINED = lib_mvIMPACT_acquire.PROPHANDLING_PROP_TRANSLATION_TABLE_NOT_DEFINED
PROPHANDLING_INVALID_PROP_VALUE_TYPE = lib_mvIMPACT_acquire.PROPHANDLING_INVALID_PROP_VALUE_TYPE
PROPHANDLING_PROP_VAL_TOO_LARGE = lib_mvIMPACT_acquire.PROPHANDLING_PROP_VAL_TOO_LARGE
PROPHANDLING_PROP_VAL_TOO_SMALL = lib_mvIMPACT_acquire.PROPHANDLING_PROP_VAL_TOO_SMALL
PROPHANDLING_COMPONENT_NOT_FOUND = lib_mvIMPACT_acquire.PROPHANDLING_COMPONENT_NOT_FOUND
PROPHANDLING_LIST_ID_INVALID = lib_mvIMPACT_acquire.PROPHANDLING_LIST_ID_INVALID
PROPHANDLING_COMPONENT_ID_INVALID = lib_mvIMPACT_acquire.PROPHANDLING_COMPONENT_ID_INVALID
PROPHANDLING_LIST_ENTRY_OCCUPIED = lib_mvIMPACT_acquire.PROPHANDLING_LIST_ENTRY_OCCUPIED
PROPHANDLING_COMPONENT_HAS_OWNER_ALREADY = lib_mvIMPACT_acquire.PROPHANDLING_COMPONENT_HAS_OWNER_ALREADY
PROPHANDLING_COMPONENT_ALREADY_REGISTERED = lib_mvIMPACT_acquire.PROPHANDLING_COMPONENT_ALREADY_REGISTERED
PROPHANDLING_LIST_CANT_ACCESS_DATA = lib_mvIMPACT_acquire.PROPHANDLING_LIST_CANT_ACCESS_DATA
PROPHANDLING_METHOD_PTR_INVALID = lib_mvIMPACT_acquire.PROPHANDLING_METHOD_PTR_INVALID
PROPHANDLING_METHOD_INVALID_PARAM_LIST = lib_mvIMPACT_acquire.PROPHANDLING_METHOD_INVALID_PARAM_LIST
PROPHANDLING_SWIG_ERROR = lib_mvIMPACT_acquire.PROPHANDLING_SWIG_ERROR
PROPHANDLING_INVALID_INPUT_PARAMETER = lib_mvIMPACT_acquire.PROPHANDLING_INVALID_INPUT_PARAMETER
PROPHANDLING_COMPONENT_NO_CALLBACK_REGISTERED = lib_mvIMPACT_acquire.PROPHANDLING_COMPONENT_NO_CALLBACK_REGISTERED
PROPHANDLING_INPUT_BUFFER_TOO_SMALL = lib_mvIMPACT_acquire.PROPHANDLING_INPUT_BUFFER_TOO_SMALL
PROPHANDLING_WRONG_PARAM_COUNT = lib_mvIMPACT_acquire.PROPHANDLING_WRONG_PARAM_COUNT
PROPHANDLING_UNSUPPORTED_OPERATION = lib_mvIMPACT_acquire.PROPHANDLING_UNSUPPORTED_OPERATION
PROPHANDLING_CANT_SERIALIZE_DATA = lib_mvIMPACT_acquire.PROPHANDLING_CANT_SERIALIZE_DATA
PROPHANDLING_INVALID_FILE_CONTENT = lib_mvIMPACT_acquire.PROPHANDLING_INVALID_FILE_CONTENT
PROPHANDLING_CANT_ALLOCATE_LIST = lib_mvIMPACT_acquire.PROPHANDLING_CANT_ALLOCATE_LIST
PROPHANDLING_CANT_REGISTER_COMPONENT = lib_mvIMPACT_acquire.PROPHANDLING_CANT_REGISTER_COMPONENT
PROPHANDLING_PROP_VALIDATION_FAILED = lib_mvIMPACT_acquire.PROPHANDLING_PROP_VALIDATION_FAILED
PROPHANDLING_PSEUDO_LAST_ASSIGNED_ERROR_CODE = lib_mvIMPACT_acquire.PROPHANDLING_PSEUDO_LAST_ASSIGNED_ERROR_CODE
PROPHANDLING_LAST_ASSIGNED_ERROR_CODE = lib_mvIMPACT_acquire.PROPHANDLING_LAST_ASSIGNED_ERROR_CODE
PROPHANDLING_LAST_VALID_ERROR_CODE = lib_mvIMPACT_acquire.PROPHANDLING_LAST_VALID_ERROR_CODE
sfDefault = lib_mvIMPACT_acquire.sfDefault
sfNative = lib_mvIMPACT_acquire.sfNative
sfRaw = lib_mvIMPACT_acquire.sfRaw
sfVolatile = lib_mvIMPACT_acquire.sfVolatile
sfProcessPropTranslationDict = lib_mvIMPACT_acquire.sfProcessPropTranslationDict
sfCreateMissingEntries = lib_mvIMPACT_acquire.sfCreateMissingEntries
sfProcessReadOnlyComponents = lib_mvIMPACT_acquire.sfProcessReadOnlyComponents
sfIgnorePropData = lib_mvIMPACT_acquire.sfIgnorePropData
sfProcessDocString = lib_mvIMPACT_acquire.sfProcessDocString
sfProcessPropConstantsDict = lib_mvIMPACT_acquire.sfProcessPropConstantsDict
sfProcessInheritance = lib_mvIMPACT_acquire.sfProcessInheritance
sfIgnoreBasicData = lib_mvIMPACT_acquire.sfIgnoreBasicData
sfIgnoreInvisible = lib_mvIMPACT_acquire.sfIgnoreInvisible
sfFile = lib_mvIMPACT_acquire.sfFile
sfProcessDisplayName = lib_mvIMPACT_acquire.sfProcessDisplayName
sfReserved1 = lib_mvIMPACT_acquire.sfReserved1
sfReserved2 = lib_mvIMPACT_acquire.sfReserved2
sfDontProcessDefault = lib_mvIMPACT_acquire.sfDontProcessDefault
sGlobal = lib_mvIMPACT_acquire.sGlobal
sUser = lib_mvIMPACT_acquire.sUser
class ChannelData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    iChannelOffset = _swig_property(lib_mvIMPACT_acquire.ChannelData_iChannelOffset_get, lib_mvIMPACT_acquire.ChannelData_iChannelOffset_set)
    iLinePitch = _swig_property(lib_mvIMPACT_acquire.ChannelData_iLinePitch_get, lib_mvIMPACT_acquire.ChannelData_iLinePitch_set)
    iPixelPitch = _swig_property(lib_mvIMPACT_acquire.ChannelData_iPixelPitch_get, lib_mvIMPACT_acquire.ChannelData_iPixelPitch_set)
    szChannelDesc = _swig_property(lib_mvIMPACT_acquire.ChannelData_szChannelDesc_get, lib_mvIMPACT_acquire.ChannelData_szChannelDesc_set)
    def __init__(self): 
        lib_mvIMPACT_acquire.ChannelData_swiginit(self,lib_mvIMPACT_acquire.new_ChannelData())
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ChannelData
ChannelData_swigregister = lib_mvIMPACT_acquire.ChannelData_swigregister
ChannelData_swigregister(ChannelData)
cvar = lib_mvIMPACT_acquire.cvar
INVALID_ID = cvar.INVALID_ID
PROP_MAX_VAL = cvar.PROP_MAX_VAL
PROP_MIN_VAL = cvar.PROP_MIN_VAL
PROP_STEP_WIDTH = cvar.PROP_STEP_WIDTH
PROP_DEFAULT_VALUE = cvar.PROP_DEFAULT_VALUE
PROP_MAX_BINARY_BUFFER_SIZE = cvar.PROP_MAX_BINARY_BUFFER_SIZE
PROP_LAST_CONSTANT = cvar.PROP_LAST_CONSTANT
DEFAULT_STRING_SIZE_LIMIT = cvar.DEFAULT_STRING_SIZE_LIMIT
ROOT_LIST = cvar.ROOT_LIST
END_OF_LIST = cvar.END_OF_LIST
smIgnoreLists = cvar.smIgnoreLists
smIgnoreMethods = cvar.smIgnoreMethods
smIgnoreProperties = cvar.smIgnoreProperties

class ImageBuffer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    iBytesPerPixel = _swig_property(lib_mvIMPACT_acquire.ImageBuffer_iBytesPerPixel_get, lib_mvIMPACT_acquire.ImageBuffer_iBytesPerPixel_set)
    iHeight = _swig_property(lib_mvIMPACT_acquire.ImageBuffer_iHeight_get, lib_mvIMPACT_acquire.ImageBuffer_iHeight_set)
    iWidth = _swig_property(lib_mvIMPACT_acquire.ImageBuffer_iWidth_get, lib_mvIMPACT_acquire.ImageBuffer_iWidth_set)
    pixelFormat = _swig_property(lib_mvIMPACT_acquire.ImageBuffer_pixelFormat_get, lib_mvIMPACT_acquire.ImageBuffer_pixelFormat_set)
    iSize = _swig_property(lib_mvIMPACT_acquire.ImageBuffer_iSize_get, lib_mvIMPACT_acquire.ImageBuffer_iSize_set)
    vpData = _swig_property(lib_mvIMPACT_acquire.ImageBuffer_vpData_get, lib_mvIMPACT_acquire.ImageBuffer_vpData_set)
    iChannelCount = _swig_property(lib_mvIMPACT_acquire.ImageBuffer_iChannelCount_get, lib_mvIMPACT_acquire.ImageBuffer_iChannelCount_set)
    pChannels = _swig_property(lib_mvIMPACT_acquire.ImageBuffer_pChannels_get, lib_mvIMPACT_acquire.ImageBuffer_pChannels_set)
    def __init__(self): 
        lib_mvIMPACT_acquire.ImageBuffer_swiginit(self,lib_mvIMPACT_acquire.new_ImageBuffer())
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ImageBuffer
ImageBuffer_swigregister = lib_mvIMPACT_acquire.ImageBuffer_swigregister
ImageBuffer_swigregister(ImageBuffer)

class EventData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    count = _swig_property(lib_mvIMPACT_acquire.EventData_count_get, lib_mvIMPACT_acquire.EventData_count_set)
    timestamp_lowPart = _swig_property(lib_mvIMPACT_acquire.EventData_timestamp_lowPart_get, lib_mvIMPACT_acquire.EventData_timestamp_lowPart_set)
    timestamp_highPart = _swig_property(lib_mvIMPACT_acquire.EventData_timestamp_highPart_get, lib_mvIMPACT_acquire.EventData_timestamp_highPart_set)
    def __init__(self): 
        lib_mvIMPACT_acquire.EventData_swiginit(self,lib_mvIMPACT_acquire.new_EventData())
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EventData
EventData_swigregister = lib_mvIMPACT_acquire.EventData_swigregister
EventData_swigregister(EventData)

irpPixelFormat = lib_mvIMPACT_acquire.irpPixelFormat
irpResult = lib_mvIMPACT_acquire.irpResult
irpState = lib_mvIMPACT_acquire.irpState
irpCameraOutputUsed = lib_mvIMPACT_acquire.irpCameraOutputUsed
ibfNone = lib_mvIMPACT_acquire.ibfNone
ibfUseRequestMemory = lib_mvIMPACT_acquire.ibfUseRequestMemory
ibfRecycleBufHandle = lib_mvIMPACT_acquire.ibfRecycleBufHandle
lqDeviceManager = lib_mvIMPACT_acquire.lqDeviceManager
lqPropHandling = lib_mvIMPACT_acquire.lqPropHandling
class ImpactAcquireException(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ImpactAcquireException_swiginit(self,lib_mvIMPACT_acquire.new_ImpactAcquireException(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ImpactAcquireException
    def getErrorString(self): return lib_mvIMPACT_acquire.ImpactAcquireException_getErrorString(self)
    def getErrorCode(self): return lib_mvIMPACT_acquire.ImpactAcquireException_getErrorCode(self)
    getErrorCodeAsString = staticmethod(lib_mvIMPACT_acquire.ImpactAcquireException_getErrorCodeAsString)
    def getErrorOrigin(self): return lib_mvIMPACT_acquire.ImpactAcquireException_getErrorOrigin(self)
    def getArgs(self): return lib_mvIMPACT_acquire.ImpactAcquireException_getArgs(self)
    def __str__(self): return lib_mvIMPACT_acquire.ImpactAcquireException___str__(self)
    errorString       = property (lib_mvIMPACT_acquire.ImpactAcquireException_getErrorString, None, None, None)
    errorOrigin       = property (lib_mvIMPACT_acquire.ImpactAcquireException_getErrorOrigin, None, None, None)
    errorCode         = property (lib_mvIMPACT_acquire.ImpactAcquireException_getErrorCode, None, None, None)
    errorCodeAsString = property (lib_mvIMPACT_acquire.ImpactAcquireException_getErrorCodeAsString, None, None, None)
    args              = property (lib_mvIMPACT_acquire.ImpactAcquireException_getArgs, None, None, None)

    def __getitem__(self, index):
        return self.args[index]

ImpactAcquireException_swigregister = lib_mvIMPACT_acquire.ImpactAcquireException_swigregister
ImpactAcquireException_swigregister(ImpactAcquireException)

def ImpactAcquireException_getErrorCodeAsString(*args):
  return lib_mvIMPACT_acquire.ImpactAcquireException_getErrorCodeAsString(*args)
ImpactAcquireException_getErrorCodeAsString = lib_mvIMPACT_acquire.ImpactAcquireException_getErrorCodeAsString

class EDeviceManager(ImpactAcquireException):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EDeviceManager_swiginit(self,lib_mvIMPACT_acquire.new_EDeviceManager(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EDeviceManager
EDeviceManager_swigregister = lib_mvIMPACT_acquire.EDeviceManager_swigregister
EDeviceManager_swigregister(EDeviceManager)

class EPropertyHandling(ImpactAcquireException):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EPropertyHandling_swiginit(self,lib_mvIMPACT_acquire.new_EPropertyHandling(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EPropertyHandling
EPropertyHandling_swigregister = lib_mvIMPACT_acquire.EPropertyHandling_swigregister
EPropertyHandling_swigregister(EPropertyHandling)

class EComponent(EPropertyHandling):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
EComponent_swigregister = lib_mvIMPACT_acquire.EComponent_swigregister
EComponent_swigregister(EComponent)

class ENotAList(EComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ENotAList_swiginit(self,lib_mvIMPACT_acquire.new_ENotAList(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ENotAList
ENotAList_swigregister = lib_mvIMPACT_acquire.ENotAList_swigregister
ENotAList_swigregister(ENotAList)

class ENotAProperty(EComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ENotAProperty_swiginit(self,lib_mvIMPACT_acquire.new_ENotAProperty(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ENotAProperty
ENotAProperty_swigregister = lib_mvIMPACT_acquire.ENotAProperty_swigregister
ENotAProperty_swigregister(ENotAProperty)

class ENotAMethod(EComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ENotAMethod_swiginit(self,lib_mvIMPACT_acquire.new_ENotAMethod(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ENotAMethod
ENotAMethod_swigregister = lib_mvIMPACT_acquire.ENotAMethod_swigregister
ENotAMethod_swigregister(ENotAMethod)

class ENoReadRights(EComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ENoReadRights_swiginit(self,lib_mvIMPACT_acquire.new_ENoReadRights(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ENoReadRights
ENoReadRights_swigregister = lib_mvIMPACT_acquire.ENoReadRights_swigregister
ENoReadRights_swigregister(ENoReadRights)

class ENoWriteRights(EComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ENoWriteRights_swiginit(self,lib_mvIMPACT_acquire.new_ENoWriteRights(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ENoWriteRights
ENoWriteRights_swigregister = lib_mvIMPACT_acquire.ENoWriteRights_swigregister
ENoWriteRights_swigregister(ENoWriteRights)

class ENoModifySizeRights(EComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ENoModifySizeRights_swiginit(self,lib_mvIMPACT_acquire.new_ENoModifySizeRights(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ENoModifySizeRights
ENoModifySizeRights_swigregister = lib_mvIMPACT_acquire.ENoModifySizeRights_swigregister
ENoModifySizeRights_swigregister(ENoModifySizeRights)

class EIncompatibleComponents(EComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EIncompatibleComponents_swiginit(self,lib_mvIMPACT_acquire.new_EIncompatibleComponents(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EIncompatibleComponents
EIncompatibleComponents_swigregister = lib_mvIMPACT_acquire.EIncompatibleComponents_swigregister
EIncompatibleComponents_swigregister(EIncompatibleComponents)

class ENoUserAllocatedMemory(EComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ENoUserAllocatedMemory_swiginit(self,lib_mvIMPACT_acquire.new_ENoUserAllocatedMemory(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ENoUserAllocatedMemory
ENoUserAllocatedMemory_swigregister = lib_mvIMPACT_acquire.ENoUserAllocatedMemory_swigregister
ENoUserAllocatedMemory_swigregister(ENoUserAllocatedMemory)

class EProperty(EComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
EProperty_swigregister = lib_mvIMPACT_acquire.EProperty_swigregister
EProperty_swigregister(EProperty)

class EInvalidValue(EProperty):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EInvalidValue_swiginit(self,lib_mvIMPACT_acquire.new_EInvalidValue(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EInvalidValue
EInvalidValue_swigregister = lib_mvIMPACT_acquire.EInvalidValue_swigregister
EInvalidValue_swigregister(EInvalidValue)

class EValIDOutOfBounds(EProperty):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EValIDOutOfBounds_swiginit(self,lib_mvIMPACT_acquire.new_EValIDOutOfBounds(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EValIDOutOfBounds
EValIDOutOfBounds_swigregister = lib_mvIMPACT_acquire.EValIDOutOfBounds_swigregister
EValIDOutOfBounds_swigregister(EValIDOutOfBounds)

class ETranslationTableCorrupted(EProperty):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ETranslationTableCorrupted_swiginit(self,lib_mvIMPACT_acquire.new_ETranslationTableCorrupted(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ETranslationTableCorrupted
ETranslationTableCorrupted_swigregister = lib_mvIMPACT_acquire.ETranslationTableCorrupted_swigregister
ETranslationTableCorrupted_swigregister(ETranslationTableCorrupted)

class ETranslationTableNotDefined(EProperty):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ETranslationTableNotDefined_swiginit(self,lib_mvIMPACT_acquire.new_ETranslationTableNotDefined(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ETranslationTableNotDefined
ETranslationTableNotDefined_swigregister = lib_mvIMPACT_acquire.ETranslationTableNotDefined_swigregister
ETranslationTableNotDefined_swigregister(ETranslationTableNotDefined)

class EInvalidValueType(EProperty):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EInvalidValueType_swiginit(self,lib_mvIMPACT_acquire.new_EInvalidValueType(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EInvalidValueType
EInvalidValueType_swigregister = lib_mvIMPACT_acquire.EInvalidValueType_swigregister
EInvalidValueType_swigregister(EInvalidValueType)

class EValTooLarge(EProperty):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EValTooLarge_swiginit(self,lib_mvIMPACT_acquire.new_EValTooLarge(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EValTooLarge
EValTooLarge_swigregister = lib_mvIMPACT_acquire.EValTooLarge_swigregister
EValTooLarge_swigregister(EValTooLarge)

class EValTooSmall(EProperty):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EValTooSmall_swiginit(self,lib_mvIMPACT_acquire.new_EValTooSmall(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EValTooSmall
EValTooSmall_swigregister = lib_mvIMPACT_acquire.EValTooSmall_swigregister
EValTooSmall_swigregister(EValTooSmall)

class EValidationFailed(EProperty):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EValidationFailed_swiginit(self,lib_mvIMPACT_acquire.new_EValidationFailed(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EValidationFailed
EValidationFailed_swigregister = lib_mvIMPACT_acquire.EValidationFailed_swigregister
EValidationFailed_swigregister(EValidationFailed)

class EPropertyList(EComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
EPropertyList_swigregister = lib_mvIMPACT_acquire.EPropertyList_swigregister
EPropertyList_swigregister(EPropertyList)

class EComponentNotFound(EPropertyList):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EComponentNotFound_swiginit(self,lib_mvIMPACT_acquire.new_EComponentNotFound(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EComponentNotFound
EComponentNotFound_swigregister = lib_mvIMPACT_acquire.EComponentNotFound_swigregister
EComponentNotFound_swigregister(EComponentNotFound)

class EListEntryOccupied(EPropertyList):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EListEntryOccupied_swiginit(self,lib_mvIMPACT_acquire.new_EListEntryOccupied(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EListEntryOccupied
EListEntryOccupied_swigregister = lib_mvIMPACT_acquire.EListEntryOccupied_swigregister
EListEntryOccupied_swigregister(EListEntryOccupied)

class EComponentIDInvalid(EPropertyList):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EComponentIDInvalid_swiginit(self,lib_mvIMPACT_acquire.new_EComponentIDInvalid(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EComponentIDInvalid
EComponentIDInvalid_swigregister = lib_mvIMPACT_acquire.EComponentIDInvalid_swigregister
EComponentIDInvalid_swigregister(EComponentIDInvalid)

class EInvalidListID(EPropertyList):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EInvalidListID_swiginit(self,lib_mvIMPACT_acquire.new_EInvalidListID(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EInvalidListID
EInvalidListID_swigregister = lib_mvIMPACT_acquire.EInvalidListID_swigregister
EInvalidListID_swigregister(EInvalidListID)

class ECantAccessData(EPropertyList):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ECantAccessData_swiginit(self,lib_mvIMPACT_acquire.new_ECantAccessData(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ECantAccessData
ECantAccessData_swigregister = lib_mvIMPACT_acquire.ECantAccessData_swigregister
ECantAccessData_swigregister(ECantAccessData)

class ECantRegisterComponent(EPropertyList):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ECantRegisterComponent_swiginit(self,lib_mvIMPACT_acquire.new_ECantRegisterComponent(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ECantRegisterComponent
ECantRegisterComponent_swigregister = lib_mvIMPACT_acquire.ECantRegisterComponent_swigregister
ECantRegisterComponent_swigregister(ECantRegisterComponent)

class EMethod(EComponent):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
EMethod_swigregister = lib_mvIMPACT_acquire.EMethod_swigregister
EMethod_swigregister(EMethod)

class EMethodPtrInvalid(EMethod):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EMethodPtrInvalid_swiginit(self,lib_mvIMPACT_acquire.new_EMethodPtrInvalid(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EMethodPtrInvalid
EMethodPtrInvalid_swigregister = lib_mvIMPACT_acquire.EMethodPtrInvalid_swigregister
EMethodPtrInvalid_swigregister(EMethodPtrInvalid)

class EInvalidParameterList(EMethod):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EInvalidParameterList_swiginit(self,lib_mvIMPACT_acquire.new_EInvalidParameterList(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EInvalidParameterList
EInvalidParameterList_swigregister = lib_mvIMPACT_acquire.EInvalidParameterList_swigregister
EInvalidParameterList_swigregister(EInvalidParameterList)

class EUnsupportedParameter(EPropertyHandling):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EUnsupportedParameter_swiginit(self,lib_mvIMPACT_acquire.new_EUnsupportedParameter(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EUnsupportedParameter
EUnsupportedParameter_swigregister = lib_mvIMPACT_acquire.EUnsupportedParameter_swigregister
EUnsupportedParameter_swigregister(EUnsupportedParameter)

class ESizeMismatch(EPropertyHandling):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ESizeMismatch_swiginit(self,lib_mvIMPACT_acquire.new_ESizeMismatch(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ESizeMismatch
ESizeMismatch_swigregister = lib_mvIMPACT_acquire.ESizeMismatch_swigregister
ESizeMismatch_swigregister(ESizeMismatch)

class EImplementationMissing(EPropertyHandling):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EImplementationMissing_swiginit(self,lib_mvIMPACT_acquire.new_EImplementationMissing(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EImplementationMissing
EImplementationMissing_swigregister = lib_mvIMPACT_acquire.EImplementationMissing_swigregister
EImplementationMissing_swigregister(EImplementationMissing)

class EInvalidInputParameter(EPropertyHandling):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EInvalidInputParameter_swiginit(self,lib_mvIMPACT_acquire.new_EInvalidInputParameter(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EInvalidInputParameter
EInvalidInputParameter_swigregister = lib_mvIMPACT_acquire.EInvalidInputParameter_swigregister
EInvalidInputParameter_swigregister(EInvalidInputParameter)

class EInputBufferTooSmall(EPropertyHandling):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EInputBufferTooSmall_swiginit(self,lib_mvIMPACT_acquire.new_EInputBufferTooSmall(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EInputBufferTooSmall
EInputBufferTooSmall_swigregister = lib_mvIMPACT_acquire.EInputBufferTooSmall_swigregister
EInputBufferTooSmall_swigregister(EInputBufferTooSmall)

class EWrongParamCount(EPropertyHandling):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EWrongParamCount_swiginit(self,lib_mvIMPACT_acquire.new_EWrongParamCount(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EWrongParamCount
EWrongParamCount_swigregister = lib_mvIMPACT_acquire.EWrongParamCount_swigregister
EWrongParamCount_swigregister(EWrongParamCount)

class EUnsupportedOperation(EPropertyHandling):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EUnsupportedOperation_swiginit(self,lib_mvIMPACT_acquire.new_EUnsupportedOperation(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EUnsupportedOperation
EUnsupportedOperation_swigregister = lib_mvIMPACT_acquire.EUnsupportedOperation_swigregister
EUnsupportedOperation_swigregister(EUnsupportedOperation)

class ECantSerializeData(EPropertyHandling):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ECantSerializeData_swiginit(self,lib_mvIMPACT_acquire.new_ECantSerializeData(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ECantSerializeData
ECantSerializeData_swigregister = lib_mvIMPACT_acquire.ECantSerializeData_swigregister
ECantSerializeData_swigregister(ECantSerializeData)

class EInvalidFileContent(EPropertyHandling):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EInvalidFileContent_swiginit(self,lib_mvIMPACT_acquire.new_EInvalidFileContent(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EInvalidFileContent
EInvalidFileContent_swigregister = lib_mvIMPACT_acquire.EInvalidFileContent_swigregister
EInvalidFileContent_swigregister(EInvalidFileContent)

class ECantAllocateNewList(EPropertyHandling):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ECantAllocateNewList_swiginit(self,lib_mvIMPACT_acquire.new_ECantAllocateNewList(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ECantAllocateNewList
ECantAllocateNewList_swigregister = lib_mvIMPACT_acquire.ECantAllocateNewList_swigregister
ECantAllocateNewList_swigregister(ECantAllocateNewList)

class ExceptionFactory(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    raiseException = staticmethod(lib_mvIMPACT_acquire.ExceptionFactory_raiseException)
    def __init__(self): 
        lib_mvIMPACT_acquire.ExceptionFactory_swiginit(self,lib_mvIMPACT_acquire.new_ExceptionFactory())
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ExceptionFactory
ExceptionFactory_swigregister = lib_mvIMPACT_acquire.ExceptionFactory_swigregister
ExceptionFactory_swigregister(ExceptionFactory)

def ExceptionFactory_raiseException(*args):
  return lib_mvIMPACT_acquire.ExceptionFactory_raiseException(*args)
ExceptionFactory_raiseException = lib_mvIMPACT_acquire.ExceptionFactory_raiseException

class ComponentAccess(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ComponentAccess
    def changedCounter(self): return lib_mvIMPACT_acquire.ComponentAccess_changedCounter(self)
    def changedCounterAttr(self): return lib_mvIMPACT_acquire.ComponentAccess_changedCounterAttr(self)
    def hObj(self): return lib_mvIMPACT_acquire.ComponentAccess_hObj(self)
    def name(self): return lib_mvIMPACT_acquire.ComponentAccess_name(self)
    def displayName(self): return lib_mvIMPACT_acquire.ComponentAccess_displayName(self)
ComponentAccess_swigregister = lib_mvIMPACT_acquire.ComponentAccess_swigregister
ComponentAccess_swigregister(ComponentAccess)

class Component(ComponentAccess):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.Component_swiginit(self,lib_mvIMPACT_acquire.new_Component(*args))
    def firstSibling(self): return lib_mvIMPACT_acquire.Component_firstSibling(self)
    def lastSibling(self): return lib_mvIMPACT_acquire.Component_lastSibling(self)
    def nextSibling(self): return lib_mvIMPACT_acquire.Component_nextSibling(self)
    def firstChild(self): return lib_mvIMPACT_acquire.Component_firstChild(self)
    def parent(self): return lib_mvIMPACT_acquire.Component_parent(self)
    def docString(self): return lib_mvIMPACT_acquire.Component_docString(self)
    def flags(self): return lib_mvIMPACT_acquire.Component_flags(self)
    def flagsAsString(self, separator = " | "): return lib_mvIMPACT_acquire.Component_flagsAsString(self, separator)
    def getIsDefault(self): return lib_mvIMPACT_acquire.Component_getIsDefault(self)
    def getIsList(self): return lib_mvIMPACT_acquire.Component_getIsList(self)
    def getIsMeth(self): return lib_mvIMPACT_acquire.Component_getIsMeth(self)
    def getIsProp(self): return lib_mvIMPACT_acquire.Component_getIsProp(self)
    def getIsValid(self): return lib_mvIMPACT_acquire.Component_getIsValid(self)
    def getIsVisible(self): return lib_mvIMPACT_acquire.Component_getIsVisible(self)
    def getIsWriteable(self): return lib_mvIMPACT_acquire.Component_getIsWriteable(self)
    def restoreDefault(self): return lib_mvIMPACT_acquire.Component_restoreDefault(self)
    type = staticmethod(lib_mvIMPACT_acquire.Component_type)
    def typeAsString(self): return lib_mvIMPACT_acquire.Component_typeAsString(self)
    def visibility(self): return lib_mvIMPACT_acquire.Component_visibility(self)
    visibilityAsString = staticmethod(lib_mvIMPACT_acquire.Component_visibilityAsString)
    def selectedFeatureCount(self): return lib_mvIMPACT_acquire.Component_selectedFeatureCount(self)
    def selectingFeatureCount(self): return lib_mvIMPACT_acquire.Component_selectingFeatureCount(self)
    def selectedFeatures(self, *args): return lib_mvIMPACT_acquire.Component_selectedFeatures(self, *args)
    def selectingFeatures(self, *args): return lib_mvIMPACT_acquire.Component_selectingFeatures(self, *args)
    def selectedFeature(self, *args): return lib_mvIMPACT_acquire.Component_selectedFeature(self, *args)
    def selectingFeature(self, *args): return lib_mvIMPACT_acquire.Component_selectingFeature(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_Component
Component_swigregister = lib_mvIMPACT_acquire.Component_swigregister
Component_swigregister(Component)

def Component_type(*args):
  return lib_mvIMPACT_acquire.Component_type(*args)
Component_type = lib_mvIMPACT_acquire.Component_type

def Component_visibilityAsString(*args):
  return lib_mvIMPACT_acquire.Component_visibilityAsString(*args)
Component_visibilityAsString = lib_mvIMPACT_acquire.Component_visibilityAsString

class ComponentCallback(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ComponentCallback_swiginit(self,lib_mvIMPACT_acquire.new_ComponentCallback(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ComponentCallback
    def isComponentRegistered(self, *args): return lib_mvIMPACT_acquire.ComponentCallback_isComponentRegistered(self, *args)
    def registerComponent(self, *args): return lib_mvIMPACT_acquire.ComponentCallback_registerComponent(self, *args)
    def unregisterComponent(self, *args): return lib_mvIMPACT_acquire.ComponentCallback_unregisterComponent(self, *args)
    def execute(self, *args): return lib_mvIMPACT_acquire.ComponentCallback_execute(self, *args)
ComponentCallback_swigregister = lib_mvIMPACT_acquire.ComponentCallback_swigregister
ComponentCallback_swigregister(ComponentCallback)

class ComponentLocatorBase(ComponentAccess):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ComponentLocatorBase_swiginit(self,lib_mvIMPACT_acquire.new_ComponentLocatorBase(*args))
    def bindComponent(self, *args): return lib_mvIMPACT_acquire.ComponentLocatorBase_bindComponent(self, *args)
    def bindSearchBase(self, *args): return lib_mvIMPACT_acquire.ComponentLocatorBase_bindSearchBase(self, *args)
    def findComponent(self, *args): return lib_mvIMPACT_acquire.ComponentLocatorBase_findComponent(self, *args)
    def searchbase_id(self): return lib_mvIMPACT_acquire.ComponentLocatorBase_searchbase_id(self)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ComponentLocatorBase
ComponentLocatorBase_swigregister = lib_mvIMPACT_acquire.ComponentLocatorBase_swigregister
ComponentLocatorBase_swigregister(ComponentLocatorBase)

class ComponentLocator(ComponentLocatorBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ComponentLocator_swiginit(self,lib_mvIMPACT_acquire.new_ComponentLocator(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ComponentLocator
ComponentLocator_swigregister = lib_mvIMPACT_acquire.ComponentLocator_swigregister
ComponentLocator_swigregister(ComponentLocator)

class ComponentList(Component):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ComponentList_swiginit(self,lib_mvIMPACT_acquire.new_ComponentList(*args))
    def size(self): return lib_mvIMPACT_acquire.ComponentList_size(self)
    def contentDescriptor(self): return lib_mvIMPACT_acquire.ComponentList_contentDescriptor(self)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ComponentList
ComponentList_swigregister = lib_mvIMPACT_acquire.ComponentList_swigregister
ComponentList_swigregister(ComponentList)

class Method(Component):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.Method_swiginit(self,lib_mvIMPACT_acquire.new_Method(*args))
    def call(self, *args): return lib_mvIMPACT_acquire.Method_call(self, *args)
    def paramList(self): return lib_mvIMPACT_acquire.Method_paramList(self)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_Method
Method_swigregister = lib_mvIMPACT_acquire.Method_swigregister
Method_swigregister(Method)

plMaxValue = lib_mvIMPACT_acquire.plMaxValue
plMinValue = lib_mvIMPACT_acquire.plMinValue
plStepWidth = lib_mvIMPACT_acquire.plStepWidth
class Property(Component):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.Property_swiginit(self,lib_mvIMPACT_acquire.new_Property(*args))
    def allowsValueCombinations(self): return lib_mvIMPACT_acquire.Property_allowsValueCombinations(self)
    def dictSize(self): return lib_mvIMPACT_acquire.Property_dictSize(self)
    def getHasDict(self): return lib_mvIMPACT_acquire.Property_getHasDict(self)
    def hasMaxValue(self): return lib_mvIMPACT_acquire.Property_hasMaxValue(self)
    def hasMinValue(self): return lib_mvIMPACT_acquire.Property_hasMinValue(self)
    def hasStepWidth(self): return lib_mvIMPACT_acquire.Property_hasStepWidth(self)
    def readS(self, index = 0, format = ""): return lib_mvIMPACT_acquire.Property_readS(self, index, format)
    def readSArray(self, *args): return lib_mvIMPACT_acquire.Property_readSArray(self, *args)
    def removeValue(self, index = 0): return lib_mvIMPACT_acquire.Property_removeValue(self, index)
    def resizeValArray(self, *args): return lib_mvIMPACT_acquire.Property_resizeValArray(self, *args)
    def stringFormatString(self): return lib_mvIMPACT_acquire.Property_stringFormatString(self)
    def valCount(self): return lib_mvIMPACT_acquire.Property_valCount(self)
    def maxValCount(self): return lib_mvIMPACT_acquire.Property_maxValCount(self)
    def writeS(self, *args): return lib_mvIMPACT_acquire.Property_writeS(self, *args)
    def getTranslDict(self):
        dict = []
        self.getTranslationDict( dict )
        return tuple(dict)

    __swig_destroy__ = lib_mvIMPACT_acquire.delete_Property
Property_swigregister = lib_mvIMPACT_acquire.Property_swigregister
Property_swigregister(Property)

class PropertyF(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyF_swiginit(self,lib_mvIMPACT_acquire.new_PropertyF(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyF_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyF_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyF_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyF_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyF_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyF_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyF_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyF_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyF_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyF_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyF
PropertyF_swigregister = lib_mvIMPACT_acquire.PropertyF_swigregister
PropertyF_swigregister(PropertyF)

class PropertyIAcquisitionMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIAcquisitionMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIAcquisitionMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAcquisitionMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAcquisitionMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIAcquisitionMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIAcquisitionMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIAcquisitionMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIAcquisitionMode
PropertyIAcquisitionMode_swigregister = lib_mvIMPACT_acquire.PropertyIAcquisitionMode_swigregister
PropertyIAcquisitionMode_swigregister(PropertyIAcquisitionMode)

class PropertyIAcquisitionStartStopBehaviour(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIAcquisitionStartStopBehaviour(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIAcquisitionStartStopBehaviour
PropertyIAcquisitionStartStopBehaviour_swigregister = lib_mvIMPACT_acquire.PropertyIAcquisitionStartStopBehaviour_swigregister
PropertyIAcquisitionStartStopBehaviour_swigregister(PropertyIAcquisitionStartStopBehaviour)

class PropertyIAoiMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIAoiMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIAoiMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIAoiMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAoiMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAoiMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIAoiMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIAoiMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIAoiMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIAoiMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIAoiMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIAoiMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIAoiMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIAoiMode
PropertyIAoiMode_swigregister = lib_mvIMPACT_acquire.PropertyIAoiMode_swigregister
PropertyIAoiMode_swigregister(PropertyIAoiMode)

class PropertyIBayerConversionMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIBayerConversionMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIBayerConversionMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerConversionMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBayerConversionMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBayerConversionMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerConversionMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerConversionMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIBayerConversionMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIBayerConversionMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIBayerConversionMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerConversionMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerConversionMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIBayerConversionMode
PropertyIBayerConversionMode_swigregister = lib_mvIMPACT_acquire.PropertyIBayerConversionMode_swigregister
PropertyIBayerConversionMode_swigregister(PropertyIBayerConversionMode)

class PropertyIBayerMosaicParity(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIBayerMosaicParity(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIBayerMosaicParity
PropertyIBayerMosaicParity_swigregister = lib_mvIMPACT_acquire.PropertyIBayerMosaicParity_swigregister
PropertyIBayerMosaicParity_swigregister(PropertyIBayerMosaicParity)

class PropertyIBayerWhiteBalanceResult(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIBayerWhiteBalanceResult(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIBayerWhiteBalanceResult
PropertyIBayerWhiteBalanceResult_swigregister = lib_mvIMPACT_acquire.PropertyIBayerWhiteBalanceResult_swigregister
PropertyIBayerWhiteBalanceResult_swigregister(PropertyIBayerWhiteBalanceResult)

class PropertyIBoolean(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIBoolean_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIBoolean(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIBoolean_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBoolean_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBoolean_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIBoolean_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIBoolean_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIBoolean_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIBoolean_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIBoolean_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIBoolean_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIBoolean_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIBoolean
PropertyIBoolean_swigregister = lib_mvIMPACT_acquire.PropertyIBoolean_swigregister
PropertyIBoolean_swigregister(PropertyIBoolean)

class PropertyICameraOutput(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraOutput_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraOutput(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraOutput_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraOutput_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraOutput_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraOutput_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraOutput_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraOutput_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraOutput_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraOutput_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraOutput_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraOutput_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraOutput
PropertyICameraOutput_swigregister = lib_mvIMPACT_acquire.PropertyICameraOutput_swigregister
PropertyICameraOutput_swigregister(PropertyICameraOutput)

class PropertyIChannelSplitMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIChannelSplitMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIChannelSplitMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIChannelSplitMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIChannelSplitMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIChannelSplitMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIChannelSplitMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIChannelSplitMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIChannelSplitMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIChannelSplitMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIChannelSplitMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIChannelSplitMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIChannelSplitMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIChannelSplitMode
PropertyIChannelSplitMode_swigregister = lib_mvIMPACT_acquire.PropertyIChannelSplitMode_swigregister
PropertyIChannelSplitMode_swigregister(PropertyIChannelSplitMode)

class PropertyIColorTwistInputCorrectionMatrixMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIColorTwistInputCorrectionMatrixMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIColorTwistInputCorrectionMatrixMode
PropertyIColorTwistInputCorrectionMatrixMode_swigregister = lib_mvIMPACT_acquire.PropertyIColorTwistInputCorrectionMatrixMode_swigregister
PropertyIColorTwistInputCorrectionMatrixMode_swigregister(PropertyIColorTwistInputCorrectionMatrixMode)

class PropertyIColorTwistOutputCorrectionMatrixMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIColorTwistOutputCorrectionMatrixMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIColorTwistOutputCorrectionMatrixMode
PropertyIColorTwistOutputCorrectionMatrixMode_swigregister = lib_mvIMPACT_acquire.PropertyIColorTwistOutputCorrectionMatrixMode_swigregister
PropertyIColorTwistOutputCorrectionMatrixMode_swigregister(PropertyIColorTwistOutputCorrectionMatrixMode)

class PropertyIColorProcessingMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIColorProcessingMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIColorProcessingMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIColorProcessingMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIColorProcessingMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIColorProcessingMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIColorProcessingMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIColorProcessingMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIColorProcessingMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIColorProcessingMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIColorProcessingMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIColorProcessingMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIColorProcessingMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIColorProcessingMode
PropertyIColorProcessingMode_swigregister = lib_mvIMPACT_acquire.PropertyIColorProcessingMode_swigregister
PropertyIColorProcessingMode_swigregister(PropertyIColorProcessingMode)

class PropertyIDarkCurrentFilterMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDarkCurrentFilterMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDarkCurrentFilterMode
PropertyIDarkCurrentFilterMode_swigregister = lib_mvIMPACT_acquire.PropertyIDarkCurrentFilterMode_swigregister
PropertyIDarkCurrentFilterMode_swigregister(PropertyIDarkCurrentFilterMode)

class PropertyIDefectivePixelsFilterMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDefectivePixelsFilterMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDefectivePixelsFilterMode
PropertyIDefectivePixelsFilterMode_swigregister = lib_mvIMPACT_acquire.PropertyIDefectivePixelsFilterMode_swigregister
PropertyIDefectivePixelsFilterMode_swigregister(PropertyIDefectivePixelsFilterMode)

class PropertyIDeviceAccessMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceAccessMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceAccessMode
PropertyIDeviceAccessMode_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceAccessMode_swigregister
PropertyIDeviceAccessMode_swigregister(PropertyIDeviceAccessMode)

class PropertyIDeviceCapability(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceCapability_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceCapability(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceCapability_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceCapability_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceCapability_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceCapability_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceCapability_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceCapability_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceCapability_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceCapability_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceCapability_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceCapability_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceCapability
PropertyIDeviceCapability_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceCapability_swigregister
PropertyIDeviceCapability_swigregister(PropertyIDeviceCapability)

class PropertyIDeviceClass(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceClass_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceClass(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceClass_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceClass_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceClass_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceClass_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceClass_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceClass_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceClass_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceClass_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceClass_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceClass_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceClass
PropertyIDeviceClass_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceClass_swigregister
PropertyIDeviceClass_swigregister(PropertyIDeviceClass)

class PropertyIDeviceInterfaceLayout(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceInterfaceLayout(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceInterfaceLayout
PropertyIDeviceInterfaceLayout_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceInterfaceLayout_swigregister
PropertyIDeviceInterfaceLayout_swigregister(PropertyIDeviceInterfaceLayout)

class PropertyIDeviceLoadSettings(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceLoadSettings(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceLoadSettings
PropertyIDeviceLoadSettings_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceLoadSettings_swigregister
PropertyIDeviceLoadSettings_swigregister(PropertyIDeviceLoadSettings)

class PropertyIDeviceState(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceState_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceState(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceState_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceState_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceState_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceState_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceState_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceState_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceState_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceState_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceState_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceState_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceState
PropertyIDeviceState_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceState_swigregister
PropertyIDeviceState_swigregister(PropertyIDeviceState)

class PropertyIFlatFieldFilterCorrectionMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIFlatFieldFilterCorrectionMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIFlatFieldFilterCorrectionMode
PropertyIFlatFieldFilterCorrectionMode_swigregister = lib_mvIMPACT_acquire.PropertyIFlatFieldFilterCorrectionMode_swigregister
PropertyIFlatFieldFilterCorrectionMode_swigregister(PropertyIFlatFieldFilterCorrectionMode)

class PropertyIFlatFieldFilterMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIFlatFieldFilterMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIFlatFieldFilterMode
PropertyIFlatFieldFilterMode_swigregister = lib_mvIMPACT_acquire.PropertyIFlatFieldFilterMode_swigregister
PropertyIFlatFieldFilterMode_swigregister(PropertyIFlatFieldFilterMode)

class PropertyIHWUpdateResult(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIHWUpdateResult_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIHWUpdateResult(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIHWUpdateResult_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIHWUpdateResult_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIHWUpdateResult_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIHWUpdateResult_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIHWUpdateResult_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIHWUpdateResult_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIHWUpdateResult_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIHWUpdateResult_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIHWUpdateResult_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIHWUpdateResult_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIHWUpdateResult
PropertyIHWUpdateResult_swigregister = lib_mvIMPACT_acquire.PropertyIHWUpdateResult_swigregister
PropertyIHWUpdateResult_swigregister(PropertyIHWUpdateResult)

class PropertyIImageBufferPixelFormat(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIImageBufferPixelFormat(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIImageBufferPixelFormat
PropertyIImageBufferPixelFormat_swigregister = lib_mvIMPACT_acquire.PropertyIImageBufferPixelFormat_swigregister
PropertyIImageBufferPixelFormat_swigregister(PropertyIImageBufferPixelFormat)

class PropertyIImageDestinationPixelFormat(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIImageDestinationPixelFormat(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIImageDestinationPixelFormat
PropertyIImageDestinationPixelFormat_swigregister = lib_mvIMPACT_acquire.PropertyIImageDestinationPixelFormat_swigregister
PropertyIImageDestinationPixelFormat_swigregister(PropertyIImageDestinationPixelFormat)

class PropertyIImageProcessingFilter(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIImageProcessingFilter(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIImageProcessingFilter
PropertyIImageProcessingFilter_swigregister = lib_mvIMPACT_acquire.PropertyIImageProcessingFilter_swigregister
PropertyIImageProcessingFilter_swigregister(PropertyIImageProcessingFilter)

class PropertyIRequestImageMemoryMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIRequestImageMemoryMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIRequestImageMemoryMode
PropertyIRequestImageMemoryMode_swigregister = lib_mvIMPACT_acquire.PropertyIRequestImageMemoryMode_swigregister
PropertyIRequestImageMemoryMode_swigregister(PropertyIRequestImageMemoryMode)

class PropertyIImageRequestControlMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIImageRequestControlMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIImageRequestControlMode
PropertyIImageRequestControlMode_swigregister = lib_mvIMPACT_acquire.PropertyIImageRequestControlMode_swigregister
PropertyIImageRequestControlMode_swigregister(PropertyIImageRequestControlMode)

class PropertyILUTGammaMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyILUTGammaMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyILUTGammaMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyILUTGammaMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyILUTGammaMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyILUTGammaMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyILUTGammaMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyILUTGammaMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyILUTGammaMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyILUTGammaMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyILUTGammaMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyILUTGammaMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyILUTGammaMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyILUTGammaMode
PropertyILUTGammaMode_swigregister = lib_mvIMPACT_acquire.PropertyILUTGammaMode_swigregister
PropertyILUTGammaMode_swigregister(PropertyILUTGammaMode)

class PropertyILUTImplementation(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyILUTImplementation_swiginit(self,lib_mvIMPACT_acquire.new_PropertyILUTImplementation(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyILUTImplementation_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyILUTImplementation_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyILUTImplementation_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyILUTImplementation_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyILUTImplementation_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyILUTImplementation_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyILUTImplementation_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyILUTImplementation_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyILUTImplementation_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyILUTImplementation_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyILUTImplementation
PropertyILUTImplementation_swigregister = lib_mvIMPACT_acquire.PropertyILUTImplementation_swigregister
PropertyILUTImplementation_swigregister(PropertyILUTImplementation)

class PropertyILUTInterpolationMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyILUTInterpolationMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyILUTInterpolationMode
PropertyILUTInterpolationMode_swigregister = lib_mvIMPACT_acquire.PropertyILUTInterpolationMode_swigregister
PropertyILUTInterpolationMode_swigregister(PropertyILUTInterpolationMode)

class PropertyTLUTMapping(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyTLUTMapping_swiginit(self,lib_mvIMPACT_acquire.new_PropertyTLUTMapping(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyTLUTMapping_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyTLUTMapping_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyTLUTMapping_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyTLUTMapping_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyTLUTMapping_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyTLUTMapping_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyTLUTMapping_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyTLUTMapping_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyTLUTMapping_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyTLUTMapping_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyTLUTMapping
PropertyTLUTMapping_swigregister = lib_mvIMPACT_acquire.PropertyTLUTMapping_swigregister
PropertyTLUTMapping_swigregister(PropertyTLUTMapping)

class PropertyILUTMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyILUTMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyILUTMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyILUTMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyILUTMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyILUTMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyILUTMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyILUTMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyILUTMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyILUTMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyILUTMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyILUTMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyILUTMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyILUTMode
PropertyILUTMode_swigregister = lib_mvIMPACT_acquire.PropertyILUTMode_swigregister
PropertyILUTMode_swigregister(PropertyILUTMode)

class PropertyIMirrorMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIMirrorMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIMirrorMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIMirrorMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIMirrorMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIMirrorMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIMirrorMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIMirrorMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIMirrorMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIMirrorMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIMirrorMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIMirrorMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIMirrorMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIMirrorMode
PropertyIMirrorMode_swigregister = lib_mvIMPACT_acquire.PropertyIMirrorMode_swigregister
PropertyIMirrorMode_swigregister(PropertyIMirrorMode)

class PropertyIMirrorOperationMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIMirrorOperationMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIMirrorOperationMode
PropertyIMirrorOperationMode_swigregister = lib_mvIMPACT_acquire.PropertyIMirrorOperationMode_swigregister
PropertyIMirrorOperationMode_swigregister(PropertyIMirrorOperationMode)

class PropertyIRequestResult(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIRequestResult_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIRequestResult(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestResult_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIRequestResult_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIRequestResult_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestResult_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestResult_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIRequestResult_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIRequestResult_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIRequestResult_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestResult_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestResult_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIRequestResult
PropertyIRequestResult_swigregister = lib_mvIMPACT_acquire.PropertyIRequestResult_swigregister
PropertyIRequestResult_swigregister(PropertyIRequestResult)

class PropertyIRequestState(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIRequestState_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIRequestState(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestState_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIRequestState_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIRequestState_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestState_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestState_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIRequestState_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIRequestState_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIRequestState_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestState_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIRequestState_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIRequestState
PropertyIRequestState_swigregister = lib_mvIMPACT_acquire.PropertyIRequestState_swigregister
PropertyIRequestState_swigregister(PropertyIRequestState)

class PropertyIScalerMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIScalerMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIScalerMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIScalerMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIScalerMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIScalerMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIScalerMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIScalerMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIScalerMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIScalerMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIScalerMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIScalerMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIScalerMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIScalerMode
PropertyIScalerMode_swigregister = lib_mvIMPACT_acquire.PropertyIScalerMode_swigregister
PropertyIScalerMode_swigregister(PropertyIScalerMode)

class PropertyIScalerInterpolationMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIScalerInterpolationMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIScalerInterpolationMode
PropertyIScalerInterpolationMode_swigregister = lib_mvIMPACT_acquire.PropertyIScalerInterpolationMode_swigregister
PropertyIScalerInterpolationMode_swigregister(PropertyIScalerInterpolationMode)

class PropertyIThreadPriority(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIThreadPriority_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIThreadPriority(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIThreadPriority_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIThreadPriority_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIThreadPriority_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIThreadPriority_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIThreadPriority_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIThreadPriority_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIThreadPriority_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIThreadPriority_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIThreadPriority_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIThreadPriority_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIThreadPriority
PropertyIThreadPriority_swigregister = lib_mvIMPACT_acquire.PropertyIThreadPriority_swigregister
PropertyIThreadPriority_swigregister(PropertyIThreadPriority)

class PropertyIUserDataAccessRight(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIUserDataAccessRight(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIUserDataAccessRight
PropertyIUserDataAccessRight_swigregister = lib_mvIMPACT_acquire.PropertyIUserDataAccessRight_swigregister
PropertyIUserDataAccessRight_swigregister(PropertyIUserDataAccessRight)

class PropertyIUserDataReconnectBehaviour(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIUserDataReconnectBehaviour(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIUserDataReconnectBehaviour
PropertyIUserDataReconnectBehaviour_swigregister = lib_mvIMPACT_acquire.PropertyIUserDataReconnectBehaviour_swigregister
PropertyIUserDataReconnectBehaviour_swigregister(PropertyIUserDataReconnectBehaviour)

class PropertyIWhiteBalanceCalibrationMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIWhiteBalanceCalibrationMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIWhiteBalanceCalibrationMode
PropertyIWhiteBalanceCalibrationMode_swigregister = lib_mvIMPACT_acquire.PropertyIWhiteBalanceCalibrationMode_swigregister
PropertyIWhiteBalanceCalibrationMode_swigregister(PropertyIWhiteBalanceCalibrationMode)

class PropertyIWhiteBalanceParameter(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIWhiteBalanceParameter(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIWhiteBalanceParameter
PropertyIWhiteBalanceParameter_swigregister = lib_mvIMPACT_acquire.PropertyIWhiteBalanceParameter_swigregister
PropertyIWhiteBalanceParameter_swigregister(PropertyIWhiteBalanceParameter)

class PropertyI(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyI_swiginit(self,lib_mvIMPACT_acquire.new_PropertyI(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyI_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyI_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyI_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyI_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyI_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyI_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyI_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyI_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyI_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyI_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyI
PropertyI_swigregister = lib_mvIMPACT_acquire.PropertyI_swigregister
PropertyI_swigregister(PropertyI)

class PropertyI64(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyI64_swiginit(self,lib_mvIMPACT_acquire.new_PropertyI64(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyI64_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyI64_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyI64_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyI64_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyI64_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyI64_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyI64_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyI64_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyI64_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyI64_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyI64
PropertyI64_swigregister = lib_mvIMPACT_acquire.PropertyI64_swigregister
PropertyI64_swigregister(PropertyI64)

class PropertyI64DeviceTriggerOverlap(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_swiginit(self,lib_mvIMPACT_acquire.new_PropertyI64DeviceTriggerOverlap(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyI64DeviceTriggerOverlap
PropertyI64DeviceTriggerOverlap_swigregister = lib_mvIMPACT_acquire.PropertyI64DeviceTriggerOverlap_swigregister
PropertyI64DeviceTriggerOverlap_swigregister(PropertyI64DeviceTriggerOverlap)

class PropertyPtr(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyPtr_swiginit(self,lib_mvIMPACT_acquire.new_PropertyPtr(*args))
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyPtr_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyPtr_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyPtr
PropertyPtr_swigregister = lib_mvIMPACT_acquire.PropertyPtr_swigregister
PropertyPtr_swigregister(PropertyPtr)

class PropertyS(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyS_swiginit(self,lib_mvIMPACT_acquire.new_PropertyS(*args))
    def binaryDataBufferSize(self, index = 0): return lib_mvIMPACT_acquire.PropertyS_binaryDataBufferSize(self, index)
    def binaryDataBufferMaxSize(self): return lib_mvIMPACT_acquire.PropertyS_binaryDataBufferMaxSize(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyS_read(self, *args)
    def readBinary(self, index = 0): return lib_mvIMPACT_acquire.PropertyS_readBinary(self, index)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyS_write(self, *args)
    def writeBinary(self, *args): return lib_mvIMPACT_acquire.PropertyS_writeBinary(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyS
PropertyS_swigregister = lib_mvIMPACT_acquire.PropertyS_swigregister
PropertyS_swigregister(PropertyS)

class UserDataEntry(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def getUDEIsValid(self): return lib_mvIMPACT_acquire.UserDataEntry_getUDEIsValid(self)
    name = _swig_property(lib_mvIMPACT_acquire.UserDataEntry_name_get)
    data = _swig_property(lib_mvIMPACT_acquire.UserDataEntry_data_get)
    access = _swig_property(lib_mvIMPACT_acquire.UserDataEntry_access_get)
    password = _swig_property(lib_mvIMPACT_acquire.UserDataEntry_password_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_UserDataEntry
UserDataEntry_swigregister = lib_mvIMPACT_acquire.UserDataEntry_swigregister
UserDataEntry_swigregister(UserDataEntry)

class UserData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def createEntry(self): return lib_mvIMPACT_acquire.UserData_createEntry(self)
    def deleteEntry(self, *args): return lib_mvIMPACT_acquire.UserData_deleteEntry(self, *args)
    def getFreeMemory(self): return lib_mvIMPACT_acquire.UserData_getFreeMemory(self)
    def getUserDataEntry(self, *args): return lib_mvIMPACT_acquire.UserData_getUserDataEntry(self, *args)
    def validUserDataEntryIndexes(self, *args): return lib_mvIMPACT_acquire.UserData_validUserDataEntryIndexes(self, *args)
    def getIsAvailable(self): return lib_mvIMPACT_acquire.UserData_getIsAvailable(self)
    def writeToHardware(self): return lib_mvIMPACT_acquire.UserData_writeToHardware(self)
    reconnectBehaviour = _swig_property(lib_mvIMPACT_acquire.UserData_reconnectBehaviour_get)
    memoryAvailable_bytes = _swig_property(lib_mvIMPACT_acquire.UserData_memoryAvailable_bytes_get)
    memoryConsumed_bytes = _swig_property(lib_mvIMPACT_acquire.UserData_memoryConsumed_bytes_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_UserData
UserData_swigregister = lib_mvIMPACT_acquire.UserData_swigregister
UserData_swigregister(UserData)

class Device(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.Device_swiginit(self,lib_mvIMPACT_acquire.new_Device(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_Device
    def close(self): return lib_mvIMPACT_acquire.Device_close(self)
    def hasCapability(self, *args): return lib_mvIMPACT_acquire.Device_hasCapability(self, *args)
    def hDev(self): return lib_mvIMPACT_acquire.Device_hDev(self)
    def hDrv(self): return lib_mvIMPACT_acquire.Device_hDrv(self)
    def deviceDriverFeatureList(self): return lib_mvIMPACT_acquire.Device_deviceDriverFeatureList(self)
    def getIsOpen(self): return lib_mvIMPACT_acquire.Device_getIsOpen(self)
    def isInUse(self): return lib_mvIMPACT_acquire.Device_isInUse(self)
    def open(self): return lib_mvIMPACT_acquire.Device_open(self)
    def setID(self, *args): return lib_mvIMPACT_acquire.Device_setID(self, *args)
    def updateFirmware(self): return lib_mvIMPACT_acquire.Device_updateFirmware(self)
    def getUserData(self): return lib_mvIMPACT_acquire.Device_getUserData(self)
    deviceClass = _swig_property(lib_mvIMPACT_acquire.Device_deviceClass_get)
    family = _swig_property(lib_mvIMPACT_acquire.Device_family_get)
    product = _swig_property(lib_mvIMPACT_acquire.Device_product_get)
    capabilities = _swig_property(lib_mvIMPACT_acquire.Device_capabilities_get)
    serial = _swig_property(lib_mvIMPACT_acquire.Device_serial_get)
    state = _swig_property(lib_mvIMPACT_acquire.Device_state_get)
    deviceID = _swig_property(lib_mvIMPACT_acquire.Device_deviceID_get)
    deviceVersion = _swig_property(lib_mvIMPACT_acquire.Device_deviceVersion_get)
    firmwareVersion = _swig_property(lib_mvIMPACT_acquire.Device_firmwareVersion_get)
    loadSettings = _swig_property(lib_mvIMPACT_acquire.Device_loadSettings_get)
    autoLoadSettingOrder = _swig_property(lib_mvIMPACT_acquire.Device_autoLoadSettingOrder_get)
    interfaceLayout = _swig_property(lib_mvIMPACT_acquire.Device_interfaceLayout_get)
    customDataDirectory = _swig_property(lib_mvIMPACT_acquire.Device_customDataDirectory_get)
    defaultRequestCount = _swig_property(lib_mvIMPACT_acquire.Device_defaultRequestCount_get)
    resultQueueCount = _swig_property(lib_mvIMPACT_acquire.Device_resultQueueCount_get)
    allowUnrecommendedFeatures = _swig_property(lib_mvIMPACT_acquire.Device_allowUnrecommendedFeatures_get)
    acquisitionStartStopBehaviour = _swig_property(lib_mvIMPACT_acquire.Device_acquisitionStartStopBehaviour_get)
    HWUpdateResult = _swig_property(lib_mvIMPACT_acquire.Device_HWUpdateResult_get)
    desiredAccess = _swig_property(lib_mvIMPACT_acquire.Device_desiredAccess_get)
    grantedAccess = _swig_property(lib_mvIMPACT_acquire.Device_grantedAccess_get)
Device_swigregister = lib_mvIMPACT_acquire.Device_swigregister
Device_swigregister(Device)

class DeviceManager(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.DeviceManager_swiginit(self,lib_mvIMPACT_acquire.new_DeviceManager(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_DeviceManager
    getVersionAsString = staticmethod(lib_mvIMPACT_acquire.DeviceManager_getVersionAsString)
    def changedCount(self): return lib_mvIMPACT_acquire.DeviceManager_changedCount(self)
    def deviceCount(self): return lib_mvIMPACT_acquire.DeviceManager_deviceCount(self)
    def updateDeviceList(self): return lib_mvIMPACT_acquire.DeviceManager_updateDeviceList(self)
    def getDevice(self, *args): return lib_mvIMPACT_acquire.DeviceManager_getDevice(self, *args)
    def getDeviceBySerial(self, serial = "", devNr = 0, wildcard = '*'): return lib_mvIMPACT_acquire.DeviceManager_getDeviceBySerial(self, serial, devNr, wildcard)
    def getDeviceByFamily(self, family = "", devNr = 0, wildcard = '*'): return lib_mvIMPACT_acquire.DeviceManager_getDeviceByFamily(self, family, devNr, wildcard)
    def getDeviceByProduct(self, product = "", devNr = 0, wildcard = '*'): return lib_mvIMPACT_acquire.DeviceManager_getDeviceByProduct(self, product, devNr, wildcard)
    def getDeviceByProductAndID(self, product = "", devID = 0, wildcard = '*'): return lib_mvIMPACT_acquire.DeviceManager_getDeviceByProductAndID(self, product, devID, wildcard)
    def closeAllDevices(self): return lib_mvIMPACT_acquire.DeviceManager_closeAllDevices(self)
    def __dummy__del__(self):
       self.closeAllDevices()

    def __getitem__(self, *args): return lib_mvIMPACT_acquire.DeviceManager___getitem__(self, *args)
DeviceManager_swigregister = lib_mvIMPACT_acquire.DeviceManager_swigregister
DeviceManager_swigregister(DeviceManager)

def DeviceManager_getVersionAsString(*args):
  return lib_mvIMPACT_acquire.DeviceManager_getVersionAsString(*args)
DeviceManager_getVersionAsString = lib_mvIMPACT_acquire.DeviceManager_getVersionAsString

dltUndefined = lib_mvIMPACT_acquire.dltUndefined
dltSetting = lib_mvIMPACT_acquire.dltSetting
dltRequest = lib_mvIMPACT_acquire.dltRequest
dltRequestCtrl = lib_mvIMPACT_acquire.dltRequestCtrl
dltInfo = lib_mvIMPACT_acquire.dltInfo
dltStatistics = lib_mvIMPACT_acquire.dltStatistics
dltSystemSettings = lib_mvIMPACT_acquire.dltSystemSettings
dltIOSubSystem = lib_mvIMPACT_acquire.dltIOSubSystem
dltRTCtr = lib_mvIMPACT_acquire.dltRTCtr
dltCameraDescriptions = lib_mvIMPACT_acquire.dltCameraDescriptions
dltDeviceSpecificData = lib_mvIMPACT_acquire.dltDeviceSpecificData
dltEventSubSystemSettings = lib_mvIMPACT_acquire.dltEventSubSystemSettings
dltEventSubSystemResults = lib_mvIMPACT_acquire.dltEventSubSystemResults
dltImageMemoryManager = lib_mvIMPACT_acquire.dltImageMemoryManager
dltPseudoLast = lib_mvIMPACT_acquire.dltPseudoLast
dltLast = lib_mvIMPACT_acquire.dltLast
class DeviceComponentLocator(ComponentLocatorBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.DeviceComponentLocator_swiginit(self,lib_mvIMPACT_acquire.new_DeviceComponentLocator(*args))
    def bindSearchBaseList(self, *args): return lib_mvIMPACT_acquire.DeviceComponentLocator_bindSearchBaseList(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_DeviceComponentLocator
DeviceComponentLocator_swigregister = lib_mvIMPACT_acquire.DeviceComponentLocator_swigregister
DeviceComponentLocator_swigregister(DeviceComponentLocator)

class ImageBufferDesc(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ImageBufferDesc_swiginit(self,lib_mvIMPACT_acquire.new_ImageBufferDesc(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ImageBufferDesc
    def clone(self): return lib_mvIMPACT_acquire.ImageBufferDesc_clone(self)
    def getBuffer(self): return lib_mvIMPACT_acquire.ImageBufferDesc_getBuffer(self)
ImageBufferDesc_swigregister = lib_mvIMPACT_acquire.ImageBufferDesc_swigregister
ImageBufferDesc_swigregister(ImageBufferDesc)

class Request(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.Request_swiginit(self,lib_mvIMPACT_acquire.new_Request(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_Request
    def getComponentLocator(self): return lib_mvIMPACT_acquire.Request_getComponentLocator(self)
    def getNumber(self): return lib_mvIMPACT_acquire.Request_getNumber(self)
    def getImageBufferDesc(self): return lib_mvIMPACT_acquire.Request_getImageBufferDesc(self)
    def getInfoIterator(self): return lib_mvIMPACT_acquire.Request_getInfoIterator(self)
    def getChunkCounterCount(self): return lib_mvIMPACT_acquire.Request_getChunkCounterCount(self)
    def getChunkTimerCount(self): return lib_mvIMPACT_acquire.Request_getChunkTimerCount(self)
    def getChunkTimerValue(self, *args): return lib_mvIMPACT_acquire.Request_getChunkTimerValue(self, *args)
    def isOK(self): return lib_mvIMPACT_acquire.Request_isOK(self)
    def configure(self): return lib_mvIMPACT_acquire.Request_configure(self)
    def unlock(self): return lib_mvIMPACT_acquire.Request_unlock(self)
    def attachUserBuffer(self, *args): return lib_mvIMPACT_acquire.Request_attachUserBuffer(self, *args)
    def detachUserBuffer(self): return lib_mvIMPACT_acquire.Request_detachUserBuffer(self)
    requestResult = _swig_property(lib_mvIMPACT_acquire.Request_requestResult_get)
    requestState = _swig_property(lib_mvIMPACT_acquire.Request_requestState_get)
    infoFrameID = _swig_property(lib_mvIMPACT_acquire.Request_infoFrameID_get)
    infoFrameNr = _swig_property(lib_mvIMPACT_acquire.Request_infoFrameNr_get)
    infoExposeStart_us = _swig_property(lib_mvIMPACT_acquire.Request_infoExposeStart_us_get)
    infoExposeTime_us = _swig_property(lib_mvIMPACT_acquire.Request_infoExposeTime_us_get)
    infoTransferDelay_us = _swig_property(lib_mvIMPACT_acquire.Request_infoTransferDelay_us_get)
    infoGain_dB = _swig_property(lib_mvIMPACT_acquire.Request_infoGain_dB_get)
    infoTimeStamp_us = _swig_property(lib_mvIMPACT_acquire.Request_infoTimeStamp_us_get)
    infoSettingUsed = _swig_property(lib_mvIMPACT_acquire.Request_infoSettingUsed_get)
    infoImageAverage = _swig_property(lib_mvIMPACT_acquire.Request_infoImageAverage_get)
    infoVideoChannel = _swig_property(lib_mvIMPACT_acquire.Request_infoVideoChannel_get)
    infoCameraOutputUsed = _swig_property(lib_mvIMPACT_acquire.Request_infoCameraOutputUsed_get)
    infoLineCounter = _swig_property(lib_mvIMPACT_acquire.Request_infoLineCounter_get)
    infoMissingData_pc = _swig_property(lib_mvIMPACT_acquire.Request_infoMissingData_pc_get)
    infoIOStatesAtExposureStart = _swig_property(lib_mvIMPACT_acquire.Request_infoIOStatesAtExposureStart_get)
    infoIOStatesAtExposureEnd = _swig_property(lib_mvIMPACT_acquire.Request_infoIOStatesAtExposureEnd_get)
    chunkOffsetX = _swig_property(lib_mvIMPACT_acquire.Request_chunkOffsetX_get)
    chunkOffsetY = _swig_property(lib_mvIMPACT_acquire.Request_chunkOffsetY_get)
    chunkWidth = _swig_property(lib_mvIMPACT_acquire.Request_chunkWidth_get)
    chunkHeight = _swig_property(lib_mvIMPACT_acquire.Request_chunkHeight_get)
    chunkPixelFormat = _swig_property(lib_mvIMPACT_acquire.Request_chunkPixelFormat_get)
    chunkDynamicRangeMin = _swig_property(lib_mvIMPACT_acquire.Request_chunkDynamicRangeMin_get)
    chunkDynamicRangeMax = _swig_property(lib_mvIMPACT_acquire.Request_chunkDynamicRangeMax_get)
    chunkExposureTime = _swig_property(lib_mvIMPACT_acquire.Request_chunkExposureTime_get)
    chunkTimestamp = _swig_property(lib_mvIMPACT_acquire.Request_chunkTimestamp_get)
    chunkLineStatusAll = _swig_property(lib_mvIMPACT_acquire.Request_chunkLineStatusAll_get)
    imageMemoryMode = _swig_property(lib_mvIMPACT_acquire.Request_imageMemoryMode_get)
    imagePixelFormat = _swig_property(lib_mvIMPACT_acquire.Request_imagePixelFormat_get)
    imageData = _swig_property(lib_mvIMPACT_acquire.Request_imageData_get)
    imageSize = _swig_property(lib_mvIMPACT_acquire.Request_imageSize_get)
    imageFooter = _swig_property(lib_mvIMPACT_acquire.Request_imageFooter_get)
    imageFooterSize = _swig_property(lib_mvIMPACT_acquire.Request_imageFooterSize_get)
    imagePixelPitch = _swig_property(lib_mvIMPACT_acquire.Request_imagePixelPitch_get)
    imageChannelCount = _swig_property(lib_mvIMPACT_acquire.Request_imageChannelCount_get)
    imageChannelOffset = _swig_property(lib_mvIMPACT_acquire.Request_imageChannelOffset_get)
    imageChannelBitDepth = _swig_property(lib_mvIMPACT_acquire.Request_imageChannelBitDepth_get)
    imageLinePitch = _swig_property(lib_mvIMPACT_acquire.Request_imageLinePitch_get)
    imageChannelDesc = _swig_property(lib_mvIMPACT_acquire.Request_imageChannelDesc_get)
    imageBytesPerPixel = _swig_property(lib_mvIMPACT_acquire.Request_imageBytesPerPixel_get)
    imageOffsetX = _swig_property(lib_mvIMPACT_acquire.Request_imageOffsetX_get)
    imageOffsetY = _swig_property(lib_mvIMPACT_acquire.Request_imageOffsetY_get)
    imageWidth = _swig_property(lib_mvIMPACT_acquire.Request_imageWidth_get)
    imageWidthTotal = _swig_property(lib_mvIMPACT_acquire.Request_imageWidthTotal_get)
    imageHeight = _swig_property(lib_mvIMPACT_acquire.Request_imageHeight_get)
    imageHeightTotal = _swig_property(lib_mvIMPACT_acquire.Request_imageHeightTotal_get)
    imageBayerMosaicParity = _swig_property(lib_mvIMPACT_acquire.Request_imageBayerMosaicParity_get)
Request_swigregister = lib_mvIMPACT_acquire.Request_swigregister
Request_swigregister(Request)

class ComponentCollection(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ComponentCollection
    def hObj(self): return lib_mvIMPACT_acquire.ComponentCollection_hObj(self)
    def restoreDefault(self): return lib_mvIMPACT_acquire.ComponentCollection_restoreDefault(self)
ComponentCollection_swigregister = lib_mvIMPACT_acquire.ComponentCollection_swigregister
ComponentCollection_swigregister(ComponentCollection)

class ImageRequestControl(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ImageRequestControl_swiginit(self,lib_mvIMPACT_acquire.new_ImageRequestControl(*args))
    mode = _swig_property(lib_mvIMPACT_acquire.ImageRequestControl_mode_get)
    imageCount = _swig_property(lib_mvIMPACT_acquire.ImageRequestControl_imageCount_get)
    setting = _swig_property(lib_mvIMPACT_acquire.ImageRequestControl_setting_get)
    resultQueue = _swig_property(lib_mvIMPACT_acquire.ImageRequestControl_resultQueue_get)
    requestToUse = _swig_property(lib_mvIMPACT_acquire.ImageRequestControl_requestToUse_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ImageRequestControl
ImageRequestControl_swigregister = lib_mvIMPACT_acquire.ImageRequestControl_swigregister
ImageRequestControl_swigregister(ImageRequestControl)

class RequestFactory(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def createRequest(self, *args): return lib_mvIMPACT_acquire.RequestFactory_createRequest(self, *args)
    def __init__(self): 
        lib_mvIMPACT_acquire.RequestFactory_swiginit(self,lib_mvIMPACT_acquire.new_RequestFactory())
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_RequestFactory
RequestFactory_swigregister = lib_mvIMPACT_acquire.RequestFactory_swigregister
RequestFactory_swigregister(RequestFactory)

class FunctionInterface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.FunctionInterface_swiginit(self,lib_mvIMPACT_acquire.new_FunctionInterface(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_FunctionInterface
    def acquisitionStart(self): return lib_mvIMPACT_acquire.FunctionInterface_acquisitionStart(self)
    def acquisitionStop(self): return lib_mvIMPACT_acquire.FunctionInterface_acquisitionStop(self)
    def createImageRequestControl(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_createImageRequestControl(self, *args)
    def createSetting(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_createSetting(self, *args)
    def getAvailableSettings(self): return lib_mvIMPACT_acquire.FunctionInterface_getAvailableSettings(self)
    def getAvailableImageRequestControls(self): return lib_mvIMPACT_acquire.FunctionInterface_getAvailableImageRequestControls(self)
    def getRequest(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_getRequest(self, *args)
    def getSetting(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_getSetting(self, *args)
    def imageRequestConfigure(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_imageRequestConfigure(self, *args)
    def imageRequestResultQueueElementCount(self, queueNr = 0): return lib_mvIMPACT_acquire.FunctionInterface_imageRequestResultQueueElementCount(self, queueNr)
    def imageRequestReset(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_imageRequestReset(self, *args)
    def imageRequestSingle(self, pImageRequestControl = None, pRequestUsed = None): return lib_mvIMPACT_acquire.FunctionInterface_imageRequestSingle(self, pImageRequestControl, pRequestUsed)
    def imageRequestUnlock(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_imageRequestUnlock(self, *args)
    def imageRequestWaitFor(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_imageRequestWaitFor(self, *args)
    def getCurrentCaptureBufferLayout(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_getCurrentCaptureBufferLayout(self, *args)
    def isRequestNrValid(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_isRequestNrValid(self, *args)
    def loadSetting(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_loadSetting(self, *args)
    def loadSettingFromDefault(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_loadSettingFromDefault(self, *args)
    def requestCount(self): return lib_mvIMPACT_acquire.FunctionInterface_requestCount(self)
    def saveSetting(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_saveSetting(self, *args)
    def saveSettingToDefault(self, *args): return lib_mvIMPACT_acquire.FunctionInterface_saveSettingToDefault(self, *args)
FunctionInterface_swigregister = lib_mvIMPACT_acquire.FunctionInterface_swigregister
FunctionInterface_swigregister(FunctionInterface)

class Info(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.Info_swiginit(self,lib_mvIMPACT_acquire.new_Info(*args))
    deviceDriverVersion = _swig_property(lib_mvIMPACT_acquire.Info_deviceDriverVersion_get)
    driverDate = _swig_property(lib_mvIMPACT_acquire.Info_driverDate_get)
    driverVersion = _swig_property(lib_mvIMPACT_acquire.Info_driverVersion_get)
    state = _swig_property(lib_mvIMPACT_acquire.Info_state_get)
    loadedSettings = _swig_property(lib_mvIMPACT_acquire.Info_loadedSettings_get)
    logFile = _swig_property(lib_mvIMPACT_acquire.Info_logFile_get)
    captureBufferAlignment = _swig_property(lib_mvIMPACT_acquire.Info_captureBufferAlignment_get)
    recommendedListsForUIs = _swig_property(lib_mvIMPACT_acquire.Info_recommendedListsForUIs_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_Info
Info_swigregister = lib_mvIMPACT_acquire.Info_swigregister
Info_swigregister(Info)

class BasicDeviceSettings(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.BasicDeviceSettings_swiginit(self,lib_mvIMPACT_acquire.new_BasicDeviceSettings(*args))
    basedOn = _swig_property(lib_mvIMPACT_acquire.BasicDeviceSettings_basedOn_get)
    imageRequestTimeout_ms = _swig_property(lib_mvIMPACT_acquire.BasicDeviceSettings_imageRequestTimeout_ms_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_BasicDeviceSettings
BasicDeviceSettings_swigregister = lib_mvIMPACT_acquire.BasicDeviceSettings_swigregister
BasicDeviceSettings_swigregister(BasicDeviceSettings)

class TriggerControl(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def getDescription(self): return lib_mvIMPACT_acquire.TriggerControl_getDescription(self)
    def triggerSoftware(self): return lib_mvIMPACT_acquire.TriggerControl_triggerSoftware(self)
    triggerMode = _swig_property(lib_mvIMPACT_acquire.TriggerControl_triggerMode_get)
    triggerSource = _swig_property(lib_mvIMPACT_acquire.TriggerControl_triggerSource_get)
    triggerActivation = _swig_property(lib_mvIMPACT_acquire.TriggerControl_triggerActivation_get)
    triggerDivider = _swig_property(lib_mvIMPACT_acquire.TriggerControl_triggerDivider_get)
    triggerDelayAbs_us = _swig_property(lib_mvIMPACT_acquire.TriggerControl_triggerDelayAbs_us_get)
    triggerDelayLines = _swig_property(lib_mvIMPACT_acquire.TriggerControl_triggerDelayLines_get)
    triggerOverlap = _swig_property(lib_mvIMPACT_acquire.TriggerControl_triggerOverlap_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_TriggerControl
TriggerControl_swigregister = lib_mvIMPACT_acquire.TriggerControl_swigregister
TriggerControl_swigregister(TriggerControl)

class ImageDestination(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ImageDestination_swiginit(self,lib_mvIMPACT_acquire.new_ImageDestination(*args))
    pixelFormat = _swig_property(lib_mvIMPACT_acquire.ImageDestination_pixelFormat_get)
    scalerMode = _swig_property(lib_mvIMPACT_acquire.ImageDestination_scalerMode_get)
    scalerInterpolationMode = _swig_property(lib_mvIMPACT_acquire.ImageDestination_scalerInterpolationMode_get)
    imageWidth = _swig_property(lib_mvIMPACT_acquire.ImageDestination_imageWidth_get)
    imageHeight = _swig_property(lib_mvIMPACT_acquire.ImageDestination_imageHeight_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ImageDestination
ImageDestination_swigregister = lib_mvIMPACT_acquire.ImageDestination_swigregister
ImageDestination_swigregister(ImageDestination)

class RequestInfoConfiguration(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.RequestInfoConfiguration_swiginit(self,lib_mvIMPACT_acquire.new_RequestInfoConfiguration(*args))
    frameNr = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_frameNr_get)
    timeStamp_us = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_timeStamp_us_get)
    settingUsed = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_settingUsed_get)
    frameID = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_frameID_get)
    exposeStart_us = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_exposeStart_us_get)
    exposeTime_us = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_exposeTime_us_get)
    gain_dB = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_gain_dB_get)
    videoChannel = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_videoChannel_get)
    missingData_pc = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_missingData_pc_get)
    transferDelay_us = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_transferDelay_us_get)
    imageAverage = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_imageAverage_get)
    IOStatesAtExposureStart = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_IOStatesAtExposureStart_get)
    triggerCounterAcquisitionStart = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_triggerCounterAcquisitionStart_get)
    triggerCounterFrameStart = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_triggerCounterFrameStart_get)
    lineCounter = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_lineCounter_get)
    userData = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_userData_get)
    lineStatusAll = _swig_property(lib_mvIMPACT_acquire.RequestInfoConfiguration_lineStatusAll_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_RequestInfoConfiguration
RequestInfoConfiguration_swigregister = lib_mvIMPACT_acquire.RequestInfoConfiguration_swigregister
RequestInfoConfiguration_swigregister(RequestInfoConfiguration)

class WhiteBalanceSettings(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    WBAoiMode = _swig_property(lib_mvIMPACT_acquire.WhiteBalanceSettings_WBAoiMode_get)
    aoiHeight = _swig_property(lib_mvIMPACT_acquire.WhiteBalanceSettings_aoiHeight_get)
    aoiStartX = _swig_property(lib_mvIMPACT_acquire.WhiteBalanceSettings_aoiStartX_get)
    aoiStartY = _swig_property(lib_mvIMPACT_acquire.WhiteBalanceSettings_aoiStartY_get)
    aoiWidth = _swig_property(lib_mvIMPACT_acquire.WhiteBalanceSettings_aoiWidth_get)
    totalGain = _swig_property(lib_mvIMPACT_acquire.WhiteBalanceSettings_totalGain_get)
    redGain = _swig_property(lib_mvIMPACT_acquire.WhiteBalanceSettings_redGain_get)
    greenGain = _swig_property(lib_mvIMPACT_acquire.WhiteBalanceSettings_greenGain_get)
    blueGain = _swig_property(lib_mvIMPACT_acquire.WhiteBalanceSettings_blueGain_get)
    WBResult = _swig_property(lib_mvIMPACT_acquire.WhiteBalanceSettings_WBResult_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_WhiteBalanceSettings
WhiteBalanceSettings_swigregister = lib_mvIMPACT_acquire.WhiteBalanceSettings_swigregister
WhiteBalanceSettings_swigregister(WhiteBalanceSettings)

class GainOffsetKneeChannelParameters(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    gain = _swig_property(lib_mvIMPACT_acquire.GainOffsetKneeChannelParameters_gain_get)
    offset_pc = _swig_property(lib_mvIMPACT_acquire.GainOffsetKneeChannelParameters_offset_pc_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_GainOffsetKneeChannelParameters
GainOffsetKneeChannelParameters_swigregister = lib_mvIMPACT_acquire.GainOffsetKneeChannelParameters_swigregister
GainOffsetKneeChannelParameters_swigregister(GainOffsetKneeChannelParameters)

class LUTParameters(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    gamma = _swig_property(lib_mvIMPACT_acquire.LUTParameters_gamma_get)
    gammaAlpha = _swig_property(lib_mvIMPACT_acquire.LUTParameters_gammaAlpha_get)
    gammaMode = _swig_property(lib_mvIMPACT_acquire.LUTParameters_gammaMode_get)
    gammaStartThreshold = _swig_property(lib_mvIMPACT_acquire.LUTParameters_gammaStartThreshold_get)
    valueCount = _swig_property(lib_mvIMPACT_acquire.LUTParameters_valueCount_get)
    inputValues = _swig_property(lib_mvIMPACT_acquire.LUTParameters_inputValues_get)
    outputValues = _swig_property(lib_mvIMPACT_acquire.LUTParameters_outputValues_get)
    directValues = _swig_property(lib_mvIMPACT_acquire.LUTParameters_directValues_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_LUTParameters
LUTParameters_swigregister = lib_mvIMPACT_acquire.LUTParameters_swigregister
LUTParameters_swigregister(LUTParameters)

class MirrorParameters(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    mirrorMode = _swig_property(lib_mvIMPACT_acquire.MirrorParameters_mirrorMode_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_MirrorParameters
MirrorParameters_swigregister = lib_mvIMPACT_acquire.MirrorParameters_swigregister
MirrorParameters_swigregister(MirrorParameters)

class ImageProcessing(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ImageProcessing_swiginit(self,lib_mvIMPACT_acquire.new_ImageProcessing(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ImageProcessing
    colorProcessing = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorProcessing_get)
    bayerConversionMode = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_bayerConversionMode_get)
    whiteBalance = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_whiteBalance_get)
    whiteBalanceCalibration = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_whiteBalanceCalibration_get)
    filter = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_filter_get)
    mirrorOperationMode = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_mirrorOperationMode_get)
    mirrorModeGlobal = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_mirrorModeGlobal_get)
    defectivePixelsFilterMode = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_defectivePixelsFilterMode_get)
    defectivePixelsFilterLeakyPixelDeviation_ADCLimit = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_defectivePixelsFilterLeakyPixelDeviation_ADCLimit_get)
    defectivePixelsFilterColdPixelDeviation_pc = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_defectivePixelsFilterColdPixelDeviation_pc_get)
    defectivePixelsFound = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_defectivePixelsFound_get)
    flatFieldFilterCorrectionMode = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_flatFieldFilterCorrectionMode_get)
    flatFieldFilterMode = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_flatFieldFilterMode_get)
    flatFieldFilterCalibrationImageCount = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_flatFieldFilterCalibrationImageCount_get)
    darkCurrentFilterMode = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_darkCurrentFilterMode_get)
    darkCurrentFilterCalibrationImageCount = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_darkCurrentFilterCalibrationImageCount_get)
    gainOffsetKneeEnable = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_gainOffsetKneeEnable_get)
    gainOffsetKneeMasterOffset_pc = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_gainOffsetKneeMasterOffset_pc_get)
    LUTEnable = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_LUTEnable_get)
    LUTMode = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_LUTMode_get)
    LUTInterpolationMode = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_LUTInterpolationMode_get)
    LUTImplementation = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_LUTImplementation_get)
    LUTMappingHardware = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_LUTMappingHardware_get)
    LUTMappingSoftware = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_LUTMappingSoftware_get)
    tapSortEnable = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_tapSortEnable_get)
    channelSplitEnable = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_channelSplitEnable_get)
    channelSplitMode = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_channelSplitMode_get)
    channelSplitChannelIndex = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_channelSplitChannelIndex_get)
    channelSplitDeinterlaceEnable = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_channelSplitDeinterlaceEnable_get)
    colorTwistInputCorrectionMatrixEnable = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistInputCorrectionMatrixEnable_get)
    colorTwistInputCorrectionMatrixMode = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistInputCorrectionMatrixMode_get)
    colorTwistInputCorrectionMatrixRow0 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistInputCorrectionMatrixRow0_get)
    colorTwistInputCorrectionMatrixRow1 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistInputCorrectionMatrixRow1_get)
    colorTwistInputCorrectionMatrixRow2 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistInputCorrectionMatrixRow2_get)
    colorTwistEnable = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistEnable_get)
    colorTwistRow0 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistRow0_get)
    colorTwistRow1 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistRow1_get)
    colorTwistRow2 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistRow2_get)
    colorTwistOutputCorrectionMatrixEnable = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistOutputCorrectionMatrixEnable_get)
    colorTwistOutputCorrectionMatrixMode = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistOutputCorrectionMatrixMode_get)
    colorTwistOutputCorrectionMatrixRow0 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistOutputCorrectionMatrixRow0_get)
    colorTwistOutputCorrectionMatrixRow1 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistOutputCorrectionMatrixRow1_get)
    colorTwistOutputCorrectionMatrixRow2 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistOutputCorrectionMatrixRow2_get)
    colorTwistResultingMatrixRow0 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistResultingMatrixRow0_get)
    colorTwistResultingMatrixRow1 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistResultingMatrixRow1_get)
    colorTwistResultingMatrixRow2 = _swig_property(lib_mvIMPACT_acquire.ImageProcessing_colorTwistResultingMatrixRow2_get)
    def setSaturation(self, *args): return lib_mvIMPACT_acquire.ImageProcessing_setSaturation(self, *args)
    def getGainOffsetKneeParameter(self, *args): return lib_mvIMPACT_acquire.ImageProcessing_getGainOffsetKneeParameter(self, *args)
    def getGainOffsetKneeParameterCount(self): return lib_mvIMPACT_acquire.ImageProcessing_getGainOffsetKneeParameterCount(self)
    def getMirrorParameter(self, *args): return lib_mvIMPACT_acquire.ImageProcessing_getMirrorParameter(self, *args)
    def getMirrorParameterCount(self): return lib_mvIMPACT_acquire.ImageProcessing_getMirrorParameterCount(self)
    def getLUTParameter(self, *args): return lib_mvIMPACT_acquire.ImageProcessing_getLUTParameter(self, *args)
    def getLUTParameterCount(self): return lib_mvIMPACT_acquire.ImageProcessing_getLUTParameterCount(self)
    def getWBUserSetting(self, *args): return lib_mvIMPACT_acquire.ImageProcessing_getWBUserSetting(self, *args)
    def getWBUserSettingsCount(self): return lib_mvIMPACT_acquire.ImageProcessing_getWBUserSettingsCount(self)
ImageProcessing_swigregister = lib_mvIMPACT_acquire.ImageProcessing_swigregister
ImageProcessing_swigregister(ImageProcessing)

class Statistics(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.Statistics_swiginit(self,lib_mvIMPACT_acquire.new_Statistics(*args))
    def reset(self): return lib_mvIMPACT_acquire.Statistics_reset(self)
    captureTime_s = _swig_property(lib_mvIMPACT_acquire.Statistics_captureTime_s_get)
    errorCount = _swig_property(lib_mvIMPACT_acquire.Statistics_errorCount_get)
    abortedRequestsCount = _swig_property(lib_mvIMPACT_acquire.Statistics_abortedRequestsCount_get)
    timedOutRequestsCount = _swig_property(lib_mvIMPACT_acquire.Statistics_timedOutRequestsCount_get)
    framesPerSecond = _swig_property(lib_mvIMPACT_acquire.Statistics_framesPerSecond_get)
    frameCount = _swig_property(lib_mvIMPACT_acquire.Statistics_frameCount_get)
    imageProcTime_s = _swig_property(lib_mvIMPACT_acquire.Statistics_imageProcTime_s_get)
    formatConvertTime_s = _swig_property(lib_mvIMPACT_acquire.Statistics_formatConvertTime_s_get)
    queueTime_s = _swig_property(lib_mvIMPACT_acquire.Statistics_queueTime_s_get)
    lostImagesCount = _swig_property(lib_mvIMPACT_acquire.Statistics_lostImagesCount_get)
    framesIncompleteCount = _swig_property(lib_mvIMPACT_acquire.Statistics_framesIncompleteCount_get)
    missingDataAverage_pc = _swig_property(lib_mvIMPACT_acquire.Statistics_missingDataAverage_pc_get)
    retransmitCount = _swig_property(lib_mvIMPACT_acquire.Statistics_retransmitCount_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_Statistics
Statistics_swigregister = lib_mvIMPACT_acquire.Statistics_swigregister
Statistics_swigregister(Statistics)

class SystemSettings(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.SystemSettings_swiginit(self,lib_mvIMPACT_acquire.new_SystemSettings(*args))
    requestCount = _swig_property(lib_mvIMPACT_acquire.SystemSettings_requestCount_get)
    workerPriority = _swig_property(lib_mvIMPACT_acquire.SystemSettings_workerPriority_get)
    acquisitionMode = _swig_property(lib_mvIMPACT_acquire.SystemSettings_acquisitionMode_get)
    acquisitionIdleTimeMax_ms = _swig_property(lib_mvIMPACT_acquire.SystemSettings_acquisitionIdleTimeMax_ms_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_SystemSettings
SystemSettings_swigregister = lib_mvIMPACT_acquire.SystemSettings_swigregister
SystemSettings_swigregister(SystemSettings)

class PropertyIAcquisitionField(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIAcquisitionField_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIAcquisitionField(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionField_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAcquisitionField_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAcquisitionField_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionField_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionField_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIAcquisitionField_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIAcquisitionField_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIAcquisitionField_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionField_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIAcquisitionField_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIAcquisitionField
PropertyIAcquisitionField_swigregister = lib_mvIMPACT_acquire.PropertyIAcquisitionField_swigregister
PropertyIAcquisitionField_swigregister(PropertyIAcquisitionField)

class PropertyIAutoControlSpeed(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIAutoControlSpeed(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIAutoControlSpeed
PropertyIAutoControlSpeed_swigregister = lib_mvIMPACT_acquire.PropertyIAutoControlSpeed_swigregister
PropertyIAutoControlSpeed_swigregister(PropertyIAutoControlSpeed)

class PropertyIAutoControlMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIAutoControlMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIAutoControlMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoControlMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAutoControlMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAutoControlMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoControlMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoControlMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIAutoControlMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIAutoControlMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIAutoControlMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoControlMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoControlMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIAutoControlMode
PropertyIAutoControlMode_swigregister = lib_mvIMPACT_acquire.PropertyIAutoControlMode_swigregister
PropertyIAutoControlMode_swigregister(PropertyIAutoControlMode)

class PropertyIAutoExposureControl(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIAutoExposureControl_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIAutoExposureControl(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoExposureControl_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAutoExposureControl_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAutoExposureControl_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoExposureControl_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoExposureControl_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIAutoExposureControl_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIAutoExposureControl_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIAutoExposureControl_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoExposureControl_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoExposureControl_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIAutoExposureControl
PropertyIAutoExposureControl_swigregister = lib_mvIMPACT_acquire.PropertyIAutoExposureControl_swigregister
PropertyIAutoExposureControl_swigregister(PropertyIAutoExposureControl)

class PropertyIAutoGainControl(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIAutoGainControl_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIAutoGainControl(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoGainControl_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAutoGainControl_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAutoGainControl_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoGainControl_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoGainControl_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIAutoGainControl_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIAutoGainControl_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIAutoGainControl_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoGainControl_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoGainControl_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIAutoGainControl
PropertyIAutoGainControl_swigregister = lib_mvIMPACT_acquire.PropertyIAutoGainControl_swigregister
PropertyIAutoGainControl_swigregister(PropertyIAutoGainControl)

class PropertyIAutoOffsetCalibration(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIAutoOffsetCalibration(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIAutoOffsetCalibration
PropertyIAutoOffsetCalibration_swigregister = lib_mvIMPACT_acquire.PropertyIAutoOffsetCalibration_swigregister
PropertyIAutoOffsetCalibration_swigregister(PropertyIAutoOffsetCalibration)

class PropertyIBlueFOXDigitalInputThreshold(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIBlueFOXDigitalInputThreshold(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIBlueFOXDigitalInputThreshold
PropertyIBlueFOXDigitalInputThreshold_swigregister = lib_mvIMPACT_acquire.PropertyIBlueFOXDigitalInputThreshold_swigregister
PropertyIBlueFOXDigitalInputThreshold_swigregister(PropertyIBlueFOXDigitalInputThreshold)

class PropertyIBlueFOXFooterMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIBlueFOXFooterMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIBlueFOXFooterMode
PropertyIBlueFOXFooterMode_swigregister = lib_mvIMPACT_acquire.PropertyIBlueFOXFooterMode_swigregister
PropertyIBlueFOXFooterMode_swigregister(PropertyIBlueFOXFooterMode)

class PropertyIBlueFOXInfoSensorCapabilities(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIBlueFOXInfoSensorCapabilities(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIBlueFOXInfoSensorCapabilities
PropertyIBlueFOXInfoSensorCapabilities_swigregister = lib_mvIMPACT_acquire.PropertyIBlueFOXInfoSensorCapabilities_swigregister
PropertyIBlueFOXInfoSensorCapabilities_swigregister(PropertyIBlueFOXInfoSensorCapabilities)

class PropertyIBlueFOXOffsetAutoBlackSpeed(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIBlueFOXOffsetAutoBlackSpeed(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIBlueFOXOffsetAutoBlackSpeed
PropertyIBlueFOXOffsetAutoBlackSpeed_swigregister = lib_mvIMPACT_acquire.PropertyIBlueFOXOffsetAutoBlackSpeed_swigregister
PropertyIBlueFOXOffsetAutoBlackSpeed_swigregister(PropertyIBlueFOXOffsetAutoBlackSpeed)

class PropertyIBlueFOXSensorTiming(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIBlueFOXSensorTiming(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIBlueFOXSensorTiming
PropertyIBlueFOXSensorTiming_swigregister = lib_mvIMPACT_acquire.PropertyIBlueFOXSensorTiming_swigregister
PropertyIBlueFOXSensorTiming_swigregister(PropertyIBlueFOXSensorTiming)

class PropertyIBlueFOXTransferSize(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIBlueFOXTransferSize(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIBlueFOXTransferSize
PropertyIBlueFOXTransferSize_swigregister = lib_mvIMPACT_acquire.PropertyIBlueFOXTransferSize_swigregister
PropertyIBlueFOXTransferSize_swigregister(PropertyIBlueFOXTransferSize)

class PropertyICameraAoiMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraAoiMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraAoiMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraAoiMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraAoiMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraAoiMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraAoiMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraAoiMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraAoiMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraAoiMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraAoiMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraAoiMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraAoiMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraAoiMode
PropertyICameraAoiMode_swigregister = lib_mvIMPACT_acquire.PropertyICameraAoiMode_swigregister
PropertyICameraAoiMode_swigregister(PropertyICameraAoiMode)

class PropertyICameraBinningMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraBinningMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraBinningMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraBinningMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraBinningMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraBinningMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraBinningMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraBinningMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraBinningMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraBinningMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraBinningMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraBinningMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraBinningMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraBinningMode
PropertyICameraBinningMode_swigregister = lib_mvIMPACT_acquire.PropertyICameraBinningMode_swigregister
PropertyICameraBinningMode_swigregister(PropertyICameraBinningMode)

class PropertyICameraDataFormat(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraDataFormat_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraDataFormat(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraDataFormat_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraDataFormat_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraDataFormat_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraDataFormat_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraDataFormat_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraDataFormat_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraDataFormat_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraDataFormat_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraDataFormat_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraDataFormat_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraDataFormat
PropertyICameraDataFormat_swigregister = lib_mvIMPACT_acquire.PropertyICameraDataFormat_swigregister
PropertyICameraDataFormat_swigregister(PropertyICameraDataFormat)

class PropertyICameraExposeMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraExposeMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraExposeMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExposeMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraExposeMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraExposeMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExposeMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExposeMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraExposeMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraExposeMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraExposeMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExposeMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExposeMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraExposeMode
PropertyICameraExposeMode_swigregister = lib_mvIMPACT_acquire.PropertyICameraExposeMode_swigregister
PropertyICameraExposeMode_swigregister(PropertyICameraExposeMode)

class PropertyICameraExternalSyncEdge(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraExternalSyncEdge(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraExternalSyncEdge
PropertyICameraExternalSyncEdge_swigregister = lib_mvIMPACT_acquire.PropertyICameraExternalSyncEdge_swigregister
PropertyICameraExternalSyncEdge_swigregister(PropertyICameraExternalSyncEdge)

class PropertyICameraExternalSyncOutput(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraExternalSyncOutput(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraExternalSyncOutput
PropertyICameraExternalSyncOutput_swigregister = lib_mvIMPACT_acquire.PropertyICameraExternalSyncOutput_swigregister
PropertyICameraExternalSyncOutput_swigregister(PropertyICameraExternalSyncOutput)

class PropertyICameraFlashMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraFlashMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraFlashMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraFlashMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraFlashMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraFlashMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraFlashMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraFlashMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraFlashMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraFlashMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraFlashMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraFlashMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraFlashMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraFlashMode
PropertyICameraFlashMode_swigregister = lib_mvIMPACT_acquire.PropertyICameraFlashMode_swigregister
PropertyICameraFlashMode_swigregister(PropertyICameraFlashMode)

class PropertyICameraFlashType(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraFlashType_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraFlashType(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraFlashType_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraFlashType_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraFlashType_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraFlashType_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraFlashType_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraFlashType_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraFlashType_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraFlashType_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraFlashType_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraFlashType_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraFlashType
PropertyICameraFlashType_swigregister = lib_mvIMPACT_acquire.PropertyICameraFlashType_swigregister
PropertyICameraFlashType_swigregister(PropertyICameraFlashType)

class PropertyICameraHDRMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraHDRMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraHDRMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraHDRMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraHDRMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraHDRMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraHDRMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraHDRMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraHDRMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraHDRMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraHDRMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraHDRMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraHDRMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraHDRMode
PropertyICameraHDRMode_swigregister = lib_mvIMPACT_acquire.PropertyICameraHDRMode_swigregister
PropertyICameraHDRMode_swigregister(PropertyICameraHDRMode)

class PropertyICameraInterlacedType(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraInterlacedType_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraInterlacedType(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraInterlacedType_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraInterlacedType_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraInterlacedType_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraInterlacedType_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraInterlacedType_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraInterlacedType_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraInterlacedType_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraInterlacedType_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraInterlacedType_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraInterlacedType_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraInterlacedType
PropertyICameraInterlacedType_swigregister = lib_mvIMPACT_acquire.PropertyICameraInterlacedType_swigregister
PropertyICameraInterlacedType_swigregister(PropertyICameraInterlacedType)

class PropertyICameraLinkDataValidMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraLinkDataValidMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraLinkDataValidMode
PropertyICameraLinkDataValidMode_swigregister = lib_mvIMPACT_acquire.PropertyICameraLinkDataValidMode_swigregister
PropertyICameraLinkDataValidMode_swigregister(PropertyICameraLinkDataValidMode)

class PropertyICameraPixelClock(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraPixelClock_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraPixelClock(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraPixelClock_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraPixelClock_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraPixelClock_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraPixelClock_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraPixelClock_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraPixelClock_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraPixelClock_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraPixelClock_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraPixelClock_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraPixelClock_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraPixelClock
PropertyICameraPixelClock_swigregister = lib_mvIMPACT_acquire.PropertyICameraPixelClock_swigregister
PropertyICameraPixelClock_swigregister(PropertyICameraPixelClock)

class PropertyICameraScanMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraScanMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraScanMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraScanMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraScanMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraScanMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraScanMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraScanMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraScanMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraScanMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraScanMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraScanMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraScanMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraScanMode
PropertyICameraScanMode_swigregister = lib_mvIMPACT_acquire.PropertyICameraScanMode_swigregister
PropertyICameraScanMode_swigregister(PropertyICameraScanMode)

class PropertyICameraShutterMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraShutterMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraShutterMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraShutterMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraShutterMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraShutterMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraShutterMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraShutterMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraShutterMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraShutterMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraShutterMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraShutterMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraShutterMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraShutterMode
PropertyICameraShutterMode_swigregister = lib_mvIMPACT_acquire.PropertyICameraShutterMode_swigregister
PropertyICameraShutterMode_swigregister(PropertyICameraShutterMode)

class PropertyICameraTapsXGeometry(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraTapsXGeometry(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraTapsXGeometry
PropertyICameraTapsXGeometry_swigregister = lib_mvIMPACT_acquire.PropertyICameraTapsXGeometry_swigregister
PropertyICameraTapsXGeometry_swigregister(PropertyICameraTapsXGeometry)

class PropertyICameraTapsYGeometry(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraTapsYGeometry(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraTapsYGeometry
PropertyICameraTapsYGeometry_swigregister = lib_mvIMPACT_acquire.PropertyICameraTapsYGeometry_swigregister
PropertyICameraTapsYGeometry_swigregister(PropertyICameraTapsYGeometry)

class PropertyICameraTriggerMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraTriggerMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraTriggerMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTriggerMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraTriggerMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraTriggerMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTriggerMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTriggerMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraTriggerMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraTriggerMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraTriggerMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTriggerMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTriggerMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraTriggerMode
PropertyICameraTriggerMode_swigregister = lib_mvIMPACT_acquire.PropertyICameraTriggerMode_swigregister
PropertyICameraTriggerMode_swigregister(PropertyICameraTriggerMode)

class PropertyICameraTestMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraTestMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraTestMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTestMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraTestMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraTestMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTestMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTestMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraTestMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraTestMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraTestMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTestMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTestMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraTestMode
PropertyICameraTestMode_swigregister = lib_mvIMPACT_acquire.PropertyICameraTestMode_swigregister
PropertyICameraTestMode_swigregister(PropertyICameraTestMode)

class PropertyICameraSerialPortBaudRate(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraSerialPortBaudRate(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraSerialPortBaudRate
PropertyICameraSerialPortBaudRate_swigregister = lib_mvIMPACT_acquire.PropertyICameraSerialPortBaudRate_swigregister
PropertyICameraSerialPortBaudRate_swigregister(PropertyICameraSerialPortBaudRate)

class PropertyICameraTriggerSource(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyICameraTriggerSource_swiginit(self,lib_mvIMPACT_acquire.new_PropertyICameraTriggerSource(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTriggerSource_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraTriggerSource_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyICameraTriggerSource_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTriggerSource_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTriggerSource_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyICameraTriggerSource_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyICameraTriggerSource_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyICameraTriggerSource_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTriggerSource_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyICameraTriggerSource_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyICameraTriggerSource
PropertyICameraTriggerSource_swigregister = lib_mvIMPACT_acquire.PropertyICameraTriggerSource_swigregister
PropertyICameraTriggerSource_swigregister(PropertyICameraTriggerSource)

class PropertyIClampMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIClampMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIClampMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIClampMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIClampMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIClampMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIClampMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIClampMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIClampMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIClampMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIClampMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIClampMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIClampMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIClampMode
PropertyIClampMode_swigregister = lib_mvIMPACT_acquire.PropertyIClampMode_swigregister
PropertyIClampMode_swigregister(PropertyIClampMode)

class PropertyIDeviceAdvancedOptions(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceAdvancedOptions(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceAdvancedOptions
PropertyIDeviceAdvancedOptions_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceAdvancedOptions_swigregister
PropertyIDeviceAdvancedOptions_swigregister(PropertyIDeviceAdvancedOptions)

class PropertyIDeviceDigitalOutputMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceDigitalOutputMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceDigitalOutputMode
PropertyIDeviceDigitalOutputMode_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceDigitalOutputMode_swigregister
PropertyIDeviceDigitalOutputMode_swigregister(PropertyIDeviceDigitalOutputMode)

class PropertyIDeviceEventMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceEventMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceEventMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceEventMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceEventMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceEventMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceEventMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceEventMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceEventMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceEventMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceEventMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceEventMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceEventMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceEventMode
PropertyIDeviceEventMode_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceEventMode_swigregister
PropertyIDeviceEventMode_swigregister(PropertyIDeviceEventMode)

class PropertyIDeviceEventType(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceEventType_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceEventType(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceEventType_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceEventType_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceEventType_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceEventType_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceEventType_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceEventType_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceEventType_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceEventType_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceEventType_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceEventType_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceEventType
PropertyIDeviceEventType_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceEventType_swigregister
PropertyIDeviceEventType_swigregister(PropertyIDeviceEventType)

class PropertyIDeviceImageTrigger(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceImageTrigger(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceImageTrigger
PropertyIDeviceImageTrigger_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceImageTrigger_swigregister
PropertyIDeviceImageTrigger_swigregister(PropertyIDeviceImageTrigger)

class PropertyIDevicePowerMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDevicePowerMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDevicePowerMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDevicePowerMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDevicePowerMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDevicePowerMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDevicePowerMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDevicePowerMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDevicePowerMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDevicePowerMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDevicePowerMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDevicePowerMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDevicePowerMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDevicePowerMode
PropertyIDevicePowerMode_swigregister = lib_mvIMPACT_acquire.PropertyIDevicePowerMode_swigregister
PropertyIDevicePowerMode_swigregister(PropertyIDevicePowerMode)

class PropertyIDeviceScanRateMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceScanRateMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceScanRateMode
PropertyIDeviceScanRateMode_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceScanRateMode_swigregister
PropertyIDeviceScanRateMode_swigregister(PropertyIDeviceScanRateMode)

class PropertyIDeviceSignalOutputStartEvent(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceSignalOutputStartEvent(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceSignalOutputStartEvent
PropertyIDeviceSignalOutputStartEvent_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceSignalOutputStartEvent_swigregister
PropertyIDeviceSignalOutputStartEvent_swigregister(PropertyIDeviceSignalOutputStartEvent)

class PropertyIDeviceSyncOutMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceSyncOutMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceSyncOutMode
PropertyIDeviceSyncOutMode_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceSyncOutMode_swigregister
PropertyIDeviceSyncOutMode_swigregister(PropertyIDeviceSyncOutMode)

class PropertyIDeviceTriggerInterface(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceTriggerInterface(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceTriggerInterface
PropertyIDeviceTriggerInterface_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceTriggerInterface_swigregister
PropertyIDeviceTriggerInterface_swigregister(PropertyIDeviceTriggerInterface)

class PropertyIDeviceTriggerMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDeviceTriggerMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDeviceTriggerMode
PropertyIDeviceTriggerMode_swigregister = lib_mvIMPACT_acquire.PropertyIDeviceTriggerMode_swigregister
PropertyIDeviceTriggerMode_swigregister(PropertyIDeviceTriggerMode)

class PropertyIDigIOState(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDigIOState_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDigIOState(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDigIOState_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDigIOState_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDigIOState_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDigIOState_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDigIOState_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDigIOState_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDigIOState_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDigIOState_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDigIOState_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDigIOState_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDigIOState
PropertyIDigIOState_swigregister = lib_mvIMPACT_acquire.PropertyIDigIOState_swigregister
PropertyIDigIOState_swigregister(PropertyIDigIOState)

class PropertyIDigitalIOMeasurementMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDigitalIOMeasurementMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDigitalIOMeasurementMode
PropertyIDigitalIOMeasurementMode_swigregister = lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementMode_swigregister
PropertyIDigitalIOMeasurementMode_swigregister(PropertyIDigitalIOMeasurementMode)

class PropertyIDigitalIOMeasurementSource(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDigitalIOMeasurementSource(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDigitalIOMeasurementSource
PropertyIDigitalIOMeasurementSource_swigregister = lib_mvIMPACT_acquire.PropertyIDigitalIOMeasurementSource_swigregister
PropertyIDigitalIOMeasurementSource_swigregister(PropertyIDigitalIOMeasurementSource)

class PropertyIDigitalOutputControlMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDigitalOutputControlMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDigitalOutputControlMode
PropertyIDigitalOutputControlMode_swigregister = lib_mvIMPACT_acquire.PropertyIDigitalOutputControlMode_swigregister
PropertyIDigitalOutputControlMode_swigregister(PropertyIDigitalOutputControlMode)

class PropertyIDigitalSignal(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIDigitalSignal_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIDigitalSignal(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalSignal_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDigitalSignal_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIDigitalSignal_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalSignal_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalSignal_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIDigitalSignal_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIDigitalSignal_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIDigitalSignal_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalSignal_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIDigitalSignal_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIDigitalSignal
PropertyIDigitalSignal_swigregister = lib_mvIMPACT_acquire.PropertyIDigitalSignal_swigregister
PropertyIDigitalSignal_swigregister(PropertyIDigitalSignal)

class PropertyIFieldGateMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIFieldGateMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIFieldGateMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIFieldGateMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIFieldGateMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIFieldGateMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIFieldGateMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIFieldGateMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIFieldGateMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIFieldGateMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIFieldGateMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIFieldGateMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIFieldGateMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIFieldGateMode
PropertyIFieldGateMode_swigregister = lib_mvIMPACT_acquire.PropertyIFieldGateMode_swigregister
PropertyIFieldGateMode_swigregister(PropertyIFieldGateMode)

class PropertyII2COperationMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyII2COperationMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyII2COperationMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyII2COperationMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyII2COperationMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyII2COperationMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyII2COperationMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyII2COperationMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyII2COperationMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyII2COperationMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyII2COperationMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyII2COperationMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyII2COperationMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyII2COperationMode
PropertyII2COperationMode_swigregister = lib_mvIMPACT_acquire.PropertyII2COperationMode_swigregister
PropertyII2COperationMode_swigregister(PropertyII2COperationMode)

class PropertyII2COperationStatus(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyII2COperationStatus_swiginit(self,lib_mvIMPACT_acquire.new_PropertyII2COperationStatus(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyII2COperationStatus_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyII2COperationStatus_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyII2COperationStatus_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyII2COperationStatus_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyII2COperationStatus_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyII2COperationStatus_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyII2COperationStatus_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyII2COperationStatus_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyII2COperationStatus_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyII2COperationStatus_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyII2COperationStatus
PropertyII2COperationStatus_swigregister = lib_mvIMPACT_acquire.PropertyII2COperationStatus_swigregister
PropertyII2COperationStatus_swigregister(PropertyII2COperationStatus)

class PropertyIInfoSensorColorMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIInfoSensorColorMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIInfoSensorColorMode
PropertyIInfoSensorColorMode_swigregister = lib_mvIMPACT_acquire.PropertyIInfoSensorColorMode_swigregister
PropertyIInfoSensorColorMode_swigregister(PropertyIInfoSensorColorMode)

class PropertyIInfoSensorType(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIInfoSensorType_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIInfoSensorType(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIInfoSensorType_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIInfoSensorType_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIInfoSensorType_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIInfoSensorType_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIInfoSensorType_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIInfoSensorType_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIInfoSensorType_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIInfoSensorType_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIInfoSensorType_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIInfoSensorType_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIInfoSensorType
PropertyIInfoSensorType_swigregister = lib_mvIMPACT_acquire.PropertyIInfoSensorType_swigregister
PropertyIInfoSensorType_swigregister(PropertyIInfoSensorType)

class PropertyIInterlacedMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIInterlacedMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIInterlacedMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIInterlacedMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIInterlacedMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIInterlacedMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIInterlacedMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIInterlacedMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIInterlacedMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIInterlacedMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIInterlacedMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIInterlacedMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIInterlacedMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIInterlacedMode
PropertyIInterlacedMode_swigregister = lib_mvIMPACT_acquire.PropertyIInterlacedMode_swigregister
PropertyIInterlacedMode_swigregister(PropertyIInterlacedMode)

class PropertyILineCounter(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyILineCounter_swiginit(self,lib_mvIMPACT_acquire.new_PropertyILineCounter(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyILineCounter_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyILineCounter_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyILineCounter_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyILineCounter_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyILineCounter_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyILineCounter_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyILineCounter_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyILineCounter_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyILineCounter_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyILineCounter_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyILineCounter
PropertyILineCounter_swigregister = lib_mvIMPACT_acquire.PropertyILineCounter_swigregister
PropertyILineCounter_swigregister(PropertyILineCounter)

class PropertyIMemoryManagerMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIMemoryManagerMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIMemoryManagerMode
PropertyIMemoryManagerMode_swigregister = lib_mvIMPACT_acquire.PropertyIMemoryManagerMode_swigregister
PropertyIMemoryManagerMode_swigregister(PropertyIMemoryManagerMode)

class PropertyIMemoryManagerPoolMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIMemoryManagerPoolMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIMemoryManagerPoolMode
PropertyIMemoryManagerPoolMode_swigregister = lib_mvIMPACT_acquire.PropertyIMemoryManagerPoolMode_swigregister
PropertyIMemoryManagerPoolMode_swigregister(PropertyIMemoryManagerPoolMode)

class PropertyIOnBoardMemoryMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIOnBoardMemoryMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIOnBoardMemoryMode
PropertyIOnBoardMemoryMode_swigregister = lib_mvIMPACT_acquire.PropertyIOnBoardMemoryMode_swigregister
PropertyIOnBoardMemoryMode_swigregister(PropertyIOnBoardMemoryMode)

class PropertyIPulseStartTrigger(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIPulseStartTrigger(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIPulseStartTrigger
PropertyIPulseStartTrigger_swigregister = lib_mvIMPACT_acquire.PropertyIPulseStartTrigger_swigregister
PropertyIPulseStartTrigger_swigregister(PropertyIPulseStartTrigger)

class PropertyIRTCtrlModes(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIRTCtrlModes_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIRTCtrlModes(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIRTCtrlModes_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIRTCtrlModes_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIRTCtrlModes_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIRTCtrlModes_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIRTCtrlModes_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIRTCtrlModes_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIRTCtrlModes_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIRTCtrlModes_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIRTCtrlModes_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIRTCtrlModes_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIRTCtrlModes
PropertyIRTCtrlModes_swigregister = lib_mvIMPACT_acquire.PropertyIRTCtrlModes_swigregister
PropertyIRTCtrlModes_swigregister(PropertyIRTCtrlModes)

class PropertyIRTProgOpCodes(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIRTProgOpCodes(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIRTProgOpCodes
PropertyIRTProgOpCodes_swigregister = lib_mvIMPACT_acquire.PropertyIRTProgOpCodes_swigregister
PropertyIRTProgOpCodes_swigregister(PropertyIRTProgOpCodes)

class PropertyIScanClock(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIScanClock_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIScanClock(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIScanClock_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIScanClock_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIScanClock_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIScanClock_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIScanClock_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIScanClock_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIScanClock_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIScanClock_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIScanClock_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIScanClock_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIScanClock
PropertyIScanClock_swigregister = lib_mvIMPACT_acquire.PropertyIScanClock_swigregister
PropertyIScanClock_swigregister(PropertyIScanClock)

class PropertyIScanStandard(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIScanStandard_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIScanStandard(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIScanStandard_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIScanStandard_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIScanStandard_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIScanStandard_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIScanStandard_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIScanStandard_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIScanStandard_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIScanStandard_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIScanStandard_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIScanStandard_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIScanStandard
PropertyIScanStandard_swigregister = lib_mvIMPACT_acquire.PropertyIScanStandard_swigregister
PropertyIScanStandard_swigregister(PropertyIScanStandard)

class PropertyITriggerMoment(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyITriggerMoment_swiginit(self,lib_mvIMPACT_acquire.new_PropertyITriggerMoment(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyITriggerMoment_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyITriggerMoment_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyITriggerMoment_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyITriggerMoment_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyITriggerMoment_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyITriggerMoment_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyITriggerMoment_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyITriggerMoment_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyITriggerMoment_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyITriggerMoment_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyITriggerMoment
PropertyITriggerMoment_swigregister = lib_mvIMPACT_acquire.PropertyITriggerMoment_swigregister
PropertyITriggerMoment_swigregister(PropertyITriggerMoment)

class PropertyIVideoStandard(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIVideoStandard_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIVideoStandard(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIVideoStandard_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIVideoStandard_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIVideoStandard_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIVideoStandard_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIVideoStandard_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIVideoStandard_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIVideoStandard_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIVideoStandard_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIVideoStandard_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIVideoStandard_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIVideoStandard
PropertyIVideoStandard_swigregister = lib_mvIMPACT_acquire.PropertyIVideoStandard_swigregister
PropertyIVideoStandard_swigregister(PropertyIVideoStandard)

class PropertyIVirtualDeviceImageType(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIVirtualDeviceImageType(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIVirtualDeviceImageType
PropertyIVirtualDeviceImageType_swigregister = lib_mvIMPACT_acquire.PropertyIVirtualDeviceImageType_swigregister
PropertyIVirtualDeviceImageType_swigregister(PropertyIVirtualDeviceImageType)

class PropertyIVirtualDeviceTestMode(Property):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_swiginit(self,lib_mvIMPACT_acquire.new_PropertyIVirtualDeviceTestMode(*args))
    def getTranslationDict(self, *args): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_getTranslationDict(self, *args)
    def getTranslationDictString(self, index = 0): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_getTranslationDictString(self, index)
    def getTranslationDictValue(self, index = 0): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_getTranslationDictValue(self, index)
    def getTranslationDictStrings(self, *args): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_getTranslationDictStrings(self, *args)
    def getTranslationDictValues(self, *args): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_getTranslationDictValues(self, *args)
    def getMaxValue(self): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_getMaxValue(self)
    def getMinValue(self): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_getMinValue(self)
    def getStepWidth(self): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_getStepWidth(self)
    def read(self, *args): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_read(self, *args)
    def write(self, *args): return lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_write(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PropertyIVirtualDeviceTestMode
PropertyIVirtualDeviceTestMode_swigregister = lib_mvIMPACT_acquire.PropertyIVirtualDeviceTestMode_swigregister
PropertyIVirtualDeviceTestMode_swigregister(PropertyIVirtualDeviceTestMode)

class ImageMemoryManager(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.ImageMemoryManager_swiginit(self,lib_mvIMPACT_acquire.new_ImageMemoryManager(*args))
    mode = _swig_property(lib_mvIMPACT_acquire.ImageMemoryManager_mode_get)
    allocatedDMAMemory_bytes = _swig_property(lib_mvIMPACT_acquire.ImageMemoryManager_allocatedDMAMemory_bytes_get)
    usedDMAMemory_bytes = _swig_property(lib_mvIMPACT_acquire.ImageMemoryManager_usedDMAMemory_bytes_get)
    usedBlocks = _swig_property(lib_mvIMPACT_acquire.ImageMemoryManager_usedBlocks_get)
    poolMode = _swig_property(lib_mvIMPACT_acquire.ImageMemoryManager_poolMode_get)
    poolBlockSize_bytes = _swig_property(lib_mvIMPACT_acquire.ImageMemoryManager_poolBlockSize_bytes_get)
    poolBlockCount = _swig_property(lib_mvIMPACT_acquire.ImageMemoryManager_poolBlockCount_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_ImageMemoryManager
ImageMemoryManager_swigregister = lib_mvIMPACT_acquire.ImageMemoryManager_swigregister
ImageMemoryManager_swigregister(ImageMemoryManager)

class InfoBlueDevice(Info):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.InfoBlueDevice_swiginit(self,lib_mvIMPACT_acquire.new_InfoBlueDevice(*args))
    sensorXRes = _swig_property(lib_mvIMPACT_acquire.InfoBlueDevice_sensorXRes_get)
    sensorYRes = _swig_property(lib_mvIMPACT_acquire.InfoBlueDevice_sensorYRes_get)
    sensorColorMode = _swig_property(lib_mvIMPACT_acquire.InfoBlueDevice_sensorColorMode_get)
    sensorType = _swig_property(lib_mvIMPACT_acquire.InfoBlueDevice_sensorType_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_InfoBlueDevice
InfoBlueDevice_swigregister = lib_mvIMPACT_acquire.InfoBlueDevice_swigregister
InfoBlueDevice_swigregister(InfoBlueDevice)

class InfoBlueCOUGAR(InfoBlueDevice):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.InfoBlueCOUGAR_swiginit(self,lib_mvIMPACT_acquire.new_InfoBlueCOUGAR(*args))
    deviceBootloaderVersion = _swig_property(lib_mvIMPACT_acquire.InfoBlueCOUGAR_deviceBootloaderVersion_get)
    deviceRFSVersion = _swig_property(lib_mvIMPACT_acquire.InfoBlueCOUGAR_deviceRFSVersion_get)
    deviceKernelVersion = _swig_property(lib_mvIMPACT_acquire.InfoBlueCOUGAR_deviceKernelVersion_get)
    deviceFPGAVersion = _swig_property(lib_mvIMPACT_acquire.InfoBlueCOUGAR_deviceFPGAVersion_get)
    deviceStatus = _swig_property(lib_mvIMPACT_acquire.InfoBlueCOUGAR_deviceStatus_get)
    deviceStatusMessage = _swig_property(lib_mvIMPACT_acquire.InfoBlueCOUGAR_deviceStatusMessage_get)
    deviceSensorRevision = _swig_property(lib_mvIMPACT_acquire.InfoBlueCOUGAR_deviceSensorRevision_get)
    clientConnectionState = _swig_property(lib_mvIMPACT_acquire.InfoBlueCOUGAR_clientConnectionState_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_InfoBlueCOUGAR
InfoBlueCOUGAR_swigregister = lib_mvIMPACT_acquire.InfoBlueCOUGAR_swigregister
InfoBlueCOUGAR_swigregister(InfoBlueCOUGAR)

class InfoBlueFOX(InfoBlueDevice):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.InfoBlueFOX_swiginit(self,lib_mvIMPACT_acquire.new_InfoBlueFOX(*args))
    firmwareVersion = _swig_property(lib_mvIMPACT_acquire.InfoBlueFOX_firmwareVersion_get)
    sensorFPGAVersion = _swig_property(lib_mvIMPACT_acquire.InfoBlueFOX_sensorFPGAVersion_get)
    sensorCaps = _swig_property(lib_mvIMPACT_acquire.InfoBlueFOX_sensorCaps_get)
    deviceSensorRevision = _swig_property(lib_mvIMPACT_acquire.InfoBlueFOX_deviceSensorRevision_get)
    userEEPROMSize = _swig_property(lib_mvIMPACT_acquire.InfoBlueFOX_userEEPROMSize_get)
    deviceTemperature = _swig_property(lib_mvIMPACT_acquire.InfoBlueFOX_deviceTemperature_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_InfoBlueFOX
InfoBlueFOX_swigregister = lib_mvIMPACT_acquire.InfoBlueFOX_swigregister
InfoBlueFOX_swigregister(InfoBlueFOX)

class DigitalInput(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get(self): return lib_mvIMPACT_acquire.DigitalInput_get(self)
    def getDescription(self): return lib_mvIMPACT_acquire.DigitalInput_getDescription(self)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_DigitalInput
DigitalInput_swigregister = lib_mvIMPACT_acquire.DigitalInput_swigregister
DigitalInput_swigregister(DigitalInput)

class DigitalOutput(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def flip(self): return lib_mvIMPACT_acquire.DigitalOutput_flip(self)
    def get(self): return lib_mvIMPACT_acquire.DigitalOutput_get(self)
    def isWriteable(self): return lib_mvIMPACT_acquire.DigitalOutput_isWriteable(self)
    def set(self): return lib_mvIMPACT_acquire.DigitalOutput_set(self)
    def reset(self): return lib_mvIMPACT_acquire.DigitalOutput_reset(self)
    def getDescription(self): return lib_mvIMPACT_acquire.DigitalOutput_getDescription(self)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_DigitalOutput
DigitalOutput_swigregister = lib_mvIMPACT_acquire.DigitalOutput_swigregister
DigitalOutput_swigregister(DigitalOutput)

class SyncOutput(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    frequency_Hz = _swig_property(lib_mvIMPACT_acquire.SyncOutput_frequency_Hz_get)
    lowPart_pc = _swig_property(lib_mvIMPACT_acquire.SyncOutput_lowPart_pc_get)
    def getDescription(self): return lib_mvIMPACT_acquire.SyncOutput_getDescription(self)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_SyncOutput
SyncOutput_swigregister = lib_mvIMPACT_acquire.SyncOutput_swigregister
SyncOutput_swigregister(SyncOutput)

class RTCtrProgramStep(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    address = _swig_property(lib_mvIMPACT_acquire.RTCtrProgramStep_address_get)
    frameID = _swig_property(lib_mvIMPACT_acquire.RTCtrProgramStep_frameID_get)
    clocks_us = _swig_property(lib_mvIMPACT_acquire.RTCtrProgramStep_clocks_us_get)
    digitalInputs = _swig_property(lib_mvIMPACT_acquire.RTCtrProgramStep_digitalInputs_get)
    digitalOutputs = _swig_property(lib_mvIMPACT_acquire.RTCtrProgramStep_digitalOutputs_get)
    sensorHeads = _swig_property(lib_mvIMPACT_acquire.RTCtrProgramStep_sensorHeads_get)
    opCode = _swig_property(lib_mvIMPACT_acquire.RTCtrProgramStep_opCode_get)
    controllerRegister = _swig_property(lib_mvIMPACT_acquire.RTCtrProgramStep_controllerRegister_get)
    registerValue = _swig_property(lib_mvIMPACT_acquire.RTCtrProgramStep_registerValue_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_RTCtrProgramStep
RTCtrProgramStep_swigregister = lib_mvIMPACT_acquire.RTCtrProgramStep_swigregister
RTCtrProgramStep_swigregister(RTCtrProgramStep)

class RTCtrProgram(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.RTCtrProgram_swiginit(self,lib_mvIMPACT_acquire.new_RTCtrProgram(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_RTCtrProgram
    def setProgramSize(self, *args): return lib_mvIMPACT_acquire.RTCtrProgram_setProgramSize(self, *args)
    def getProgramSize(self): return lib_mvIMPACT_acquire.RTCtrProgram_getProgramSize(self)
    def programStep(self, *args): return lib_mvIMPACT_acquire.RTCtrProgram_programStep(self, *args)
    mode = _swig_property(lib_mvIMPACT_acquire.RTCtrProgram_mode_get)
    filename = _swig_property(lib_mvIMPACT_acquire.RTCtrProgram_filename_get)
    programState = _swig_property(lib_mvIMPACT_acquire.RTCtrProgram_programState_get)
    def load(self): return lib_mvIMPACT_acquire.RTCtrProgram_load(self)
    def save(self): return lib_mvIMPACT_acquire.RTCtrProgram_save(self)
RTCtrProgram_swigregister = lib_mvIMPACT_acquire.RTCtrProgram_swigregister
RTCtrProgram_swigregister(RTCtrProgram)

class Event(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    mode = _swig_property(lib_mvIMPACT_acquire.Event_mode_get)
    queueDepth = _swig_property(lib_mvIMPACT_acquire.Event_queueDepth_get)
    type = _swig_property(lib_mvIMPACT_acquire.Event_type_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_Event
Event_swigregister = lib_mvIMPACT_acquire.Event_swigregister
Event_swigregister(Event)

class EventWaitResults(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EventWaitResults_swiginit(self,lib_mvIMPACT_acquire.new_EventWaitResults(*args))
    def errorCode(self): return lib_mvIMPACT_acquire.EventWaitResults_errorCode(self)
    def waitMask(self): return lib_mvIMPACT_acquire.EventWaitResults_waitMask(self)
    def resultMask(self): return lib_mvIMPACT_acquire.EventWaitResults_resultMask(self)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EventWaitResults
EventWaitResults_swigregister = lib_mvIMPACT_acquire.EventWaitResults_swigregister
EventWaitResults_swigregister(EventWaitResults)

class EventSubSystem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.EventSubSystem_swiginit(self,lib_mvIMPACT_acquire.new_EventSubSystem(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_EventSubSystem
    def getEventByIndex(self, *args): return lib_mvIMPACT_acquire.EventSubSystem_getEventByIndex(self, *args)
    def getEventByType(self, *args): return lib_mvIMPACT_acquire.EventSubSystem_getEventByType(self, *args)
    def getEventByName(self, *args): return lib_mvIMPACT_acquire.EventSubSystem_getEventByName(self, *args)
    def getEventCount(self): return lib_mvIMPACT_acquire.EventSubSystem_getEventCount(self)
EventSubSystem_swigregister = lib_mvIMPACT_acquire.EventSubSystem_swigregister
EventSubSystem_swigregister(EventSubSystem)

class PulseStartConfiguration(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def number(self): return lib_mvIMPACT_acquire.PulseStartConfiguration_number(self)
    pulseStartTrigger = _swig_property(lib_mvIMPACT_acquire.PulseStartConfiguration_pulseStartTrigger_get)
    digitalSignal = _swig_property(lib_mvIMPACT_acquire.PulseStartConfiguration_digitalSignal_get)
    divider = _swig_property(lib_mvIMPACT_acquire.PulseStartConfiguration_divider_get)
    frequency_Hz = _swig_property(lib_mvIMPACT_acquire.PulseStartConfiguration_frequency_Hz_get)
    triggerMoment = _swig_property(lib_mvIMPACT_acquire.PulseStartConfiguration_triggerMoment_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_PulseStartConfiguration
PulseStartConfiguration_swigregister = lib_mvIMPACT_acquire.PulseStartConfiguration_swigregister
PulseStartConfiguration_swigregister(PulseStartConfiguration)

class IOSubSystem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_IOSubSystem
    def getPulseStartConfiguration(self, *args): return lib_mvIMPACT_acquire.IOSubSystem_getPulseStartConfiguration(self, *args)
    def getPulseStartConfigurationCount(self): return lib_mvIMPACT_acquire.IOSubSystem_getPulseStartConfigurationCount(self)
    def getRTCtrProgram(self, *args): return lib_mvIMPACT_acquire.IOSubSystem_getRTCtrProgram(self, *args)
    def RTCtrProgramCount(self): return lib_mvIMPACT_acquire.IOSubSystem_RTCtrProgramCount(self)
    def getInputCount(self): return lib_mvIMPACT_acquire.IOSubSystem_getInputCount(self)
    def readInputRegister(self): return lib_mvIMPACT_acquire.IOSubSystem_readInputRegister(self)
    def input(self, *args): return lib_mvIMPACT_acquire.IOSubSystem_input(self, *args)
    def output(self, *args): return lib_mvIMPACT_acquire.IOSubSystem_output(self, *args)
    def getOutputCount(self): return lib_mvIMPACT_acquire.IOSubSystem_getOutputCount(self)
    def readOutputRegister(self): return lib_mvIMPACT_acquire.IOSubSystem_readOutputRegister(self)
    def writeOutputRegister(self, *args): return lib_mvIMPACT_acquire.IOSubSystem_writeOutputRegister(self, *args)
IOSubSystem_swigregister = lib_mvIMPACT_acquire.IOSubSystem_swigregister
IOSubSystem_swigregister(IOSubSystem)

class IOSubSystemBlueFOX(IOSubSystem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.IOSubSystemBlueFOX_swiginit(self,lib_mvIMPACT_acquire.new_IOSubSystemBlueFOX(*args))
    def readInputRegisterAtomic(self): return lib_mvIMPACT_acquire.IOSubSystemBlueFOX_readInputRegisterAtomic(self)
    def readOutputRegisterAtomic(self): return lib_mvIMPACT_acquire.IOSubSystemBlueFOX_readOutputRegisterAtomic(self)
    def writeOutputRegister(self, *args): return lib_mvIMPACT_acquire.IOSubSystemBlueFOX_writeOutputRegister(self, *args)
    def writeOutputRegisterAtomic(self, *args): return lib_mvIMPACT_acquire.IOSubSystemBlueFOX_writeOutputRegisterAtomic(self, *args)
    digitalInputThreshold = _swig_property(lib_mvIMPACT_acquire.IOSubSystemBlueFOX_digitalInputThreshold_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_IOSubSystemBlueFOX
IOSubSystemBlueFOX_swigregister = lib_mvIMPACT_acquire.IOSubSystemBlueFOX_swigregister
IOSubSystemBlueFOX_swigregister(IOSubSystemBlueFOX)

class IOSubSystemCommon(IOSubSystem):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.IOSubSystemCommon_swiginit(self,lib_mvIMPACT_acquire.new_IOSubSystemCommon(*args))
    def writeOutputRegister(self, *args): return lib_mvIMPACT_acquire.IOSubSystemCommon_writeOutputRegister(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_IOSubSystemCommon
IOSubSystemCommon_swigregister = lib_mvIMPACT_acquire.IOSubSystemCommon_swigregister
IOSubSystemCommon_swigregister(IOSubSystemCommon)

class OutputSignalGeneratorBlueDevice(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.OutputSignalGeneratorBlueDevice_swiginit(self,lib_mvIMPACT_acquire.new_OutputSignalGeneratorBlueDevice(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_OutputSignalGeneratorBlueDevice
    def undefineSignal(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorBlueDevice_undefineSignal(self, *args)
    def canCreateExposeActiveSignal(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorBlueDevice_canCreateExposeActiveSignal(self, *args)
    def canInvertSignal(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorBlueDevice_canInvertSignal(self, *args)
    def getOutputMode(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorBlueDevice_getOutputMode(self, *args)
    def isOutputModeActive(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorBlueDevice_isOutputModeActive(self, *args)
    def isSignalInverted(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorBlueDevice_isSignalInverted(self, *args)
    def setOutputMode(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorBlueDevice_setOutputMode(self, *args)
OutputSignalGeneratorBlueDevice_swigregister = lib_mvIMPACT_acquire.OutputSignalGeneratorBlueDevice_swigregister
OutputSignalGeneratorBlueDevice_swigregister(OutputSignalGeneratorBlueDevice)

class IOSubSystemFrameGrabber(IOSubSystemCommon):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.IOSubSystemFrameGrabber_swiginit(self,lib_mvIMPACT_acquire.new_IOSubSystemFrameGrabber(*args))
    def getHDOutputCount(self): return lib_mvIMPACT_acquire.IOSubSystemFrameGrabber_getHDOutputCount(self)
    def HDOutput(self, *args): return lib_mvIMPACT_acquire.IOSubSystemFrameGrabber_HDOutput(self, *args)
    def getVDOutputCount(self): return lib_mvIMPACT_acquire.IOSubSystemFrameGrabber_getVDOutputCount(self)
    def VDOutput(self, *args): return lib_mvIMPACT_acquire.IOSubSystemFrameGrabber_VDOutput(self, *args)
    syncOutputMode = _swig_property(lib_mvIMPACT_acquire.IOSubSystemFrameGrabber_syncOutputMode_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_IOSubSystemFrameGrabber
IOSubSystemFrameGrabber_swigregister = lib_mvIMPACT_acquire.IOSubSystemFrameGrabber_swigregister
IOSubSystemFrameGrabber_swigregister(IOSubSystemFrameGrabber)

class OutputSignalGeneratorFrameGrabber(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_swiginit(self,lib_mvIMPACT_acquire.new_OutputSignalGeneratorFrameGrabber(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_OutputSignalGeneratorFrameGrabber
    def definePulse(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_definePulse(self, *args)
    def definePulseSequence(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_definePulseSequence(self, *args)
    def getValidSignalsForPassThroughModes(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_getValidSignalsForPassThroughModes(self, *args)
    def getValidPassThroughSignalCount(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_getValidPassThroughSignalCount(self, *args)
    def getValidPassThroughSignalValue(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_getValidPassThroughSignalValue(self, *args)
    def getValidPassThroughSignalString(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_getValidPassThroughSignalString(self, *args)
    def definePassThroughSignal(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_definePassThroughSignal(self, *args)
    def undefineSignal(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_undefineSignal(self, *args)
    def defineLineScanPulse(self, *args): return lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_defineLineScanPulse(self, *args)
    controlMode = _swig_property(lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_controlMode_get)
    pulseStartEvent = _swig_property(lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_pulseStartEvent_get)
    imageTrigger = _swig_property(lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_imageTrigger_get)
OutputSignalGeneratorFrameGrabber_swigregister = lib_mvIMPACT_acquire.OutputSignalGeneratorFrameGrabber_swigregister
OutputSignalGeneratorFrameGrabber_swigregister(OutputSignalGeneratorFrameGrabber)

class IOSubSystemBlueCOUGAR(IOSubSystemCommon):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.IOSubSystemBlueCOUGAR_swiginit(self,lib_mvIMPACT_acquire.new_IOSubSystemBlueCOUGAR(*args))
    digitalInputThreshold_mV = _swig_property(lib_mvIMPACT_acquire.IOSubSystemBlueCOUGAR_digitalInputThreshold_mV_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_IOSubSystemBlueCOUGAR
IOSubSystemBlueCOUGAR_swigregister = lib_mvIMPACT_acquire.IOSubSystemBlueCOUGAR_swigregister
IOSubSystemBlueCOUGAR_swigregister(IOSubSystemBlueCOUGAR)

class Connector(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.Connector_swiginit(self,lib_mvIMPACT_acquire.new_Connector(*args))
    cameraOutputUsed = _swig_property(lib_mvIMPACT_acquire.Connector_cameraOutputUsed_get)
    videoChannel = _swig_property(lib_mvIMPACT_acquire.Connector_videoChannel_get)
    pinDescription = _swig_property(lib_mvIMPACT_acquire.Connector_pinDescription_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_Connector
Connector_swigregister = lib_mvIMPACT_acquire.Connector_swigregister
Connector_swigregister(Connector)

class CameraSettingsBase(BasicDeviceSettings):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.CameraSettingsBase_swiginit(self,lib_mvIMPACT_acquire.new_CameraSettingsBase(*args))
    aoiHeight = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBase_aoiHeight_get)
    aoiStartX = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBase_aoiStartX_get)
    aoiStartY = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBase_aoiStartY_get)
    aoiWidth = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBase_aoiWidth_get)
    pixelFormat = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBase_pixelFormat_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraSettingsBase
CameraSettingsBase_swigregister = lib_mvIMPACT_acquire.CameraSettingsBase_swigregister
CameraSettingsBase_swigregister(CameraSettingsBase)

class CameraSettingsVirtualDevice(CameraSettingsBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_swiginit(self,lib_mvIMPACT_acquire.new_CameraSettingsVirtualDevice(*args))
    gain_dB = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_gain_dB_get)
    testMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_testMode_get)
    channelBitDepth = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_channelBitDepth_get)
    paddingX = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_paddingX_get)
    tapsXGeometry = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_tapsXGeometry_get)
    tapsYGeometry = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_tapsYGeometry_get)
    frameDelay_us = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_frameDelay_us_get)
    imageDirectory = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_imageDirectory_get)
    imageType = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_imageType_get)
    bayerMosaicParity = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_bayerMosaicParity_get)
    testImageBarWidth = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_testImageBarWidth_get)
    userData = _swig_property(lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_userData_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraSettingsVirtualDevice
CameraSettingsVirtualDevice_swigregister = lib_mvIMPACT_acquire.CameraSettingsVirtualDevice_swigregister
CameraSettingsVirtualDevice_swigregister(CameraSettingsVirtualDevice)

class CameraSettingsV4L2Device(CameraSettingsBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.CameraSettingsV4L2Device_swiginit(self,lib_mvIMPACT_acquire.new_CameraSettingsV4L2Device(*args))
    def getCustomFeatureIterator(self): return lib_mvIMPACT_acquire.CameraSettingsV4L2Device_getCustomFeatureIterator(self)
    imageWidth = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_imageWidth_get)
    imageHeight = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_imageHeight_get)
    videoStandard = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_videoStandard_get)
    pixelFormat = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_pixelFormat_get)
    brightness = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_brightness_get)
    contrast = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_contrast_get)
    saturation = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_saturation_get)
    hue = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_hue_get)
    blackLevel = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_blackLevel_get)
    autoWhiteBalance = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_autoWhiteBalance_get)
    redBalance = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_redBalance_get)
    blueBalance = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_blueBalance_get)
    gamma = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_gamma_get)
    exposure = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_exposure_get)
    autoGain = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_autoGain_get)
    gain = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_gain_get)
    HFlip = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_HFlip_get)
    VFlip = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_VFlip_get)
    powerLineFrequency = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_powerLineFrequency_get)
    hueAuto = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_hueAuto_get)
    whiteBalanceTemperature = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_whiteBalanceTemperature_get)
    sharpness = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_sharpness_get)
    backlightCompensation = _swig_property(lib_mvIMPACT_acquire.CameraSettingsV4L2Device_backlightCompensation_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraSettingsV4L2Device
CameraSettingsV4L2Device_swigregister = lib_mvIMPACT_acquire.CameraSettingsV4L2Device_swigregister
CameraSettingsV4L2Device_swigregister(CameraSettingsV4L2Device)

class AutoControlParameters(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def isAvailable(self): return lib_mvIMPACT_acquire.AutoControlParameters_isAvailable(self)
    aoiHeight = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_aoiHeight_get)
    aoiStartX = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_aoiStartX_get)
    aoiStartY = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_aoiStartY_get)
    aoiWidth = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_aoiWidth_get)
    aoiMode = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_aoiMode_get)
    desiredAverageGreyValue = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_desiredAverageGreyValue_get)
    controllerSpeed = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_controllerSpeed_get)
    controllerGain = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_controllerGain_get)
    controllerIntegralTime_ms = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_controllerIntegralTime_ms_get)
    controllerDerivativeTime_ms = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_controllerDerivativeTime_ms_get)
    controllerDelay_Images = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_controllerDelay_Images_get)
    gainLowerLimit_dB = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_gainLowerLimit_dB_get)
    gainUpperLimit_dB = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_gainUpperLimit_dB_get)
    exposeLowerLimit_us = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_exposeLowerLimit_us_get)
    exposeUpperLimit_us = _swig_property(lib_mvIMPACT_acquire.AutoControlParameters_exposeUpperLimit_us_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_AutoControlParameters
AutoControlParameters_swigregister = lib_mvIMPACT_acquire.AutoControlParameters_swigregister
AutoControlParameters_swigregister(AutoControlParameters)

class CameraSettingsBlueDevice(CameraSettingsBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.CameraSettingsBlueDevice_swiginit(self,lib_mvIMPACT_acquire.new_CameraSettingsBlueDevice(*args))
    autoControlMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_autoControlMode_get)
    autoGainControl = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_autoGainControl_get)
    autoExposeControl = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_autoExposeControl_get)
    gain_dB = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_gain_dB_get)
    offset_pc = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_offset_pc_get)
    pixelClock_KHz = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_pixelClock_KHz_get)
    exposeMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_exposeMode_get)
    expose_us = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_expose_us_get)
    binningMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_binningMode_get)
    testMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_testMode_get)
    triggerMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_triggerMode_get)
    frameDelay_us = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_frameDelay_us_get)
    autoControlParameters = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueDevice_autoControlParameters_get)
    def getAutoControlParameters(self): return lib_mvIMPACT_acquire.CameraSettingsBlueDevice_getAutoControlParameters(self)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraSettingsBlueDevice
CameraSettingsBlueDevice_swigregister = lib_mvIMPACT_acquire.CameraSettingsBlueDevice_swigregister
CameraSettingsBlueDevice_swigregister(CameraSettingsBlueDevice)

class HDRKneePoint(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    HDRControlVoltage_mV = _swig_property(lib_mvIMPACT_acquire.HDRKneePoint_HDRControlVoltage_mV_get)
    HDRExposure_ppm = _swig_property(lib_mvIMPACT_acquire.HDRKneePoint_HDRExposure_ppm_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_HDRKneePoint
HDRKneePoint_swigregister = lib_mvIMPACT_acquire.HDRKneePoint_swigregister
HDRKneePoint_swigregister(HDRKneePoint)

class HDRControl(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.HDRControl_swiginit(self,lib_mvIMPACT_acquire.new_HDRControl(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_HDRControl
    def isAvailable(self): return lib_mvIMPACT_acquire.HDRControl_isAvailable(self)
    def getHDRKneePoint(self, *args): return lib_mvIMPACT_acquire.HDRControl_getHDRKneePoint(self, *args)
    HDREnable = _swig_property(lib_mvIMPACT_acquire.HDRControl_HDREnable_get)
    HDRMode = _swig_property(lib_mvIMPACT_acquire.HDRControl_HDRMode_get)
    HDRKneePointCount = _swig_property(lib_mvIMPACT_acquire.HDRControl_HDRKneePointCount_get)
HDRControl_swigregister = lib_mvIMPACT_acquire.HDRControl_swigregister
HDRControl_swigregister(HDRControl)

class CameraSettingsBlueFOX(CameraSettingsBlueDevice):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.CameraSettingsBlueFOX_swiginit(self,lib_mvIMPACT_acquire.new_CameraSettingsBlueFOX(*args))
    def getHDRControl(self): return lib_mvIMPACT_acquire.CameraSettingsBlueFOX_getHDRControl(self)
    offsetAutoCalibration = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_offsetAutoCalibration_get)
    offsetCorrection_pc = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_offsetCorrection_pc_get)
    offsetAutoBlackLevel = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_offsetAutoBlackLevel_get)
    offsetAutoBlackSpeed = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_offsetAutoBlackSpeed_get)
    lineDelay_clk = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_lineDelay_clk_get)
    advancedOptions = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_advancedOptions_get)
    flashToExposeDelay_us = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_flashToExposeDelay_us_get)
    flashMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_flashMode_get)
    flashType = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_flashType_get)
    shutterMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_shutterMode_get)
    triggerSource = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_triggerSource_get)
    sensorTimingMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueFOX_sensorTimingMode_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraSettingsBlueFOX
CameraSettingsBlueFOX_swigregister = lib_mvIMPACT_acquire.CameraSettingsBlueFOX_swigregister
CameraSettingsBlueFOX_swigregister(CameraSettingsBlueFOX)

class CameraSettingsBlueCOUGAR(CameraSettingsBlueDevice):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.CameraSettingsBlueCOUGAR_swiginit(self,lib_mvIMPACT_acquire.new_CameraSettingsBlueCOUGAR(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraSettingsBlueCOUGAR
    def getTriggerControlCount(self): return lib_mvIMPACT_acquire.CameraSettingsBlueCOUGAR_getTriggerControlCount(self)
    def triggerControl(self, *args): return lib_mvIMPACT_acquire.CameraSettingsBlueCOUGAR_triggerControl(self, *args)
    def getHDRControl(self): return lib_mvIMPACT_acquire.CameraSettingsBlueCOUGAR_getHDRControl(self)
    frameRate_Hz = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueCOUGAR_frameRate_Hz_get)
    partialScanMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueCOUGAR_partialScanMode_get)
    triggerInterface = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueCOUGAR_triggerInterface_get)
    triggerSource = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueCOUGAR_triggerSource_get)
    acquisitionBurstFrameCount = _swig_property(lib_mvIMPACT_acquire.CameraSettingsBlueCOUGAR_acquisitionBurstFrameCount_get)
CameraSettingsBlueCOUGAR_swigregister = lib_mvIMPACT_acquire.CameraSettingsBlueCOUGAR_swigregister
CameraSettingsBlueCOUGAR_swigregister(CameraSettingsBlueCOUGAR)

class CameraSettingsFrameGrabber(CameraSettingsBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_swiginit(self,lib_mvIMPACT_acquire.new_CameraSettingsFrameGrabber(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraSettingsFrameGrabber
    def getTriggerControlCount(self): return lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_getTriggerControlCount(self)
    def triggerControl(self, *args): return lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_triggerControl(self, *args)
    type = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_type_get)
    aoiMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_aoiMode_get)
    gain_dB = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_gain_dB_get)
    offset_mV = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_offset_mV_get)
    scanClock = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_scanClock_get)
    triggerMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_triggerMode_get)
    softwareTriggerPeriod_ms = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_softwareTriggerPeriod_ms_get)
    serialPortBaudrate = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_serialPortBaudrate_get)
    interlacedMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_interlacedMode_get)
    acquisitionField = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_acquisitionField_get)
    scanRateMode = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_scanRateMode_get)
    scanRate_kHz = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_scanRate_kHz_get)
    luminance_pc = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_luminance_pc_get)
    saturation_pc = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_saturation_pc_get)
    hue_pc = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_hue_pc_get)
    contrast_pc = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_contrast_pc_get)
    lineCounter = _swig_property(lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_lineCounter_get)
CameraSettingsFrameGrabber_swigregister = lib_mvIMPACT_acquire.CameraSettingsFrameGrabber_swigregister
CameraSettingsFrameGrabber_swigregister(CameraSettingsFrameGrabber)

class CameraDescriptionBase(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def getClassName(self): return lib_mvIMPACT_acquire.CameraDescriptionBase_getClassName(self)
    def copyDescription(self, *args): return lib_mvIMPACT_acquire.CameraDescriptionBase_copyDescription(self, *args)
    def exportDescription(self): return lib_mvIMPACT_acquire.CameraDescriptionBase_exportDescription(self)
    def importDescription(self): return lib_mvIMPACT_acquire.CameraDescriptionBase_importDescription(self)
    name = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionBase_name_get)
    videoOutput = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionBase_videoOutput_get)
    interlacedType = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionBase_interlacedType_get)
    aoiHeight = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionBase_aoiHeight_get)
    aoiStartX = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionBase_aoiStartX_get)
    aoiStartY = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionBase_aoiStartY_get)
    aoiWidth = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionBase_aoiWidth_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraDescriptionBase
CameraDescriptionBase_swigregister = lib_mvIMPACT_acquire.CameraDescriptionBase_swigregister
CameraDescriptionBase_swigregister(CameraDescriptionBase)

class CameraDescriptionDigitalBase(CameraDescriptionBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    bitsPerPixel = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionDigitalBase_bitsPerPixel_get)
    format = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionDigitalBase_format_get)
    bayerParity = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionDigitalBase_bayerParity_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraDescriptionDigitalBase
CameraDescriptionDigitalBase_swigregister = lib_mvIMPACT_acquire.CameraDescriptionDigitalBase_swigregister
CameraDescriptionDigitalBase_swigregister(CameraDescriptionDigitalBase)

class CameraDescriptionSDI(CameraDescriptionDigitalBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    videoStandard = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionSDI_videoStandard_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraDescriptionSDI
CameraDescriptionSDI_swigregister = lib_mvIMPACT_acquire.CameraDescriptionSDI_swigregister
CameraDescriptionSDI_swigregister(CameraDescriptionSDI)

class CameraDescriptionDigitalBase2(CameraDescriptionDigitalBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    pixelsPerCycle = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionDigitalBase2_pixelsPerCycle_get)
    scanMode = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionDigitalBase2_scanMode_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraDescriptionDigitalBase2
CameraDescriptionDigitalBase2_swigregister = lib_mvIMPACT_acquire.CameraDescriptionDigitalBase2_swigregister
CameraDescriptionDigitalBase2_swigregister(CameraDescriptionDigitalBase2)

class CameraDescriptionCameraLink(CameraDescriptionDigitalBase2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    dataValid = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionCameraLink_dataValid_get)
    tapsXGeometry = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionCameraLink_tapsXGeometry_get)
    tapsYGeometry = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionCameraLink_tapsYGeometry_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraDescriptionCameraLink
CameraDescriptionCameraLink_swigregister = lib_mvIMPACT_acquire.CameraDescriptionCameraLink_swigregister
CameraDescriptionCameraLink_swigregister(CameraDescriptionCameraLink)

class CameraDescriptionDigital(CameraDescriptionDigitalBase2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    frameSync = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionDigital_frameSync_get)
    lineSync = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionDigital_lineSync_get)
    pixelClk = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionDigital_pixelClk_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraDescriptionDigital
CameraDescriptionDigital_swigregister = lib_mvIMPACT_acquire.CameraDescriptionDigital_swigregister
CameraDescriptionDigital_swigregister(CameraDescriptionDigital)

class CameraDescriptionStandardBase(CameraDescriptionBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    videoStandard = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionStandardBase_videoStandard_get)
    scanStandard = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionStandardBase_scanStandard_get)
    scanRate_kHz = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionStandardBase_scanRate_kHz_get)
    startField = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionStandardBase_startField_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraDescriptionStandardBase
CameraDescriptionStandardBase_swigregister = lib_mvIMPACT_acquire.CameraDescriptionStandardBase_swigregister
CameraDescriptionStandardBase_swigregister(CameraDescriptionStandardBase)

class CameraDescriptionStandard(CameraDescriptionStandardBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraDescriptionStandard
CameraDescriptionStandard_swigregister = lib_mvIMPACT_acquire.CameraDescriptionStandard_swigregister
CameraDescriptionStandard_swigregister(CameraDescriptionStandard)

class CameraDescriptionNonStandard(CameraDescriptionStandardBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    lineFrequency_Hz = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionNonStandard_lineFrequency_Hz_get)
    VDOutput = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionNonStandard_VDOutput_get)
    HDOutput = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionNonStandard_HDOutput_get)
    syncOutput = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionNonStandard_syncOutput_get)
    pixelClockOutput = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionNonStandard_pixelClockOutput_get)
    fieldGateMode = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionNonStandard_fieldGateMode_get)
    fieldGateStart = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionNonStandard_fieldGateStart_get)
    fieldGateWidth = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionNonStandard_fieldGateWidth_get)
    clampMode = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionNonStandard_clampMode_get)
    clampStart_us = _swig_property(lib_mvIMPACT_acquire.CameraDescriptionNonStandard_clampStart_us_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraDescriptionNonStandard
CameraDescriptionNonStandard_swigregister = lib_mvIMPACT_acquire.CameraDescriptionNonStandard_swigregister
CameraDescriptionNonStandard_swigregister(CameraDescriptionNonStandard)

class CameraDescriptionManager(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.CameraDescriptionManager_swiginit(self,lib_mvIMPACT_acquire.new_CameraDescriptionManager(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_CameraDescriptionManager
    def getCLCameraDescriptionCount(self): return lib_mvIMPACT_acquire.CameraDescriptionManager_getCLCameraDescriptionCount(self)
    def cameraDescriptionCameraLink(self, *args): return lib_mvIMPACT_acquire.CameraDescriptionManager_cameraDescriptionCameraLink(self, *args)
    def getSDICameraDescriptionCount(self): return lib_mvIMPACT_acquire.CameraDescriptionManager_getSDICameraDescriptionCount(self)
    def cameraDescriptionSDI(self, *args): return lib_mvIMPACT_acquire.CameraDescriptionManager_cameraDescriptionSDI(self, *args)
    def getDigitalCameraDescriptionCount(self): return lib_mvIMPACT_acquire.CameraDescriptionManager_getDigitalCameraDescriptionCount(self)
    def cameraDescriptionDigital(self, *args): return lib_mvIMPACT_acquire.CameraDescriptionManager_cameraDescriptionDigital(self, *args)
    def getStandardCameraDescriptionCount(self): return lib_mvIMPACT_acquire.CameraDescriptionManager_getStandardCameraDescriptionCount(self)
    def cameraDescriptionStandard(self, *args): return lib_mvIMPACT_acquire.CameraDescriptionManager_cameraDescriptionStandard(self, *args)
    def getNonStandardCameraDescriptionCount(self): return lib_mvIMPACT_acquire.CameraDescriptionManager_getNonStandardCameraDescriptionCount(self)
    def cameraDescriptionNonStandard(self, *args): return lib_mvIMPACT_acquire.CameraDescriptionManager_cameraDescriptionNonStandard(self, *args)
    def getTotalCameraDescriptionCount(self): return lib_mvIMPACT_acquire.CameraDescriptionManager_getTotalCameraDescriptionCount(self)
CameraDescriptionManager_swigregister = lib_mvIMPACT_acquire.CameraDescriptionManager_swigregister
CameraDescriptionManager_swigregister(CameraDescriptionManager)

class I2CControl(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.I2CControl_swiginit(self,lib_mvIMPACT_acquire.new_I2CControl(*args))
    I2COperationMode = _swig_property(lib_mvIMPACT_acquire.I2CControl_I2COperationMode_get)
    I2COperationExecute = _swig_property(lib_mvIMPACT_acquire.I2CControl_I2COperationExecute_get)
    I2COperationStatus = _swig_property(lib_mvIMPACT_acquire.I2CControl_I2COperationStatus_get)
    I2CDeviceAddress = _swig_property(lib_mvIMPACT_acquire.I2CControl_I2CDeviceAddress_get)
    I2CDeviceSubAddressWidth = _swig_property(lib_mvIMPACT_acquire.I2CControl_I2CDeviceSubAddressWidth_get)
    I2CDeviceSubAddress = _swig_property(lib_mvIMPACT_acquire.I2CControl_I2CDeviceSubAddress_get)
    I2CBuffer = _swig_property(lib_mvIMPACT_acquire.I2CControl_I2CBuffer_get)
    I2CBufferLength = _swig_property(lib_mvIMPACT_acquire.I2CControl_I2CBufferLength_get)
    def I2CRead(self, *args): return lib_mvIMPACT_acquire.I2CControl_I2CRead(self, *args)
    def I2CWrite(self, *args): return lib_mvIMPACT_acquire.I2CControl_I2CWrite(self, *args)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_I2CControl
I2CControl_swigregister = lib_mvIMPACT_acquire.I2CControl_swigregister
I2CControl_swigregister(I2CControl)

class MotorFocusControl(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.MotorFocusControl_swiginit(self,lib_mvIMPACT_acquire.new_MotorFocusControl(*args))
    motorFocusSendBuffer = _swig_property(lib_mvIMPACT_acquire.MotorFocusControl_motorFocusSendBuffer_get)
    motorFocusReceiveBuffer = _swig_property(lib_mvIMPACT_acquire.MotorFocusControl_motorFocusReceiveBuffer_get)
    motorFocusSend = _swig_property(lib_mvIMPACT_acquire.MotorFocusControl_motorFocusSend_get)
    motorFocusIncrement = _swig_property(lib_mvIMPACT_acquire.MotorFocusControl_motorFocusIncrement_get)
    motorFocusNear = _swig_property(lib_mvIMPACT_acquire.MotorFocusControl_motorFocusNear_get)
    motorFocusFar = _swig_property(lib_mvIMPACT_acquire.MotorFocusControl_motorFocusFar_get)
    motorFocusAbsolutePositionCurrent = _swig_property(lib_mvIMPACT_acquire.MotorFocusControl_motorFocusAbsolutePositionCurrent_get)
    motorFocusAbsolutePositionDesired = _swig_property(lib_mvIMPACT_acquire.MotorFocusControl_motorFocusAbsolutePositionDesired_get)
    motorFocusMoveToAbsolutePositionDesired = _swig_property(lib_mvIMPACT_acquire.MotorFocusControl_motorFocusMoveToAbsolutePositionDesired_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_MotorFocusControl
MotorFocusControl_swigregister = lib_mvIMPACT_acquire.MotorFocusControl_swigregister
MotorFocusControl_swigregister(MotorFocusControl)

class DigitalIOMeasurementControl(ComponentCollection):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.DigitalIOMeasurementControl_swiginit(self,lib_mvIMPACT_acquire.new_DigitalIOMeasurementControl(*args))
    digitalIOMeasurementMode = _swig_property(lib_mvIMPACT_acquire.DigitalIOMeasurementControl_digitalIOMeasurementMode_get)
    digitalIOMeasurementSource = _swig_property(lib_mvIMPACT_acquire.DigitalIOMeasurementControl_digitalIOMeasurementSource_get)
    digitalIOMeasurementResult = _swig_property(lib_mvIMPACT_acquire.DigitalIOMeasurementControl_digitalIOMeasurementResult_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_DigitalIOMeasurementControl
DigitalIOMeasurementControl_swigregister = lib_mvIMPACT_acquire.DigitalIOMeasurementControl_swigregister
DigitalIOMeasurementControl_swigregister(DigitalIOMeasurementControl)

class FullSettingsBase(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.FullSettingsBase_swiginit(self,lib_mvIMPACT_acquire.new_FullSettingsBase(*args))
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_FullSettingsBase
    imageProcessing = _swig_property(lib_mvIMPACT_acquire.FullSettingsBase_imageProcessing_get)
    imageDestination = _swig_property(lib_mvIMPACT_acquire.FullSettingsBase_imageDestination_get)
    basedOn = _swig_property(lib_mvIMPACT_acquire.FullSettingsBase_basedOn_get)
FullSettingsBase_swigregister = lib_mvIMPACT_acquire.FullSettingsBase_swigregister
FullSettingsBase_swigregister(FullSettingsBase)

class SettingsBlueFOX(FullSettingsBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.SettingsBlueFOX_swiginit(self,lib_mvIMPACT_acquire.new_SettingsBlueFOX(*args))
    cameraSetting = _swig_property(lib_mvIMPACT_acquire.SettingsBlueFOX_cameraSetting_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_SettingsBlueFOX
SettingsBlueFOX_swigregister = lib_mvIMPACT_acquire.SettingsBlueFOX_swigregister
SettingsBlueFOX_swigregister(SettingsBlueFOX)

class SettingsFrameGrabber(FullSettingsBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.SettingsFrameGrabber_swiginit(self,lib_mvIMPACT_acquire.new_SettingsFrameGrabber(*args))
    cameraSetting = _swig_property(lib_mvIMPACT_acquire.SettingsFrameGrabber_cameraSetting_get)
    connector = _swig_property(lib_mvIMPACT_acquire.SettingsFrameGrabber_connector_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_SettingsFrameGrabber
SettingsFrameGrabber_swigregister = lib_mvIMPACT_acquire.SettingsFrameGrabber_swigregister
SettingsFrameGrabber_swigregister(SettingsFrameGrabber)

class SystemBlueFOX(SystemSettings):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.SystemBlueFOX_swiginit(self,lib_mvIMPACT_acquire.new_SystemBlueFOX(*args))
    transferSize = _swig_property(lib_mvIMPACT_acquire.SystemBlueFOX_transferSize_get)
    footerMode = _swig_property(lib_mvIMPACT_acquire.SystemBlueFOX_footerMode_get)
    footerCheckEnable = _swig_property(lib_mvIMPACT_acquire.SystemBlueFOX_footerCheckEnable_get)
    powerMode = _swig_property(lib_mvIMPACT_acquire.SystemBlueFOX_powerMode_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_SystemBlueFOX
SystemBlueFOX_swigregister = lib_mvIMPACT_acquire.SystemBlueFOX_swigregister
SystemBlueFOX_swigregister(SystemBlueFOX)

class SystemV4L2(SystemSettings):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        lib_mvIMPACT_acquire.SystemV4L2_swiginit(self,lib_mvIMPACT_acquire.new_SystemV4L2(*args))
    volume = _swig_property(lib_mvIMPACT_acquire.SystemV4L2_volume_get)
    balance = _swig_property(lib_mvIMPACT_acquire.SystemV4L2_balance_get)
    bass = _swig_property(lib_mvIMPACT_acquire.SystemV4L2_bass_get)
    treble = _swig_property(lib_mvIMPACT_acquire.SystemV4L2_treble_get)
    mute = _swig_property(lib_mvIMPACT_acquire.SystemV4L2_mute_get)
    loudness = _swig_property(lib_mvIMPACT_acquire.SystemV4L2_loudness_get)
    __swig_destroy__ = lib_mvIMPACT_acquire.delete_SystemV4L2
SystemV4L2_swigregister = lib_mvIMPACT_acquire.SystemV4L2_swigregister
SystemV4L2_swigregister(SystemV4L2)

Component.isDefault = property (Component.getIsDefault, None, None, None)
Component.isList = property (Component.getIsList, None, None, None)
Component.isMeth = property (Component.getIsMeth, None, None, None)
Component.isProp = property (Component.getIsProp, None, None, None)
Component.isValid = property (Component.getIsValid, None, None, None)
Component.isVisible = property (Component.getIsVisible, None, None, None)
Component.isWriteable = property (Component.getIsWriteable, None, None, None)
UserDataEntry.isValid = property (UserDataEntry.getUDEIsValid, None, None, None)
UserData.isAvailable = property (UserData.getIsAvailable, None, None, None)
Device.isOpen = property (Device.getIsOpen, None, None, None)

Property.hasDict = property (Property.getHasDict, None, None, None)

# vice.ID = property (None, Device.setID, None, None)
Device.userData = property (Device.getUserData, None, None, None)

Request.imageBufferDesc = property (Request.getImageBufferDesc, None, None, None)
Request.infoIterator = property (Request.getInfoIterator, None, None, None)
Request.number = property (Request.getNumber, None, None, None)

ImageBufferDesc.buffer = property (ImageBufferDesc.getBuffer, None, None, None)

ImageProcessing.WBUserSettingsCount = property (ImageProcessing.getWBUserSettingsCount, None, None, None)
ImageProcessing.gainOffsetKneeParameterCount = property (ImageProcessing.getGainOffsetKneeParameterCount, None, None, None)
ImageProcessing.LUTParameterCount = property (ImageProcessing.getLUTParameterCount, None, None, None)

Event.data = property (Event.getData, None, None, None)
EventSubSystem.eventCount = property (EventSubSystem.getEventCount, None, None, None)
FunctionInterface.availableSettings = property (FunctionInterface.getAvailableSettings, None, None, None)
FunctionInterface.availableImageRequestControls = property (FunctionInterface.getAvailableImageRequestControls, None, None, None)

RTCtrProgram.programSize = property (RTCtrProgram.getProgramSize, RTCtrProgram.setProgramSize, None, None)

DigitalInput.description = property (DigitalInput.getDescription, None, None, None)

DigitalOutput.description = property (DigitalOutput.getDescription, None, None, None)

SyncOutput.description = property (SyncOutput.getDescription, None, None, None)

TriggerControl.description = property (TriggerControl.getDescription, None, None, None)

IOSubSystem.inputCount = property (IOSubSystem.getInputCount, None, None, None)
IOSubSystem.outputCount = property (IOSubSystem.getOutputCount, None, None, None)
IOSubSystem.pulseStartConfigurationCount = property (IOSubSystem.getPulseStartConfigurationCount, None, None, None)

IOSubSystemFrameGrabber.hDOutputCount = property (IOSubSystemFrameGrabber.getHDOutputCount, None, None, None)
IOSubSystemFrameGrabber.vDOutputCount = property (IOSubSystemFrameGrabber.getVDOutputCount, None, None, None)

CameraDescriptionBase.className = property (CameraDescriptionBase.getClassName, None, None, None)

CameraDescriptionManager.cLCameraDescriptionCount = property (CameraDescriptionManager.getCLCameraDescriptionCount, None, None, None)
CameraDescriptionManager.digitalCameraDescriptionCount = property (CameraDescriptionManager.getDigitalCameraDescriptionCount, None, None, None)
CameraDescriptionManager.nonStandardCameraDescriptionCount = property (CameraDescriptionManager.getNonStandardCameraDescriptionCount, None, None, None)
CameraDescriptionManager.standardCameraDescriptionCount = property (CameraDescriptionManager.getStandardCameraDescriptionCount, None, None, None)

CameraSettingsBlueCOUGAR.triggerControlCount = property (CameraSettingsBlueCOUGAR.getTriggerControlCount, None, None, None)
CameraSettingsFrameGrabber.triggerControlCount = property (CameraSettingsFrameGrabber.getTriggerControlCount, None, None, None)

Property.translationDict = property (Property.getTranslDict, None, None, None)



